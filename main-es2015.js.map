{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/accommodation/accommodation.component.ts","./src/app/accommodation/accommodation.component.html","./src/app/add-hotel/add-hotel.component.ts","./src/app/add-hotel/add-hotel.component.html","./src/app/add-vehicle/add-vehicle.component.ts","./src/app/add-vehicle/add-vehicle.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/book-package/book-package.component.ts","./src/app/book-package/book-package.component.html","./src/app/customer-care/customer-care.component.ts","./src/app/customer-care/customer-care.component.html","./src/app/edit-details/edit-details.component.ts","./src/app/edit-details/edit-details.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/layouts/common-layout/common-layout.component.ts","./src/app/layouts/common-layout/common-layout.component.html","./src/app/layouts/employee-layout/employee-layout.component.ts","./src/app/layouts/employee-layout/employee-layout.component.html","./src/app/layouts/user-layout/user-layout.component.ts","./src/app/layouts/user-layout/user-layout.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/payment/payment.component.ts","./src/app/payment/payment.component.html","./src/app/popular-packages/popular-packages.component.ts","./src/app/popular-packages/popular-packages.component.html","./src/app/protected/protected.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/shared/breadcrumb/breadcrumb.component.ts","./src/app/shared/breadcrumb/breadcrumb.component.html","./src/app/view-bookings/view-bookings.component.ts","./src/app/view-bookings/view-bookings.component.html","./src/app/view-hotels/view-hotels.component.ts","./src/app/view-hotels/view-hotels.component.html","./src/app/view-package-details/view-package-details.component.ts","./src/app/view-package-details/view-package-details.component.html","./src/app/view-packages/view-packages.component.ts","./src/app/view-packages/view-packages.component.html","./src/app/view-vehicles/view-vehicles.component.ts","./src/app/view-vehicles/view-vehicles.component.html","./src/environments/environment.ts","./src/main.ts","./src/travelAway-services/auth-service/authservice.ts","./src/travelAway-services/auth.interceptor.ts","./src/travelAway-services/package-service/package.service.ts","./src/travelAway-services/user-service/user.service.ts","./util.inspect (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { IAccommodation } from '../travelAway-interfaces/Accommodation';\r\n\r\n@Component({\r\n  selector: 'app-accommodation',\r\n  templateUrl: './accommodation.component.html',\r\n  styleUrls: ['./accommodation.component.css']\r\n})\r\nexport class AccommodationComponent implements OnInit {\r\n  bookingId: string;\r\n  userRole: string;\r\n  errorMsg: any;\r\n  status: boolean;\r\n  showDiv: boolean = false;\r\n  msg: string;\r\n  cities: string[];\r\n  ratings: number[];\r\n  hotels: string[];\r\n  rawcities: string;\r\n  cost: number;\r\n  rooms: number;\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bookingId = sessionStorage.getItem('bookingId');\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n    this.getCitiesByBookingId(this.bookingId);\r\n  }\r\n\r\n  getCitiesByBookingId(bookingId:string) {\r\n    this.userService.getCitiesByBookId(bookingId).subscribe(\r\n      responseCitiesStatus => {\r\n        this.rawcities = responseCitiesStatus;\r\n        this.cities = this.rawcities.split(\",\");\r\n      },\r\n      responseCitiesError => {\r\n        this.errorMsg = responseCitiesError;\r\n      },\r\n      () => console.log(\"GetCity method executed successfully\")\r\n    );\r\n    \r\n  }\r\n\r\n  searchrating(city: string) {\r\n    this.userService.getHotelRatingByCity(city).subscribe(\r\n      responseCitiesStatus => {\r\n        this.ratings = responseCitiesStatus;\r\n        \r\n      },\r\n      responseCitiesError => {\r\n        this.errorMsg = responseCitiesError;\r\n      },\r\n      () => console.log(\"HotelRating method executed successfully\")\r\n    );\r\n  }\r\n\r\n  searchhotel(rating: string, city: string) {\r\n\r\n    this.userService.getHotelsByCityAndRating(city,rating).subscribe(\r\n      responseCitiesStatus => {\r\n       this.hotels = responseCitiesStatus;\r\n        \r\n      },\r\n      responseCitiesError => {\r\n        this.errorMsg = responseCitiesError;\r\n      },\r\n      () => console.log(\"SearchHotel method executed successfully\")\r\n    );\r\n  }\r\n\r\n  getCost(hotelName: string, roomtype: string) {\r\n\r\n    this.userService.getCost(hotelName, roomtype).subscribe(\r\n      responseCitiesStatus => {\r\n        this.cost = responseCitiesStatus*this.rooms;\r\n        //console.log(\"Cost:\", this.cost * this.rooms);\r\n      },\r\n      responseCitiesError => {\r\n        this.errorMsg = responseCitiesError;\r\n      },\r\n      () => console.log(\"Cost method executed successfully\")\r\n    );\r\n\r\n  }\r\n  submitaccodForm(form: NgForm) {\r\n    var accommodation: IAccommodation = {\r\n      bookingId: parseInt(form.value.bookingid),\r\n      hotelName: form.value.hotelName,\r\n      city: form.value.city,\r\n      noOfRooms: parseInt(form.value.rooms),\r\n      hotelRating: parseInt(form.value.rating),\r\n      price: parseInt(form.value.estimatedcost),\r\n      roomType: form.value.roomtype\r\n    }\r\n\r\n    this.userService.bookAccommodation(accommodation).subscribe(\r\n      responseAccommodationStatus => {\r\n        this.status = responseAccommodationStatus;\r\n        if (this.status) {\r\n          if (confirm(\"Accommodation details added successfully.Do you want to continue for payment?\")) {\r\n            this.router.navigate(['/payment']);\r\n          } else {\r\n            this.router.navigate(['/viewbookings']);\r\n          }\r\n        } else {\r\n          this.showDiv = true;\r\n          this.msg = \"Accommodation details not added.Try Again\";\r\n        }\r\n      },\r\n      responseAccommodationError => {\r\n        this.errorMsg = responseAccommodationError;\r\n      },\r\n      () => console.log(\"Book Accommodation method executed successfully\")\r\n    );\r\n  }\r\n}\r\n","\r\n <app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div class=\"accommodation\">\r\n    <h1>Accommodation</h1>\r\n\r\n    <form #accodForm=\"ngForm\" (ngSubmit)=\"submitaccodForm(accodForm)\">\r\n      <!-- Booking ID and City -->\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"bookingid\">Booking ID</label>\r\n            <input type=\"text\" name=\"bookingid\" class=\"form-control forminputs\" [(ngModel)]=\"bookingId\" #bookingRef=\"ngModel\" ngModel readonly />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"city\">City</label>\r\n            <select class=\"form-control forminputs\" name=\"city\" #cityRef=\"ngModel\" ngModel required (change)=\"searchrating(cityRef.value)\">\r\n              <option value=\"\" disabled selected>City</option>\r\n              <option value=\"{{city}}\" *ngFor=\"let city of cities\">{{city}}</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"cityRef.errors && (cityRef.dirty || cityRef.touched)\" class=\"error-message\">\r\n            <p>City is mandatory</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Hotel Rating and Hotel -->\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"rating\">Hotel Rating</label>\r\n            <select class=\"form-control forminputs\" name=\"rating\" #ratingRef=\"ngModel\" ngModel required (change)=\"searchhotel(ratingRef.value, cityRef.value)\">\r\n              <option value=\"\" disabled selected>Select hotel rating</option>\r\n              <option value=\"{{rating}}\" *ngFor=\"let rating of ratings\">{{rating}}-star</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"ratingRef.errors && (ratingRef.dirty || ratingRef.touched)\" class=\"error-message\">\r\n            <p>Rating is mandatory</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"hotels\">Hotel</label>\r\n            <select class=\"form-control forminputs\" name=\"hotelName\" #hotelRef=\"ngModel\" ngModel required>\r\n              <option value=\"\" disabled selected>Select hotel</option>\r\n              <option value=\"{{hotel}}\" *ngFor=\"let hotel of hotels\">{{hotel}}</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"hotelRef.errors && (hotelRef.dirty || hotelRef.touched)\" class=\"error-message\">\r\n            <p>Hotel is mandatory</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Room Type and Number of Rooms -->\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"roomtype\">Room Type</label>\r\n            <select class=\"form-control forminputs\" name=\"roomtype\" #roomtypeRef=\"ngModel\" ngModel required>\r\n              <option value=\"\" disabled selected>Select Room type</option>\r\n              <option value=\"Single\">Single Room</option>\r\n              <option value=\"Double\">Double Room</option>\r\n              <option value=\"Deluxe\">Deluxe Room</option>\r\n              <option value=\"Suite\">Suite</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"roomtypeRef.errors && (roomtypeRef.dirty || roomtypeRef.touched)\" class=\"error-message\">\r\n            <p>Room Type is mandatory</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"rooms\">Number of Rooms</label>\r\n            <input type=\"number\" name=\"rooms\" class=\"form-control forminputs\" #roomsRef=\"ngModel\" ngModel required [(ngModel)]=\"rooms\" (keyup)=\"getCost(hotelRef.value, roomtypeRef.value)\" />\r\n          </div>\r\n          <div *ngIf=\"roomsRef.errors && (roomsRef.dirty || roomsRef.touched)\" class=\"error-message\">\r\n            <p>Number of rooms is mandatory</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Estimated Cost -->\r\n      <div class=\"row frow\">\r\n        <div class=\"col-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"estimatedcost\">Estimated Cost</label>\r\n            <input type=\"text\" name=\"estimatedcost\" class=\"form-control forminputs\" #costRef=\"ngModel\" ngModel [(ngModel)]=\"cost\" required readonly />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Submit Button -->\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!accodForm.form.valid\">Add</button>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IHotel } from '../travelAway-interfaces/Hotel';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-add-hotel',\r\n  templateUrl: './add-hotel.component.html',\r\n  styleUrls: ['./add-hotel.component.css']\r\n})\r\nexport class AddHotelComponent implements OnInit {\r\n  status: boolean;\r\n  showDiv: boolean;\r\n  errorMsg: string;\r\n  msg: string;\r\n  userRole: string;\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Employee\") {\r\n      this.router.navigate(['/login/2']);\r\n    }\r\n  }\r\n  submithotelForm(form: NgForm) {\r\n\r\n    var hotel: IHotel = {\r\n      hotelName: form.value.hotelname,\r\n      hotelRating: parseInt(form.value.hotelType),\r\n      singleRoomPrice: parseInt(form.value.singleprice),\r\n      doubleRoomPrice: parseInt(form.value.doubleprice),\r\n      deluxeeRoomPrice: parseInt(form.value.deluxeprice),\r\n      suiteRoomPrice: parseInt(form.value.suiteprice),\r\n      city: form.value.city\r\n    }\r\n    console.log(hotel);\r\n    this.userService.addHotel(hotel).subscribe(\r\n      responseHotelStatus => {\r\n        this.status = responseHotelStatus;\r\n        this.showDiv = true;\r\n        if (this.status) {\r\n          this.msg = \"Hotel added successfully\";\r\n        } else {\r\n          this.msg = \"Hotel not added\";\r\n        }\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"AddHotel method executed successfully\")\r\n    );\r\n\r\n  }\r\n}\r\n","<app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div class=\"addhotel\">\r\n    <h1 class=\"form-title\">Add Hotel</h1>\r\n\r\n    <form #hotelForm=\"ngForm\" (ngSubmit)=\"submithotelForm(hotelForm)\">\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"hotelname\"\r\n              placeholder=\"Hotel Name\"\r\n              class=\"form-control forminputs\"\r\n              #hotelRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"hotelRef.errors && (hotelRef.dirty || hotelRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!hotelRef.errors.required\">\r\n              <p>Hotel Name is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <select\r\n              class=\"form-control forminputs\"\r\n              name=\"hotelType\"\r\n              #hoteltypeRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            >\r\n              <option value=\"\" disabled selected>Hotel Rating</option>\r\n              <option value=\"2\">2-star</option>\r\n              <option value=\"3\">3-star</option>\r\n              <option value=\"4\">4-star</option>\r\n              <option value=\"5\">5-star</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"hoteltypeRef.errors && (hoteltypeRef.dirty || hoteltypeRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!hoteltypeRef.errors.required\">\r\n              <p>Hotel Rating is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"singleprice\"\r\n              placeholder=\"Single Room Price (in INR)\"\r\n              class=\"form-control forminputs\"\r\n              #singleRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"singleRef.errors && (singleRef.dirty || singleRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!singleRef.errors.required\">\r\n              <p>Price is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"doubleprice\"\r\n              placeholder=\"Double Room Price (in INR)\"\r\n              class=\"form-control forminputs\"\r\n              #doubleRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"doubleRef.errors && (doubleRef.dirty || doubleRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!doubleRef.errors.required\">\r\n              <p>Price is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"suiteprice\"\r\n              placeholder=\"Suite Price (in INR)\"\r\n              class=\"form-control forminputs\"\r\n              #suiteRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"suiteRef.errors && (suiteRef.dirty || suiteRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!suiteRef.errors.required\">\r\n              <p>Price is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"deluxeprice\"\r\n              placeholder=\"Deluxe Price (in INR)\"\r\n              class=\"form-control forminputs\"\r\n              #deluxeRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"deluxeRef.errors && (deluxeRef.dirty || deluxeRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!deluxeRef.errors.required\">\r\n              <p>Price is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"city\"\r\n              placeholder=\"City Name\"\r\n              class=\"form-control forminputs\"\r\n              #cityRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"cityRef.errors && (cityRef.dirty || cityRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!cityRef.errors.required\">\r\n              <p>City is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!hotelForm.form.valid\">Add</button>\r\n      <div *ngIf=\"showDiv\" class=\"submission-message\">\r\n        <br />\r\n        {{ msg }}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IVehicle } from '../travelAway-interfaces/Vehicle';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-vehicle',\r\n  templateUrl: './add-vehicle.component.html',\r\n  styleUrls: ['./add-vehicle.component.css']\r\n})\r\nexport class AddVehicleComponent implements OnInit {\r\n  msg: string;\r\n  status: boolean;\r\n  showDiv: boolean;\r\n  errorMsg: any;\r\n  userRole: string;\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Employee\") {\r\n      this.router.navigate(['/login/2']);\r\n    }\r\n  }\r\n  submitvehicleForm(form: NgForm) {\r\n    var vehicle: IVehicle = {\r\n      vehicleName: form.value.vehicleName,\r\n      vehicleType: form.value.vehicleType,\r\n      ratePerHour: parseInt(form.value.rateperhr),\r\n      ratePerKm: parseInt(form.value.rateperkm),\r\n      basePrice: parseInt(form.value.basePrice)\r\n    }\r\n    this.userService.addVehicle(vehicle).subscribe(\r\n      responseHotelStatus => {\r\n        this.status = responseHotelStatus;\r\n        this.showDiv = true;\r\n        if (this.status) {\r\n          this.msg = \"Vehicle added successfully\";\r\n        } else {\r\n          this.msg = \"Vehicle not added\";\r\n        }\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"AddVehicle method executed successfully\")\r\n    );\r\n  }\r\n}\r\n","<!-- <app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div class=\"addveh\">\r\n    <h1 style=\"color:red;text-shadow:2px 2px 2px black;margin-bottom:10px;\">Add Vehicle</h1>\r\n\r\n    <form #vehicleForm=\"ngForm\" (ngSubmit)=\"submitvehicleForm(vehicleForm)\">\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"vehicleName\" placeholder=\"Vehicle Name\" class=\"form-control forminputs\" #vehicleRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"vehicleRef.errors && (vehicleRef.dirty || vehicleRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!vehicleRef.errors.required\">\r\n          <p>&nbsp;Vehicle Name is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <select class=\"form-control forminputs\" name=\"vehicleType\" #vehicletypeRef=\"ngModel\" ngModel required>\r\n          <option value=\"\" disabled selected>Vehicle Type</option>\r\n          <option value=\"Two-Wheeler\">Two-Wheeler</option>\r\n          <option value=\"Four-Wheeler\">Four-Wheeler</option>\r\n          <option value=\"Mini-Bus\">Mini-Bus</option>\r\n        </select>\r\n      </div>\r\n      <div *ngIf=\"vehicletypeRef.errors && (vehicletypeRef.dirty || vehicletypeRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!vehicletypeRef.errors.required\">\r\n          <p>&nbsp;Vehicle Type is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <input type=\"number\" name=\"rateperhr\" placeholder=\"Rate per hour\" class=\"form-control forminputs\" #ratehrRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"ratehrRef.errors && (ratehrRef.dirty || ratehrRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!ratehrRef.errors.required\">\r\n          <p>&nbsp;Rate is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <input type=\"number\" name=\"rateperkm\" placeholder=\"Rate per km\" class=\"form-control forminputs\" #ratekmRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"ratekmRef.errors && (ratekmRef.dirty || ratekmRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!ratekmRef.errors.required\">\r\n          <p>&nbsp;Rate is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"number\" name=\"basePrice\" placeholder=\"Base Price\" class=\"form-control forminputs\" #basePriceRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"basePriceRef.errors && (basePriceRef.dirty || basePriceRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!basePriceRef.errors.required\">\r\n          <p>&nbsp;Base Price is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!vehicleForm.form.valid\">Add</button>\r\n      <div *ngIf=\"showDiv\" style=\"color:red;text-align:center;\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n -->\r\n\r\n\r\n\r\n <app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div class=\"addveh\">\r\n    <h1 class=\"form-title\">Add Vehicle</h1>\r\n\r\n    <form #vehicleForm=\"ngForm\" (ngSubmit)=\"submitvehicleForm(vehicleForm)\">\r\n      <!-- Vehicle Name -->\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"vehicleName\"\r\n          placeholder=\"Vehicle Name\"\r\n          class=\"form-control forminputs\"\r\n          #vehicleRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"vehicleRef.errors && (vehicleRef.dirty || vehicleRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!vehicleRef.errors.required\">\r\n          <p>Vehicle Name is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Vehicle Type -->\r\n      <div class=\"form-group\">\r\n        <select\r\n          class=\"form-control forminputs\"\r\n          name=\"vehicleType\"\r\n          #vehicletypeRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        >\r\n          <option value=\"\" disabled selected>Vehicle Type</option>\r\n          <option value=\"Two-Wheeler\">Two-Wheeler</option>\r\n          <option value=\"Four-Wheeler\">Four-Wheeler</option>\r\n          <option value=\"Mini-Bus\">Mini-Bus</option>\r\n        </select>\r\n      </div>\r\n      <div *ngIf=\"vehicletypeRef.errors && (vehicletypeRef.dirty || vehicletypeRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!vehicletypeRef.errors.required\">\r\n          <p>Vehicle Type is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Rate per Hour -->\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"rateperhr\"\r\n          placeholder=\"Rate per hour\"\r\n          class=\"form-control forminputs\"\r\n          #ratehrRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"ratehrRef.errors && (ratehrRef.dirty || ratehrRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!ratehrRef.errors.required\">\r\n          <p>Rate is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Rate per KM -->\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"rateperkm\"\r\n          placeholder=\"Rate per km\"\r\n          class=\"form-control forminputs\"\r\n          #ratekmRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"ratekmRef.errors && (ratekmRef.dirty || ratekmRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!ratekmRef.errors.required\">\r\n          <p>Rate is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Base Price -->\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"basePrice\"\r\n          placeholder=\"Base Price\"\r\n          class=\"form-control forminputs\"\r\n          #basePriceRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"basePriceRef.errors && (basePriceRef.dirty || basePriceRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!basePriceRef.errors.required\">\r\n          <p>Base Price is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Submit Button -->\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!vehicleForm.form.valid\">Add</button>\r\n      <div *ngIf=\"showDiv\" class=\"submission-message\">\r\n        <br />\r\n        {{ msg }}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'TravelAwayApp';\r\n}\r\n","<!--<app-home></app-home>-->\r\n<!--<app-view-packages></app-view-packages>-->\r\n<!--<app-view-package-details></app-view-package-details>-->\r\n<!--<app-register></app-register>-->\r\n<!--<app-login></app-login>-->\r\n<!-- <app-breadcrumb></app-breadcrumb> -->\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ViewPackagesComponent } from './view-packages/view-packages.component';\r\nimport { ViewPackageDetailsComponent } from './view-package-details/view-package-details.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UserService } from '../travelAway-services/user-service/user.service';\r\nimport { PackageService } from '../travelAway-services/package-service/package.service';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { routing } from './app.routing';\r\nimport { CommonLayoutComponent } from './layouts/common-layout/common-layout.component';\r\nimport { UserLayoutComponent } from './layouts/user-layout/user-layout.component';\r\nimport { EmployeeLayoutComponent } from './layouts/employee-layout/employee-layout.component';\r\nimport { EditDetailsComponent } from './edit-details/edit-details.component';\r\nimport { CustomerCareComponent } from './customer-care/customer-care.component';\r\nimport { BookPackageComponent } from './book-package/book-package.component';\r\nimport { AccommodationComponent } from './accommodation/accommodation.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { AddVehicleComponent } from './add-vehicle/add-vehicle.component';\r\nimport { AddHotelComponent } from './add-hotel/add-hotel.component';\r\nimport { ViewBookingsComponent } from './view-bookings/view-bookings.component';\r\nimport { ViewHotelsComponent } from './view-hotels/view-hotels.component';\r\nimport { ViewVehiclesComponent } from './view-vehicles/view-vehicles.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \r\nimport { ToastrModule } from 'ngx-toastr'; \r\nimport { AuthInterceptor } from '../travelAway-services/auth.interceptor';\r\nimport { AuthService } from '../travelAway-services/auth-service/authservice';\r\nimport { ProtectedComponent } from './protected/protected.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { PopularPackagesComponent } from './popular-packages/popular-packages.component';\r\nimport { BreadcrumbComponent } from './shared/breadcrumb/breadcrumb.component';\r\nimport { MatDialogModule } from '@angular/material/dialog'; \r\nimport { MatButtonModule } from '@angular/material/button'; \r\nexport function tokenGetter() { // Ensure 'export' is here\r\n  return localStorage.getItem('authToken'); // Or your preferred storage key\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ViewPackagesComponent,\r\n    ViewPackageDetailsComponent,\r\n    HomeComponent,\r\n    CommonLayoutComponent,\r\n    UserLayoutComponent,\r\n    EmployeeLayoutComponent,\r\n    EditDetailsComponent,\r\n    CustomerCareComponent,\r\n    BookPackageComponent,\r\n    AccommodationComponent,\r\n    PaymentComponent,\r\n    AddVehicleComponent,\r\n    AddHotelComponent,\r\n    ViewBookingsComponent,\r\n    ViewHotelsComponent,\r\n    ViewVehiclesComponent,\r\n    ProtectedComponent,\r\n    PopularPackagesComponent,\r\n    BreadcrumbComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule,routing,BrowserAnimationsModule,\r\n    MatDialogModule,MatButtonModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 2000,\r\n      positionClass: 'toast-top-right',\r\n      preventDuplicates: true,\r\n    }),\r\n        JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        whitelistedDomains : ['localhost:5001'], // Replace with your backend domain\r\n        blacklistedRoutes: ['/api/auth/'], // Adjust as needed\r\n      },\r\n    }),\r\n  ],\r\n  providers: [PackageService, UserService,AuthService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ViewPackagesComponent } from './view-packages/view-packages.component';\r\nimport { ViewPackageDetailsComponent } from './view-package-details/view-package-details.component';\r\nimport { EditDetailsComponent } from './edit-details/edit-details.component';\r\nimport { CustomerCareComponent } from './customer-care/customer-care.component';\r\nimport { BookPackageComponent } from './book-package/book-package.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { AddVehicleComponent } from './add-vehicle/add-vehicle.component';\r\nimport { AddHotelComponent } from './add-hotel/add-hotel.component';\r\nimport { AccommodationComponent } from './accommodation/accommodation.component';\r\nimport { ViewBookingsComponent } from './view-bookings/view-bookings.component';\r\nimport { ViewHotelsComponent } from './view-hotels/view-hotels.component';\r\nimport { ViewVehiclesComponent } from './view-vehicles/view-vehicles.component';\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'home', component: HomeComponent ,data: { breadcrumb: 'Home' }},\r\n  { path: 'viewPackages', component: ViewPackagesComponent ,data: { breadcrumb: 'viewPackages' } },\r\n  { path: 'login/:loginRole', component: LoginComponent, data: { breadcrumb: 'login' } },\r\n  { path: 'register', component: RegisterComponent ,data: { breadcrumb: 'register' }},\r\n  { path: 'viewPackageDetails/:packageId/:packageName', component: ViewPackageDetailsComponent },\r\n  { path: 'viewPackageDetails/:packageId/:packageName', component: ViewPackageDetailsComponent },\r\n  { path: 'editDetails', component: EditDetailsComponent ,data: { breadcrumb: 'editDetails' }},\r\n  { path: 'custcare', component: CustomerCareComponent ,data: { breadcrumb: 'custcare' }},\r\n  { path: 'bookpkg/:packageId', component: BookPackageComponent },\r\n  { path: 'payment', component: PaymentComponent ,data: { breadcrumb: 'payment' }},\r\n  { path: 'addvehicle', component: AddVehicleComponent ,data: { breadcrumb: 'addvehicle' }},\r\n  { path: 'addhotel', component: AddHotelComponent ,data: { breadcrumb: 'addhotel' }},\r\n  { path: 'accommodation', component: AccommodationComponent ,data: { breadcrumb: 'accommodation' }},\r\n  { path: 'viewbookings', component: ViewBookingsComponent ,data: { breadcrumb: 'viewbookings' }},\r\n  { path: 'viewhotels', component: ViewHotelsComponent ,data: { breadcrumb: 'viewhotels' }},\r\n  { path: 'viewvehicles', component: ViewVehiclesComponent ,data: { breadcrumb: 'viewvehicles' }},\r\n  { path: '**', component: HomeComponent }\r\n];\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IBookPackage } from '../travelAway-interfaces/BookPackage';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-book-package',\r\n  templateUrl: './book-package.component.html',\r\n  styleUrls: ['./book-package.component.css']\r\n})\r\nexport class BookPackageComponent implements OnInit {\r\n  @ViewChild('confirmationDialogTemplate') confirmationDialogTemplate!: TemplateRef<any>;\r\n  bookingId: number;\r\n  packageId: number;\r\n  errorMsg: string;\r\n  userRole: string;\r\n  packageName: string;\r\n  dialogTitle: string = '';\r\n  dialogMessage: string = '';\r\n  dialogRef: any;\r\n  constructor(private packageService: PackageService, private router: Router,private route: ActivatedRoute,private tostr: ToastrService,private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.packageId = parseInt(this.route.snapshot.params['packageId']);\r\n    this.packageName = this.route.snapshot.queryParams['name'];\r\n    console.log(this.packageName);\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    \r\n  }\r\n  submitBookForm(form: NgForm) {\r\n    var email = sessionStorage.getItem(\"userName\");\r\n\r\n    var bookpkg: IBookPackage = {\r\n      contactNumber: parseInt(form.value.contactNumber), emailId: email, address: form.value.address, dateOfTravel: new Date(form.value.dateOfTravel), numberOfAdults: parseInt(form.value.adults),\r\n      numberOfChildren: parseInt(form.value.children), status: \"Booked\", packageId: this.packageId\r\n    }\r\n    console.log(bookpkg);\r\n    this.packageService.bookPackage(bookpkg).subscribe(\r\n        responseRegisterStatus => {\r\n        this.bookingId = responseRegisterStatus;\r\n        if (this.bookingId > 0) {\r\n          sessionStorage.setItem('bookingId', this.bookingId.toString());\r\n          this.tostr.success('Booking Done successfully', 'Success');\r\n          // this.dialogTitle = 'Continue to Accommodation?';\r\n          // this.dialogMessage = 'Do you want to proceed to book accommodation?';\r\n          // this.dialogRef = this.dialog.open(this.confirmationDialogTemplate,{width: '400px',panelClass: 'custom-dialog-top-center'});\r\n          // this.dialogRef.afterClosed().subscribe((result: boolean) => {\r\n          // if (result) {this.router.navigate(['/accommodation']);}\r\n          // else {this.router.navigate(['/viewbookings']);}\r\n    //});\r\n          \r\n          if (confirm(\"Booking Done successfully.Do you want to continue to book accommodation?\")) {\r\n            this.router.navigate(['/accommodation']);\r\n          } else {\r\n            this.router.navigate(['/viewbookings']);\r\n          }\r\n        } \r\n        else \r\n        { this.tostr.error('Booking Failed', 'Error');} \r\n        },\r\n        responseRegisterError => {\r\n          this.errorMsg = responseRegisterError;\r\n        },\r\n        () => console.log(\"BookingPackage method executed successfully\")\r\n    );\r\n\r\n  }\r\n  closeDialog(result: boolean) {\r\n    this.dialogRef.close(result);\r\n  }\r\n}\r\n","<app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <h2>{{packageName}}</h2>\r\n  <div class=\"bookpkg\">\r\n    <h1>Book Package</h1>\r\n    <form #bookForm=\"ngForm\" (ngSubmit)=\"submitBookForm(bookForm)\">\r\n      <div class=\"form-group\">\r\n        <input class\r\n          type=\"text\"\r\n          name=\"contactNumber\"\r\n          placeholder=\"Contact Number\"\r\n          class=\"form-control forminputs\"\r\n          #contactNumberRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n          pattern=\"[1-9]{1}[0-9]{9}\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"contactNumberRef.errors && (contactNumberRef.dirty || contactNumberRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!contactNumberRef.errors.required\">\r\n          <p>&nbsp;Contact is mandatory</p>\r\n        </div>\r\n        <div [hidden]=\"!contactNumberRef.errors.pattern\">\r\n          <p>&nbsp;Contact number should be of 10 digits, 0 not as first digit.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <textarea\r\n          name=\"address\"\r\n          placeholder=\"Residential Address\"\r\n          class=\"form-control forminputs\"\r\n          #addressRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <div *ngIf=\"addressRef.errors && (addressRef.dirty || addressRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!addressRef.errors.required\">\r\n          <p>&nbsp;Address is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"dateOfTravel\"\r\n          placeholder=\"Date of Travel\"\r\n          class=\"form-control forminputs\"\r\n          onfocus=\"(this.type='date')\"\r\n          #dotRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"dotRef.errors && (dotRef.dirty || dotRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!dotRef.errors.required\">\r\n          <p>&nbsp;Date of Travel is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"adults\"\r\n          placeholder=\"Number of adults\"\r\n          class=\"form-control forminputs\"\r\n          #adultRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"adultRef.errors && (adultRef.dirty || adultRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!adultRef.errors.required\">\r\n          <p>&nbsp;No. of Adults is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"children\"\r\n          placeholder=\"Number of children\"\r\n          class=\"form-control forminputs\"\r\n          #childrenRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"childrenRef.errors && (childrenRef.dirty || childrenRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!childrenRef.errors.required\">\r\n          <p>&nbsp;No. of children is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!bookForm.form.valid\">Book now</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n  <ng-template #confirmationDialogTemplate>\r\n    <h2 mat-dialog-title>{{ dialogTitle }}</h2>\r\n      <div mat-dialog-content>\r\n        <p>{{ dialogMessage }}</p>\r\n      </div>\r\n  <div mat-dialog-actions>\r\n    <button mat-button (click)=\"closeDialog(false)\">No</button>\r\n    <button mat-button (click)=\"closeDialog(true)\">Yes</button>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { IcustCare } from '../travelAway-interfaces/CustomerCare';\r\n@Component({\r\n  selector: 'app-customer-care',\r\n  templateUrl: './customer-care.component.html',\r\n  styleUrls: ['./customer-care.component.css']\r\n})\r\nexport class CustomerCareComponent implements OnInit {\r\n  userRole: string;\r\n  showDiv: boolean = false;\r\n  msg: string;\r\n  status: boolean;\r\n  bookingId: number;\r\n  assignee: number;\r\n  errorMsg: string;\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n    this.bookingId = parseInt(sessionStorage.getItem('bookingId'));\r\n    this.getAssignee();\r\n  }\r\n  submitCompForm(form: NgForm) {\r\n\r\n    var query: IcustCare = {\r\n      bookingId: this.bookingId,\r\n      query: form.value.query,\r\n      queryStatus: \"Assigned\",\r\n      assignee: this.assignee\r\n    }\r\n    console.log(query);\r\n    this.userService.custCare(query).subscribe(\r\n      responsecustCareStatus => {\r\n        this.status = responsecustCareStatus;\r\n        if (this.status) {\r\n          this.showDiv = true;\r\n          this.msg = \"We will answer you soon\";\r\n        } else {\r\n          this.msg = \"Some error occured. Query not sent\";\r\n        }\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"CustomerCare method executed successfully\")\r\n    );\r\n  }\r\n\r\n  getAssignee() {\r\n    this.userService.getassignee().subscribe(\r\n      responseassignee => {\r\n        this.assignee = responseassignee;\r\n       // console.log(this.assignee, typeof (this.assignee));\r\n      },\r\n      responseassigneeError => {\r\n        this.assignee = null;\r\n      },\r\n      () => console.log(\"GetAssignee method executed successfully\")\r\n    );\r\n  }\r\n}\r\n","\r\n<app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div class=\"inner-content\">\r\n    <img src=\"./assets/customer-service.png\" alt=\"Customer Service Image\" />\r\n    <h1>Customer Care</h1>\r\n    <p>Thanks for writing to us</p>\r\n    <form #compForm=\"ngForm\" (ngSubmit)=\"submitCompForm(compForm)\">\r\n      <div class=\"form-group\">\r\n        <textarea\r\n          name=\"query\"\r\n          placeholder=\"Enter your complaint here\"\r\n          class=\"form-control forminputs\"\r\n          #compRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!compForm.form.valid\">Submit</button>\r\n      <div *ngIf=\"showDiv\" class=\"message\">\r\n        {{ msg }} !!\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Route, ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ICustomer } from '../travelAway-interfaces/Customer';\r\n@Component({\r\n  selector: 'app-edit-details',\r\n  templateUrl: './edit-details.component.html',\r\n  styleUrls: ['./edit-details.component.css']\r\n})\r\nexport class EditDetailsComponent implements OnInit {\r\n  msg: string;\r\n  emailId: string;\r\n  errorMsg: any;\r\n  status: boolean;\r\n  firstName: string;\r\n  lastName: string;\r\n  contact: number;\r\n  dob: Date;\r\n  Address: string;\r\n  userRole: string;\r\n  gender: string;\r\n  customer: ICustomer;\r\n  showDiv: boolean = true;\r\n  customerLayout: boolean = false;\r\n  commonLayout: boolean = false;\r\n  constructor(private router: Router, private userService: UserService, private ac: ActivatedRoute) {\r\n    this.emailId = sessionStorage.getItem(\"userName\");\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    } else if (this.userRole == \"Customer\") {\r\n      this.customerLayout = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.getCustomerDetails(this.emailId);\r\n\r\n  }\r\n\r\n  getCustomerDetails(emailId: string) {\r\n    this.userService.getCustomerById(emailId).subscribe(\r\n        responseRegisterStatus => {\r\n        this.customer = responseRegisterStatus;\r\n        this.firstName = this.customer['firstName'];\r\n        this.lastName = this.customer['lastName'];\r\n        this.gender = this.customer['gender'];\r\n        this.Address = this.customer['address'];\r\n        this.contact = this.customer['contactNumber'];\r\n        this.dob = this.customer['dateOfBirth'].substring(0,10);\r\n        console.log(this.firstName,this.lastName);\r\n        },\r\n        responseRegisterError => {\r\n          this.errorMsg = responseRegisterError;\r\n        },\r\n        () => console.log(\"cutomer details method executed successfully\")\r\n      );\r\n  }\r\n\r\n  SubmitForm(form: NgForm) {\r\n    this.userService.updateUserDetails(form.value.firstName, form.value.lastName, this.emailId,\r\n      null, parseInt(form.value.contactNumber), form.value.address, form.value.gender, new Date(form.value.dateOfBirth), 1).subscribe(\r\n        responseUpdateStatus => {\r\n          this.status = responseUpdateStatus;\r\n          this.showDiv = true;\r\n          if (this.status == true) {\r\n            this.msg = \"Updation Successfully\";\r\n            \r\n\r\n          } else {\r\n            this.msg = \"Not able to update\";\r\n          }\r\n        },\r\n        responseUpdateError => {\r\n          this.errorMsg = responseUpdateError;\r\n        },\r\n        () => console.log(\"Updated method executed successfully\")\r\n      );\r\n  }\r\n\r\n}\r\n\r\n","<div *ngIf=\"commonLayout\">\r\n  <app-common-layout></app-common-layout>\r\n</div>\r\n<div *ngIf=\"customerLayout\">\r\n  <app-user-layout></app-user-layout>\r\n</div>\r\n<div class=\"content\">\r\n  <div class=\"signup\">\r\n    <h1 style=\"text-align:left\">Edit Details</h1>\r\n    <form #updateForm=\"ngForm\" (ngSubmit)=\"SubmitForm(updateForm)\">\r\n      <div class=\"form-group\" style=\"margin-top:20px;\">\r\n        <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" value=\"{{firstName}}\" class=\"form-control forminputs\" #firstNameRef=\"ngModel\" ngModel required pattern=\"[a-zA-z]{1,}\" />\r\n      </div>\r\n      <div *ngIf=\"firstNameRef.errors && (firstNameRef.dirty || firstNameRef.touched)\" style=\"text-align:left; color:red;\">\r\n        <div [hidden]=\"!firstNameRef.errors.required\">\r\n          <p>&nbsp;First Name is mandatory</p>\r\n        </div>\r\n        <div [hidden]=\"!firstNameRef.errors.pattern\">\r\n          <p>&nbsp;First Name is not entered in proper format</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\"  value=\"{{lastName}}\"  class=\"form-control forminputs\" #lastNameRef=\"ngModel\" ngModel required pattern=\"[a-zA-z]{1,}\" />\r\n      </div>\r\n      <div *ngIf=\"lastNameRef.errors && (lastNameRef.dirty || lastNameRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!lastNameRef.errors.required\">\r\n          <p>&nbsp;Last Name is mandatory</p>\r\n        </div>\r\n        <div [hidden]=\"!lastNameRef.errors.pattern\">\r\n          <p>&nbsp;Last Name is not entered in proper format</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <select class=\"form-control\" name=\"gender\" #genderRef=\"ngModel\"  value=\"{{gender}}\" ngModel required>\r\n          <option value=\"\" disabled selected>Gender</option>\r\n          <option value=\"M\">Male</option>\r\n          <option value=\"F\">Female</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"contactNumber\" placeholder=\"Contact Number\" value=\"{{contact}}\" class=\"form-control forminputs\" #contactNumberRef=\"ngModel\" ngModel required pattern=\"[1-9]{1}[0-9]{9}\" />\r\n      </div>\r\n      <div *ngIf=\"contactNumberRef.errors && (contactNumberRef.dirty || contactNumberRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!contactNumberRef.errors.required\">\r\n          <p>&nbsp;Contact is mandatory</p>\r\n        </div>\r\n        <div [hidden]=\"!contactNumberRef.errors.pattern\">\r\n          <p>&nbsp;Contact number should be of 10 digits, 0 not as first digit.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"dateOfBirth\" placeholder=\"Date of birth\" value=\"{{dob}}\" class=\"form-control forminputs\" onfocus=\"(this.type='date')\" #dobRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"dobRef.errors && (dobRef.dirty || dobRef.touched)\" style=\"text-align:left; color:red;\">\r\n        <div [hidden]=\"!dobRef.errors.required\">\r\n          <p>&nbsp;Date of birth is mandatory</p>\r\n\r\n          <!--<p *ngIf=\"dobRef.errors?.dateError &&  dobRef.dirty\" class=\"alert alert-danger\">\r\n            {{dobRef.errors?.dateError.message}}\r\n          </p>-->\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <textarea placeholder=\"Address\" name=\"address\" class=\"form-control forminputs\" value=\"{{Address}}\" #addressRef=\"ngModel\" ngModel required></textarea>\r\n      </div>\r\n      <div *ngIf=\"addressRef.errors && (addressRef.dirty || addressRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!addressRef.errors.required\">\r\n          <p>&nbsp;Address is mandatory</p>\r\n        </div>\r\n\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\">Update</button>\r\n      <div *ngIf=\"showDiv\" style=\"color:red;text-align:center;\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userRole: string;\r\n  customerLayout: boolean = false;\r\n  commonLayout: boolean = false;\r\n  employeeLayout: boolean = false;\r\n  constructor() {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole == \"Customer\") {\r\n      this.customerLayout = true;\r\n    }\r\n    else if (this.userRole == \"Employee\") {\r\n      this.employeeLayout = true;\r\n    }\r\n    else {\r\n      this.commonLayout = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"commonLayout\">\r\n  <app-common-layout></app-common-layout>\r\n  <app-breadcrumb></app-breadcrumb>\r\n</div>\r\n<div *ngIf=\"customerLayout\">\r\n  <app-user-layout></app-user-layout>\r\n  <app-breadcrumb></app-breadcrumb>\r\n</div>\r\n<div *ngIf=\"employeeLayout\">\r\n  <app-employee-layout></app-employee-layout>\r\n  <app-breadcrumb></app-breadcrumb>\r\n</div>\r\n<div class=\"content\">\r\n  <div id=\"popular\">\r\n    <app-popular-packages></app-popular-packages>\r\n  </div>\r\n  <div class=\"inner-content\">\r\n    <h1>TravelAway</h1>\r\n    <button routerLink=\"/viewPackages\" *ngIf=\"(customerLayout||commonLayout)\">View Packages</button>\r\n    <button routerLink=\"/addhotel\" *ngIf=\"(employeeLayout)\">Add Hotel</button>\r\n  </div>\r\n  <div id=\"footer\">\r\n    <h2>Explore this beautiful world with us</h2>\r\n    <div id=\"social_media\">\r\n      <i style=\"font-size:50px\" class=\"fa\">&#xf082;</i>\r\n      <i style=\"font-size:50px\" class=\"fa\">&#xf16d;</i>\r\n      <i style=\"font-size:50px\" class=\"fa\">&#xf081;</i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute,RouterModule  } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-common-layout',\r\n  templateUrl: './common-layout.component.html',\r\n  styleUrls: ['./common-layout.component.css'],\r\n  \r\n})\r\nexport class CommonLayoutComponent implements OnInit {\r\n  userType: '1' | '2' | '' = '';  // '1' for Customer, '2' for Employee\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to param changes to handle dynamic navigation like /login/1 or /login/2\r\n    this.route.paramMap.subscribe(params => {\r\n      this.userType = (params.get('loginRole') as '1' | '2') || '';\r\n      this.updateForm();\r\n      //console.log('User type:', this.userType);\r\n    });\r\n  }\r\n\r\n  updateForm(): void {\r\n    // Logic to handle changes in form based on user type\r\n    if (this.userType === '1') {\r\n      // Configure UI or form fields for Customer Login\r\n      console.log('Displaying Customer Login');\r\n    } else if (this.userType === '2') {\r\n      // Configure UI or form fields for Employee Login\r\n      console.log('Displaying Employee Login');\r\n    } else {\r\n      // Optional fallback\r\n      console.warn('Unknown login type');\r\n    }\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../assets/logo.png\" alt=\"Logo\" width=\"40\" height=\"40\">TravelAway</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbarNav\"\r\n      aria-controls=\"navbarNav\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav ms-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/viewPackages\" routerLinkActive=\"active\">Packages</a>\r\n        </li>\r\n\r\n        \r\n        <li class=\"nav-item dropdown\">\r\n          <a\r\n            class=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"loginDropdown\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Login\r\n          </a>\r\n          <ul class=\"dropdown-menu\" aria-labelledby=\"loginDropdown\">\r\n            <li><a class=\"dropdown-item\" [routerLink]=\"['/login', 1]\">Customer Login</a></li>\r\n            <li><a class=\"dropdown-item\" [routerLink]=\"['/login', 2]\">Employee Login</a></li>\r\n          </ul>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/register\" routerLinkActive=\"active\">Signup</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-employee-layout',\r\n  templateUrl: './employee-layout.component.html',\r\n  styleUrls: ['./employee-layout.component.css']\r\n})\r\nexport class EmployeeLayoutComponent implements OnInit {\r\n  userRole: string;\r\n  constructor(private router: Router) { this.userRole = sessionStorage.getItem('userRole');}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  logOut() {\r\n    sessionStorage.removeItem('userName');\r\n    sessionStorage.removeItem('userRole');\r\n    this.router.navigate(['/login/2']);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" id=\"nbar\">\r\n  <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../assets/logo.png\" alt=\"Logo\" width=\"40\" height=\"40\">TravelAway</a>\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarNavAltMarkup\"\r\n    aria-controls=\"navbarNavAltMarkup\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\" id=\"nitems\">\r\n      <a\r\n        class=\"nav-item nav-link\"\r\n        routerLink=\"/\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        Home\r\n      </a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/addhotel\" routerLinkActive=\"active\">AddHotel</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/addvehicle\" routerLinkActive=\"active\">AddVehicle</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/viewhotels\" routerLinkActive=\"active\">ViewHotels</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/viewvehicles\" routerLinkActive=\"active\">ViewVehicles</a>\r\n      <a class=\"nav-item nav-link\" href=\"#\" (click)=\"logOut()\">Logout</a>\r\n    </div>\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-user-layout',\r\n  templateUrl: './user-layout.component.html',\r\n  styleUrls: ['./user-layout.component.css']\r\n})\r\nexport class UserLayoutComponent implements OnInit {\r\n  userRole: string;\r\n  constructor(private router: Router) { this.userRole = sessionStorage.getItem('userRole'); }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  logOut() {\r\n    sessionStorage.removeItem('userName');\r\n    sessionStorage.removeItem('userRole');\r\n    this.router.navigate(['/login/1']);\r\n  }\r\n}\r\n","\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" id=\"nbar\">\r\n  <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../assets/logo.png\" alt=\"Logo\" width=\"40\" height=\"40\">TravelAway</a>\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarNavAltMarkup\"\r\n    aria-controls=\"navbarNavAltMarkup\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\" id=\"nitems\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Home</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/viewPackages\" routerLinkActive=\"active\">ViewPackages</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/editDetails\" routerLinkActive=\"active\">EditProfile</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/viewbookings\" routerLinkActive=\"active\">View Bookings</a>\r\n      <a class=\"nav-item nav-link\" href=\"#\" (click)=\"logOut()\">Logout</a>\r\n    </div>\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router,ActivatedRoute,ParamMap} from '@angular/router';\r\nimport { UserService } from \"../../travelAway-services/user-service/user.service\";\r\nimport { Subscription } from 'rxjs'; \r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/travelAway-services/auth-service/authservice';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  status: number;\r\n  errorMsg: string;\r\n  msg: string;\r\n  showDiv: boolean = false;\r\n  name: string;\r\n  loginRole: number;\r\n  rolename: string;\r\n  routeSubscription: Subscription;\r\n  constructor(\r\n    private userService: UserService, \r\n    private router: Router, \r\n    private route: ActivatedRoute,\r\n    private toastr:ToastrService,\r\n    private authService: AuthService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.routeSubscription = this.route.paramMap.subscribe((params: ParamMap) => {\r\n        const role = params.get('loginRole');\r\n        if (role === '1') {\r\n          this.loginRole = 1;\r\n          this.rolename = \"Customer\";\r\n        } else if (role === '2') {\r\n          this.loginRole = 2;\r\n          this.rolename = \"Employee\";\r\n        } else {\r\n          this.loginRole = 0;\r\n          this.rolename = '';\r\n        }\r\n        console.log('Login Role Updated:', this.loginRole, 'Rolename:', this.rolename);\r\n        // You might want to update any UI elements that depend on rolename here\r\n      });\r\n  }\r\n  submitLoginForm(form: NgForm) {\r\n    console.log(form.value.email, form.value.password);\r\n \r\n      this.authService.login(form.value.email, form.value.password,this.loginRole).subscribe({\r\n      next: (response) => {\r\n        this.showDiv = true;\r\n          this.toastr.success(\"Login Successful\");\r\n          this.msg = \"Login Successful\";\r\n          const role = this.authService.getRole();\r\n          //console.log('User Role:', role);\r\n          if(role == \"Customer\")\r\n          {\r\n          sessionStorage.setItem('userName', form.value.email);\r\n          sessionStorage.setItem('userRole', \"Customer\");\r\n          }\r\n          else if(role == \"Employee\")\r\n          {\r\n            sessionStorage.setItem('userName', form.value.email);\r\n            sessionStorage.setItem('userRole', \"Employee\");\r\n          }\r\n          this.router.navigate(['/home']);\r\n          console.log('Login successful', response);\r\n      },\r\n      error: (error) => {\r\n        console.error('Login failed', error);\r\n        this.errorMsg= 'Invalid username or password.';\r\n      },\r\n    });\r\n\r\n\r\n    // this.userService.validateCredentials(form.value.email, form.value.password, this.loginRole).subscribe(\r\n    //   responseLoginStatus => {\r\n    //     this.status = responseLoginStatus;\r\n    //     this.showDiv = true;\r\n    //     if (this.status==1) {\r\n    //       this.toastr.success(\"Login Successful\");\r\n    //       this.msg = \"Login Successful\";\r\n    //       sessionStorage.setItem('userName', form.value.email);\r\n    //       sessionStorage.setItem('userRole', \"Customer\");\r\n    //       this.router.navigate(['/home']);\r\n    //     }\r\n    //     else if (this.status == 2) {\r\n    //       this.toastr.success(\"Login Successful\");\r\n    //       this.msg = \"Login Successful\";\r\n    //       sessionStorage.setItem('userName', form.value.email);\r\n    //       sessionStorage.setItem('userRole', \"Employee\");\r\n    //       this.router.navigate(['/home']);\r\n    //     }\r\n      //   else {\r\n      //     this.toastr.success(\"Try again with valid credentials.\");\r\n      //     this.msg = \"Try again with valid credentials.\";\r\n      //   }\r\n      // },\r\n      // responseLoginError => {\r\n      //   this.errorMsg = responseLoginError;\r\n      // },\r\n    //   () => console.log(\"SubmitLoginForm method executed successfully\")\r\n    // );\r\n  }\r\n}\r\n","<app-common-layout></app-common-layout>\r\n<div class=\"content\">\r\n  <div class=\"login\">\r\n    <h1>{{rolename}} <span style=\"font-size:40px;\"> Login</span></h1>\r\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"submitLoginForm(loginForm)\">\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email address</label>\r\n        <input type=\"email\" id=\"email\" placeholder=\"Your Email\" name=\"email\" class=\"form-control forminputs\" #emailRef=\"ngModel\" pattern='^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$'  ngModel required />\r\n        <div *ngIf=\"emailRef.errors && (emailRef.dirty || emailRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!emailRef.errors.required\">\r\n            Email address is required.\r\n          </div>\r\n          <div [hidden]=\"!emailRef.errors.pattern\">\r\n            Please enter a valid email address format.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" placeholder=\"Your Password\" name=\"password\" minlength=\"8\" maxlength=\"16\" class=\"form-control forminputs\" #passwordRef=\"ngModel\" ngModel required />\r\n        <div *ngIf=\"passwordRef.errors && (passwordRef.dirty || passwordRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!passwordRef.errors.required\">\r\n            Password is required.\r\n          </div>\r\n          <div [hidden]=\"!passwordRef.errors.minlength || !passwordRef.errors.maxlength\">\r\n            Password must be between 8 and 16 characters.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group form-check\">\r\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberMe\" name=\"rememberMe\" ngModel>\r\n        <label class=\"form-check-label\" for=\"rememberMe\">Remember me</label>\r\n      </div>\r\n\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!loginForm.form.valid\">Sign In</button>\r\n\r\n      <div class=\"form-group forgot-password\">\r\n        <a routerLink=\"/forgot-password\">Forgot your password?</a>\r\n      </div>\r\n\r\n      <div *ngIf=\"showDiv\" class=\"login-message\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n\r\n      </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IPayment } from '../travelAway-interfaces/Payment';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.css']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  cost: string;\r\n  userRole: string;\r\n  bookingId: string;\r\n    status: boolean;\r\n    showDiv: boolean;\r\n    msg: string;\r\n  errorMsg: any;\r\n  total: number;\r\n  constructor(private userService: UserService,private router: Router, private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.bookingId = sessionStorage.getItem('bookingId');\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n    this.getTotal(this.bookingId);\r\n  }\r\n\r\n  //filldefaultfields(id: number, cost: string) {\r\n  //  this.bookingId = id;\r\n  //  this.cost = cost;\r\n  //}\r\n\r\n  getTotal(bookingid:string) {\r\n    this.userService.getTotal(bookingid).subscribe(\r\n      responseTotalStatus => {\r\n        this.total = responseTotalStatus;\r\n       \r\n      },\r\n      responseTotalError => {\r\n        this.errorMsg = responseTotalError;\r\n      },\r\n      () => console.log(\"GetTotal method executed successfully\")\r\n    );\r\n  }\r\n  submitpayForm(form: NgForm) {\r\n\r\n    var pay: IPayment = {\r\n      bookingId: parseInt(form.value.bookid),\r\n      paymentStatus: \"Confirmed\",\r\n      totalAmount: parseInt(form.value.amount),\r\n    \r\n    }\r\n    this.userService.makePayment(pay).subscribe(\r\n      responseHotelStatus => {\r\n        this.status = responseHotelStatus;\r\n        this.showDiv = true;\r\n        if (this.status) {\r\n          alert(\"Payment Done successfully\");\r\n          sessionStorage.removeItem('bookingId');\r\n          this.router.navigate(['/']);\r\n        } else {\r\n          this.msg = \"Payment not done.Try Again\";\r\n        }\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"AddVehicle method executed successfully\")\r\n    );\r\n\r\n\r\n  }\r\n}\r\n","<app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div class=\"inner-content\">\r\n    <h1 style=\"color:red;text-shadow:2px 2px 2px black;\">Payment Gateway</h1>\r\n    <p>Complete the payment to confirm booking</p>\r\n    <form #payForm=\"ngForm\" (ngSubmit)=\"submitpayForm(payForm)\">\r\n      <label for=\"bookid\" style=\"text-align:left;width:70%;margin:0 auto;margin-bottom:2px;\">Booking ID</label>\r\n      <div class=\"form-group\">\r\n        <input type=\"number\" name=\"bookid\" class=\"form-control forminputs\" #bookRef=\"ngModel\" ngModel [(ngModel)]=\"bookingId\" readonly />\r\n      </div>\r\n      <label for=\"amount\" style=\"text-align:left;width:70%;margin:0 auto;margin-bottom:2px;\">Total Amount</label>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"amount\" value=\"{{cost}}\" class=\"form-control forminputs\" #amountRef=\"ngModel\" ngModel [(ngModel)]=\"total\" readonly />\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!payForm.form.valid\">Pay</button>\r\n      <div *ngIf=\"showDiv\" style=\"color:red;text-align:center;\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PopularPackage } from '../models/popular-package.model';\r\nimport { PackageService } from \"../../travelAway-services/package-service/package.service\";\r\n@Component({\r\n  selector: 'app-popular-packages',\r\n  templateUrl: './popular-packages.component.html',\r\n  styleUrls: ['./popular-packages.component.css']\r\n})\r\n\r\nexport class PopularPackagesComponent implements OnInit {\r\n  popularPackages: PopularPackage[] = [];\r\n  errorMsg: string;\r\n  showMsg: boolean;\r\n  imagePath: string;\r\n  topPackages: PopularPackage[] = [];\r\n  constructor(private packageService: PackageService,) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.loadPopularPackages();\r\n    if (this.popularPackages == null) {\r\n      this.showMsg = true;\r\n    }\r\n    this.imagePath = \"src/assets/\"\r\n  }\r\n    loadPopularPackages() {\r\n    this.packageService.getPackages().subscribe(\r\n      responseGet => {\r\n        this.showMsg = false;\r\n        this.popularPackages = responseGet;\r\n        this.topPackages = this.popularPackages.slice(0, 5);\r\n      },\r\n      resonseError => {\r\n        this.showMsg = true\r\n        this.popularPackages = null\r\n        this.errorMsg = resonseError\r\n      },\r\n      () => console.log(\"GetPackage method executed\")\r\n    )\r\n  }\r\n\r\n  // loadPopularPackages() {\r\n  //       this.popularPackages = [\r\n  //     { id: 1, name: 'Romantic Bali', destination: 'Bali, Indonesia', price: 500, imageUrl: 'assets/bali.jpg' },\r\n  //     { id: 2, name: 'Swiss Adventure', destination: 'Switzerland', price: 1000, imageUrl: 'assets/switzerland.jpg' }\r\n  //   ];\r\n  // }\r\n\r\n}\r\n","<div class=\"package-container\">\r\n  <div *ngFor=\"let package of topPackages\" class=\"package-card\">\r\n    <img src=\"{{package.imagePath}}\" alt=\"{{package.name}}\" />\r\n    <h5 id=\"h5\">{{package.packageName}}</h5>\r\n    <!-- <p>{{package.}}</p>\r\n    <span>${{package.price}}</span> -->\r\n  </div>\r\n</div>","// protected.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-protected',\r\n  template: `\r\n    <h2>Protected Data</h2>\r\n    <div *ngIf=\"data\">{{ data.message }} - User: {{ data.user }}</div>\r\n    <div *ngIf=\"error\">{{ error }}</div>\r\n  `,\r\n})\r\nexport class ProtectedComponent implements OnInit {\r\n  data: any;\r\n  error: any;\r\n  private apiUrl = 'https://localhost:44393/api/TravelAway'; // Replace with your .NET API URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n    this.http.get(this.apiUrl).subscribe({\r\n      next: (response) => (this.data = response),\r\n      error: (err) => (this.error = 'Failed to load protected data.'),\r\n    });\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from \"../../travelAway-services/user-service/user.service\";\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  msg: string;\r\n  showDiv: boolean;\r\n  errorMsg: string;\r\n  status:number;\r\n  constructor(private userService: UserService,private formBuilder: FormBuilder, private router: Router) {\r\n    //this.registerForm = this.formBuilder.group({\r\n    //  firstName: ['', [Validators.required, Validators.pattern(\"[a-zA-z]{1,}\")]],\r\n    //  lastName: ['', [Validators.required, Validators.pattern(\"[a-zA-z]{1,}\")]],\r\n    //  emailId: ['', [Validators.required, Validators.pattern(\"^[a-zA-z0-9+_.-]+@[a-zA-z0-9+_.-]+$\")]],\r\n    //  gender: ['', Validators.required],\r\n    //  password: ['', [Validators.required,Validators.maxLength(16)]],\r\n    //  confirmpassword: ['', Validators.required, Validators.minLength(8), Validators.maxLength(16)],\r\n    //  dateOfbirth: ['', [Validators.required, checkDate]],\r\n    //  address: ['', Validators.required],\r\n    //  contactNumber: ['', [Validators.required, Validators.maxLength(10), Validators.pattern(\"[1-9]{1}[0-9]{9}\")]]\r\n    //});\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  SubmitForm(form: NgForm) {\r\n    var email = form.value.emailId;\r\n    this.userService.addUserDetails(form.value.firstName, form.value.lastName, form.value.emailId,\r\n      form.value.password, parseInt(form.value.contactNumber), form.value.address, form.value.gender, new Date(\"1999-08-23\"),1).subscribe(\r\n      responseRegisterStatus => {\r\n        this.status = responseRegisterStatus;\r\n        this.showDiv = true;\r\n        if (this.status==1) {\r\n          this.msg = \"Registered Successfully\";\r\n          sessionStorage.setItem('userName', email);\r\n          sessionStorage.setItem('userRole', \"Customer\");\r\n          this.router.navigate(['/home']);\r\n        } else {\r\n          this.msg = \"Not able to register\";\r\n        }\r\n      },\r\n      responseRegisterError => {\r\n        this.errorMsg = responseRegisterError;\r\n      },\r\n      () => console.log(\"SubmitLoginForm method executed successfully\")\r\n    );\r\n  }\r\n}\r\nfunction checkDate(control: FormControl) {\r\n  var currentDate = new Date();\r\n  var givenDate = new Date(control.value)\r\n  console.log(currentDate);\r\n  console.log(givenDate);\r\n  if (givenDate <= currentDate || givenDate == null) {\r\n    return null\r\n  }\r\n  else {\r\n    return {\r\n      dateError: {\r\n        message: \"Enter a date less than today's date\"\r\n      }\r\n    };\r\n  }\r\n}\r\n","<app-common-layout></app-common-layout>\r\n<div class=\"content\">\r\n  <div class=\"signup\">\r\n    <h1>Signup</h1>\r\n    <form #signupForm=\"ngForm\" (ngSubmit)=\"SubmitForm(signupForm)\">\r\n      <div class=\"name-group\">\r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input type=\"text\" id=\"firstName\" placeholder=\"Enter your first name\" name=\"firstName\" class=\"form-control forminputs\" #firstNameRef=\"ngModel\" ngModel required pattern=\"[a-zA-z]{1,}\" />\r\n        <div *ngIf=\"firstNameRef.errors && (firstNameRef.dirty || firstNameRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!firstNameRef.errors.required\">First Name is required.</div>\r\n          <div [hidden]=\"!firstNameRef.errors.pattern\">First Name should only contain letters.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input type=\"text\" id=\"lastName\" placeholder=\"Enter your last name\" name=\"lastName\" class=\"form-control forminputs\" #lastNameRef=\"ngModel\" ngModel required pattern=\"[a-zA-z]{1,}\" />\r\n        <div *ngIf=\"lastNameRef.errors && (lastNameRef.dirty || lastNameRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!lastNameRef.errors.required\">Last Name is required.</div>\r\n          <div [hidden]=\"!lastNameRef.errors.pattern\">Last Name should only contain letters.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"emailId\">Email address</label>\r\n        <input type=\"email\" id=\"emailId\" placeholder=\"Enter your email address\" name=\"emailId\" class=\"form-control forminputs\" #emailRef=\"ngModel\" ngModel required pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\" />\r\n        <div *ngIf=\"emailRef.errors && (emailRef.dirty || emailRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!emailRef.errors.required\">Email address is required.</div>\r\n          <div [hidden]=\"!emailRef.errors.pattern\">Please enter a valid email address format.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" placeholder=\"Enter your password\" name=\"password\" class=\"form-control forminputs\" #passwordRef=\"ngModel\" minlength=\"8\" maxlength=\"16\" ngModel required />\r\n        <div *ngIf=\"passwordRef.errors && (passwordRef.dirty || passwordRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!passwordRef.errors.required\">Password is required.</div>\r\n          <div [hidden]=\"!passwordRef.errors.minlength || !passwordRef.errors.maxlength\">Password must be between 8 and 16 characters.</div>\r\n        </div>\r\n        </div>\r\n      \r\n        <div class=\"form-group\">\r\n          <label for=\"gender\">Gender</label>\r\n          <select class=\"form-control forminputs\" id=\"gender\" name=\"gender\" #genderRef=\"ngModel\" ngModel required>\r\n            <option value=\"\" disabled selected>Select your gender</option>\r\n            <option value=\"M\">Male</option>\r\n            <option value=\"F\">Female</option>\r\n            <option value=\"O\">Other</option>\r\n          </select>\r\n          <div *ngIf=\"genderRef.errors && (genderRef.dirty || genderRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!genderRef.errors.required\">Please select your gender.</div>\r\n          </div>\r\n        </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\">Confirm Password</label>\r\n        <input type=\"password\" id=\"confirmPassword\" placeholder=\"Confirm your password\" name=\"cpassword\" class=\"form-control forminputs\" #confirmPasswordRef=\"ngModel\" ngModel required />\r\n        <div *ngIf=\"confirmPasswordRef.errors && (confirmPasswordRef.dirty || confirmPasswordRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!confirmPasswordRef.errors.required\">Confirm Password is required.</div>\r\n          <div [hidden]=\"confirmPasswordRef.value !== passwordRef.value && !confirmPasswordRef.errors?.required\">Passwords do not match.</div>\r\n        </div>\r\n      </div>\r\n    \r\n      <div class=\"form-group\">\r\n        <label for=\"contactNumber\">Contact Number</label>\r\n        <input type=\"text\" id=\"contactNumber\" placeholder=\"Enter your contact number\" name=\"contactNumber\" class=\"form-control forminputs\" #contactNumberRef=\"ngModel\" ngModel required pattern=\"[1-9]{1}[0-9]{9}\" />\r\n        <div *ngIf=\"contactNumberRef.errors && (contactNumberRef.dirty || contactNumberRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!contactNumberRef.errors.required\">Contact number is required.</div>\r\n          <div [hidden]=\"!contactNumberRef.errors.pattern\">Contact number should be 10 digits and not start with 0.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"dateOfBirth\">Date of Birth</label>\r\n        <input type=\"date\" id=\"dateOfBirth\" name=\"dateOfBirth\" placeholder=\"Select your date of birth\" class=\"form-control forminputs\" #dobRef=\"ngModel\" ngModel required />\r\n        <div *ngIf=\"dobRef.errors && (dobRef.dirty || dobRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!dobRef.errors.required\">Date of birth is required.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"address\">Address</label>\r\n        <textarea id=\"address\" placeholder=\"Enter your address\" name=\"address\" class=\"form-control forminputs\" #addressRef=\"ngModel\" ngModel required></textarea>\r\n        <div *ngIf=\"addressRef.errors && (addressRef.dirty || addressRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!addressRef.errors.required\">Address is required.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group form-check\">\r\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"termsAndConditions\" name=\"termsAndConditions\" ngModel required>\r\n        <label class=\"form-check-label\" for=\"termsAndConditions\">I agree to the <a href=\"/terms\" target=\"_blank\">Terms and Conditions</a> and <a href=\"/privacy\" target=\"_blank\">Privacy Policy</a></label>\r\n        <div *ngIf=\"signupForm.controls['termsAndConditions']?.invalid && (signupForm.controls['termsAndConditions']?.dirty || signupForm.controls['termsAndConditions']?.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!signupForm.controls['termsAndConditions']?.errors?.required\">You must agree to the terms and conditions.</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!signupForm.form.valid\">Sign Up</button>\r\n      \r\n      <div *ngIf=\"showDiv\" class=\"signup-message\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.css'],\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n  breadcrumbs: Array<{ label: string; url: string }> = [];\r\n\r\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {}\r\n\r\n  // ngOnInit(): void {\r\n  //   this.router.events\r\n  //     .pipe(\r\n  //       filter((event) => event instanceof NavigationEnd),\r\n  //       map(() => this.buildBreadcrumb(this.activatedRoute.root))\r\n  //     )\r\n  //     .subscribe((breadcrumbs) => {\r\n  //       this.breadcrumbs = breadcrumbs;\r\n  //     });\r\n  // }\r\nngOnInit(): void {\r\n  this.router.events\r\n    .pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map(() => this.buildBreadcrumb(this.activatedRoute.root))\r\n    )\r\n    .subscribe((breadcrumbs) => {\r\n      console.log('Breadcrumbs:', breadcrumbs); // Debugging\r\n      this.breadcrumbs = breadcrumbs;\r\n    });\r\n}\r\n  private buildBreadcrumb(route: ActivatedRoute, url: string = '', breadcrumbs: Array<{ label: string; url: string }> = []): Array<{ label: string; url: string }> {\r\n    const children: ActivatedRoute[] = route.children;\r\n\r\n    if (children.length === 0) {\r\n      return breadcrumbs;\r\n    }\r\n\r\n    for (const child of children) {\r\n      const routeURL: string = child.snapshot.url.map((segment) => segment.path).join('/');\r\n      if (routeURL !== '') {\r\n        url += `/${routeURL}`;\r\n      }\r\n\r\n      const label = child.snapshot.data['breadcrumb'];\r\n      if (label) {\r\n        breadcrumbs.push({ label, url });\r\n      }\r\n\r\n      return this.buildBreadcrumb(child, url, breadcrumbs);\r\n    }\r\n\r\n    return breadcrumbs;\r\n  }\r\n}","<nav aria-label=\"breadcrumb\">\r\n  <ol class=\"breadcrumb\">\r\n    <li *ngFor=\"let breadcrumb of breadcrumbs; let last = last\" class=\"breadcrumb-item\" [class.active]=\"last\">\r\n      <a *ngIf=\"!last\" [routerLink]=\"breadcrumb.url\">{{ breadcrumb.label }}</a>\r\n      <span *ngIf=\"last\">{{ breadcrumb.label }}</span>\r\n    </li>\r\n  </ol>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\nimport { IViewBookings } from '../travelAway-interfaces/ViewBookings';\r\n\r\n@Component({\r\n  selector: 'app-view-bookings',\r\n  templateUrl: './view-bookings.component.html',\r\n  styleUrls: ['./view-bookings.component.css']\r\n})\r\nexport class ViewBookingsComponent implements OnInit {\r\n  userRole: string;\r\n  bookings: any[];\r\n  userName: string;\r\n   errorMsg: any;\r\n   rawbookings: any[];\r\n  constructor(private packageService: PackageService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    this.userName = sessionStorage.getItem('userName');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n    this.getBookings();\r\n  }\r\n\r\n  getBookings() {\r\n    this.packageService.getBookings(this.userName).subscribe(\r\n      responseTotalStatus => {\r\n        this.rawbookings = responseTotalStatus;\r\n\r\n        for (let booking of this.rawbookings) {\r\n          if (booking['hotelName'] == 'N/A') {\r\n            booking['noOfRooms'] =0;\r\n          }\r\n          if (booking['totalAmount']<0) {\r\n            booking['totalAmount'] = 0;\r\n          \r\n          }\r\n          booking['dateOfTravel'] = booking['dateOfTravel'].substring(0, 10);\r\n        }\r\n        this.bookings = this.rawbookings;\r\n      },\r\n      responseTotalError => {\r\n        this.errorMsg = responseTotalError;\r\n      },\r\n      () => console.log(\"ViewBookings method executed successfully\")\r\n    );\r\n\r\n  }\r\n\r\n  gocustcare(bookingid: string) {\r\n    if (sessionStorage.getItem('bookingId')) {\r\n      sessionStorage.removeItem('bookingId');\r\n    } \r\n    sessionStorage.setItem('bookingId', bookingid);\r\n    this.router.navigate(['/custcare']);\r\n  }\r\n\r\n  gohotelbook(bookingid: string) {\r\n    if (sessionStorage.getItem('bookingId')) {\r\n      sessionStorage.removeItem('bookingId');\r\n    } \r\n    sessionStorage.setItem('bookingId', bookingid);\r\n    this.router.navigate(['/accommodation']);\r\n  }\r\n  gopayment(bookingid: string) {\r\n    if (sessionStorage.getItem('bookingId')) {\r\n      sessionStorage.removeItem('bookingId');\r\n    } \r\n      sessionStorage.setItem('bookingId', bookingid);\r\n\r\n    this.router.navigate(['/payment']);\r\n  }\r\n}\r\n","<!-- <app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">My Bookings</h1>\r\n    <div style=\"width:100%;height:330px;overflow-y:scroll;\">\r\n      <div class=\"row pkgrow\" *ngFor=\"let booking of bookings\">\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Package:</span>&nbsp;&nbsp;&nbsp;{{booking.packageName}}</p>\r\n          <p><span>Places to visit:</span>&nbsp;&nbsp;&nbsp;{{booking.placesToVisit}}</p>\r\n          <p><span>Days/Nights:</span>&nbsp;&nbsp;&nbsp;{{booking.noOfDays}}/{{booking.noOfNights}}</p>\r\n          <p><span>Date of Travel:</span>&nbsp;&nbsp;&nbsp;{{booking.dateOfTravel}}</p>\r\n        </div>\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Hotel:</span>&nbsp;&nbsp;&nbsp;<i *ngIf=\"booking.noOfRooms\">{{booking.hotelName}} ({{booking.noOfRooms}} rooms)</i><i [hidden]=\"booking.noOfRooms\">Not Booked</i></p>\r\n          <p><span>Total Adults/children:</span>&nbsp;&nbsp;&nbsp;{{booking.numberOfAdults}}/{{booking.numberOfChildren}}</p>\r\n          <p><span>Payment:</span>&nbsp;&nbsp;&nbsp;<i *ngIf=\"booking.totalAmount\">&#8377;{{booking.totalAmount}}</i><i [hidden]=\"booking.totalAmount\">Not Paid</i></p>\r\n        </div>\r\n        <div class=\"col-md-2 col-12 pkgdelcol\" style=\"justify-content:space-around\">\r\n          <button class=\"btn btn-primary btn-sm\" [disabled]=\"booking.noOfRooms || booking.totalAmount\" (click)=\"gohotelbook(booking.bookingId)\"><span *ngIf=\"!booking.noOfRooms && !booking.totalAmount\">Book hotel</span><span [hidden]=\"!booking.noOfRooms\">Hotel Booked</span><span *ngIf=\"!booking.noOfRooms && booking.totalAmount\">Hotel Not Booked</span></button>\r\n          <button class=\"btn btn-danger btn-sm\" (click)=\"gocustcare(booking.bookingId)\">Customer Care</button>\r\n          <button class=\"btn btn-success btn-sm\" routerLink=\"/payment\" [disabled]=\"booking.totalAmount\" (click)=\"gopayment(booking.bookingId)\"><span *ngIf=\"!booking.totalAmount\">Make Payment</span><span [hidden]=\"!booking.totalAmount\">Payment done</span></button>\r\n        </div>\r\n      </div>\r\n      <div id=\"nobooking\" [hidden]=\"bookings.length\">\r\n        <h1>No bookings available...</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n\r\n<app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">My Bookings</h1>\r\n    <div class=\"bookings-container\">\r\n      <div class=\"row pkgrow\" *ngFor=\"let booking of bookings\">\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Package:</span>&nbsp;&nbsp;&nbsp;{{booking.packageName}}</p>\r\n          <p><span>Places to visit:</span>&nbsp;&nbsp;&nbsp;{{booking.placesToVisit}}</p>\r\n          <p><span>Days/Nights:</span>&nbsp;&nbsp;&nbsp;{{booking.noOfDays}}/{{booking.noOfNights}}</p>\r\n          <p><span>Date of Travel:</span>&nbsp;&nbsp;&nbsp;{{booking.dateOfTravel}}</p>\r\n        </div>\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Hotel:</span>&nbsp;&nbsp;&nbsp;<i *ngIf=\"booking.noOfRooms\">{{booking.hotelName}} ({{booking.noOfRooms}} rooms)</i><i [hidden]=\"booking.noOfRooms\">Not Booked</i></p>\r\n          <p><span>Total Adults/children:</span>&nbsp;&nbsp;&nbsp;{{booking.numberOfAdults}}/{{booking.numberOfChildren}}</p>\r\n          <p><span>Payment:</span>&nbsp;&nbsp;&nbsp;<i *ngIf=\"booking.totalAmount\">&#8377;{{booking.totalAmount}}</i><i [hidden]=\"booking.totalAmount\">Not Paid</i></p>\r\n        </div>\r\n        <div class=\"col-md-2 col-12 pkgdelcol img-container\">\r\n          <button class=\"btn btn-primary btn-sm\" [disabled]=\"booking.noOfRooms || booking.totalAmount\" (click)=\"gohotelbook(booking.bookingId)\">\r\n            <span *ngIf=\"!booking.noOfRooms && !booking.totalAmount\">Book hotel</span>\r\n            <span [hidden]=\"!booking.noOfRooms\">Hotel Booked</span>\r\n            <span *ngIf=\"!booking.noOfRooms && booking.totalAmount\">Hotel Not Booked</span>\r\n          </button>\r\n          <button class=\"btn btn-danger btn-sm\" (click)=\"gocustcare(booking.bookingId)\">Customer Care</button>\r\n          <button class=\"btn btn-success btn-sm\" routerLink=\"/payment\" [disabled]=\"booking.totalAmount\" (click)=\"gopayment(booking.bookingId)\">\r\n            <span *ngIf=\"!booking.totalAmount\">Make Payment</span>\r\n            <span [hidden]=\"!booking.totalAmount\">Payment done</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div id=\"nobooking\" *ngIf=\"!bookings.length\">\r\n        <h1>No bookings available...</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\n\r\n@Component({\r\n  selector: 'app-view-hotels',\r\n  templateUrl: './view-hotels.component.html',\r\n  styleUrls: ['./view-hotels.component.css']\r\n})\r\nexport class ViewHotelsComponent implements OnInit {\r\n  userRole: string;\r\n    errorMsg: any;\r\n  hotels: any[]=[];\r\n  constructor(private packageService: PackageService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Employee\") {\r\n      this.router.navigate(['/login/2']);\r\n    }\r\n    this.getHotels();\r\n  }\r\n  getHotels() {\r\n    this.packageService.getHotels().subscribe(\r\n      responseHotelStatus => {\r\n        this.hotels = responseHotelStatus;\r\n        console.log(this.hotels);\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"ViewHotels method executed successfully\")\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n\r\n<app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">My Hotels</h1>\r\n    <div class=\"hotels-container\">\r\n      <div class=\"row pkgrow\" *ngFor=\"let hotel of hotels\">\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Hotel Name:</span>&nbsp;&nbsp;&nbsp;{{hotel.hotelName}}</p>\r\n          <p><span>Hotel Rating:</span>&nbsp;&nbsp;&nbsp;{{hotel.hotelRating}}-star</p>\r\n          <p><span>Single Room Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{hotel.singleRoomPrice}}</p>\r\n        </div>\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Double Room Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{hotel.doubleRoomPrice}}</p>\r\n          <p><span>Deluxe Room Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{hotel.deluxeeRoomPrice}}</p>\r\n          <p><span>Suite Room Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{hotel.suiteRoomPrice}}</p>\r\n        </div>\r\n        <div class=\"col-md-2 col-12 pkgdelcol img-container\">\r\n          <img src=\"../assets/hotels.png\" alt=\"Hotel Image\" class=\"pkgimg\" />\r\n        </div>\r\n      </div>\r\n      <div id=\"nohotel\" [hidden]=\"hotels?.length\">\r\n        <h1>No hotels available...</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PackageService } from \"../../travelAway-services/package-service/package.service\";\r\nimport { IPackageDetails } from '../travelAway-interfaces/PackageDetails';\r\n\r\n@Component({\r\n  selector: 'app-view-package-details',\r\n  templateUrl: './view-package-details.component.html',\r\n  styleUrls: ['./view-package-details.component.css']\r\n})\r\nexport class ViewPackageDetailsComponent implements OnInit {\r\n  packageId: string;\r\n  packageName: string;\r\n  packageDetails: IPackageDetails[];\r\n  showMsgDiv: boolean = false;\r\n  errMsg: string;\r\n  userRole: string;\r\n  customerLayout: boolean = false;\r\n  commonLayout: boolean = false;\r\n  constructor(private packageService: PackageService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    } else if (this.userRole == \"Customer\") {\r\n      this.customerLayout = true;\r\n    }\r\n    this.packageId = this.route.snapshot.params['packageId'];\r\n    this.packageName = this.route.snapshot.params['packageName'];\r\n    this.getPackageDetails(this.packageId);\r\n\r\n    if (this.packageDetails == null) {\r\n      this.showMsgDiv = true;\r\n    }\r\n  }\r\n\r\n\r\n  getPackageDetails(packageId: string) {\r\n    this.packageService.getPackageDetails(packageId).subscribe(\r\n      responseData => {\r\n        this.packageDetails = responseData;\r\n        console.log(this.packageDetails);\r\n        this.showMsgDiv = false;\r\n      },\r\n      responseError => {\r\n        this.packageDetails = null;\r\n        this.errMsg = responseError;\r\n        console.log(this.errMsg);\r\n      },\r\n      () => console.log(\"GetPackageDetails method excuted successfully\")\r\n    );\r\n  }\r\n\r\n  // navigateToBookPackage(packageDetailsId: number) {\r\n  //   this.router.navigate(['bookpkg', packageDetailsId]);\r\n  // }\r\n  navigateToBookPackage(packageDetailsId: number, packageName: string) {\r\n  this.router.navigate(['bookpkg', packageDetailsId], { queryParams: { name: packageName } });\r\n}\r\n}\r\n","\r\n<div *ngIf=\"commonLayout\">\r\n  <app-common-layout></app-common-layout>\r\n</div>\r\n<div *ngIf=\"customerLayout\">\r\n  <app-user-layout></app-user-layout>\r\n</div>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">Package Details: <span>{{packageName}}</span></h1>\r\n    <div class=\"pkgrow\" *ngFor=\"let packageDetail of packageDetails\">\r\n      <div class=\"col-md-3 col-12 pkgdelcol\">\r\n        <h5>Places to visit</h5>\r\n        <p>{{packageDetail.placesToVisit}}</p>\r\n          <img src=\"{{packageDetail.imagePath}}\" alt=\"image\" class=\"img-thumbnail pkgimg\" id=\"pkgdis\" />\r\n      </div>\r\n      <div class=\"col-md-6 col-12 pkgdelcol\">\r\n        <h5>Package Description</h5>\r\n        <p>{{packageDetail.description}}</p>\r\n      </div>\r\n      <div class=\"col-md-3 col-12 pkgdelcol\">\r\n        <h5>Details</h5>\r\n        <p><span class=\"boldtext\">Days/Nights: </span><span>{{packageDetail.noOfDays}} / {{packageDetail.noOfNights}}</span></p>\r\n        <p><span class=\"boldtext\">Price: </span><span>{{packageDetail.pricePerAdult}}</span></p>\r\n        <p><span class=\"boldtext\">Accommodation: </span><span>{{packageDetail.accomodation}}</span></p>\r\n        <button type=\"button\" id=\"bookingbtn\" (click)=\"navigateToBookPackage(packageDetail.packageDetailsId,packageDetail.placesToVisit)\">Book</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IPackage } from '../travelAway-interfaces/Package';\r\nimport { ICategory } from '../travelAway-interfaces/Category';\r\nimport { PackageService } from \"../../travelAway-services/package-service/package.service\";\r\n@Component({\r\n  selector: 'app-view-packages',\r\n  templateUrl: './view-packages.component.html',\r\n  styleUrls: ['./view-packages.component.css']\r\n})\r\nexport class ViewPackagesComponent implements OnInit {\r\n  packages: IPackage[];\r\n  categories: ICategory[];\r\n  filteredPackages: IPackage[];\r\n  errorMsg: string;\r\n  showMsg: boolean;\r\n  imagePath: string;\r\n  userRole: string;\r\n  customerLayout: boolean = false;\r\n  commonLayout: boolean = false;\r\n  \r\n  constructor(private packageService: PackageService, private router: Router) {\r\n \r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    } else if (this.userRole == \"Customer\") {\r\n      this.customerLayout = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPackages();\r\n    this.getCategories();\r\n\r\n    if (this.packages == null) {\r\n      this.showMsg = true;\r\n    }\r\n\r\n    this.filteredPackages = this.packages\r\n\r\n    this.imagePath = \"src/assets/\"\r\n  }\r\n  getPackages() {\r\n    this.packageService.getPackages().subscribe(\r\n      responseGet => {\r\n        this.showMsg = false;\r\n        this.packages = responseGet;\r\n        this.filteredPackages = responseGet\r\n      },\r\n      resonseError => {\r\n        this.showMsg = true\r\n        this.packages = null\r\n        this.errorMsg = resonseError\r\n      },\r\n      () => console.log(\"GetPackage method executed\",this.packages)\r\n    )\r\n  }\r\n\r\n  getCategories() {\r\n    this.packageService.getCategories().subscribe(\r\n      responseGet => {\r\n        this.categories = responseGet\r\n        console.log(this.categories)\r\n      },\r\n      responseError => {\r\n        this.errorMsg = responseError\r\n        this.categories = null\r\n      },\r\n      () => console.log(\"Get categories executed\")\r\n    )\r\n  }\r\n\r\n  searchPackageByCategory(categoryId: string) {\r\n    //console.log(categoryId)\r\n    this.filteredPackages = this.packages;\r\n    //if (categoryId == \"100\") {\r\n    //  this.filteredPackages = this.packages;\r\n    //}\r\n    //else {\r\n    \r\n    var catid = parseInt(categoryId)\r\n    if (catid > 0) {\r\n      this.filteredPackages = this.filteredPackages.filter(prod => prod.packageCategoryId == catid);\r\n    }\r\n    \r\n    console.log(this.filteredPackages);\r\n    //}\r\n  }\r\n\r\n  viewPackageDetails(packageId: number,packageName:string) {\r\n    console.log(packageId);\r\n    this.router.navigate(['viewPackageDetails', packageId,packageName]);\r\n  }\r\n}\r\n","<div *ngIf=\"commonLayout\">\r\n  <app-common-layout></app-common-layout>\r\n</div>\r\n<div *ngIf=\"customerLayout\">\r\n  <app-user-layout></app-user-layout>\r\n</div>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">Packages</h1>\r\n    <div class=\"row\" style=\"padding-bottom:5px;\">\r\n      <div class=\"col-md-10 filter\" id=\"filter\">\r\n        <label>Filter packages:</label>\r\n      </div>\r\n      <div class=\"col-md-2 filter\">\r\n        <select class=\"form-control\" id=\"cat\" #categorydrop (change)=\"searchPackageByCategory(categorydrop.value)\">\r\n          <option value=\"0\">All Categories</option>\r\n          <option *ngFor=\"let category of categories\" value={{category.packageCategoryId}}>\r\n            {{category.packageCategoryName}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div class=\"row pkgrow\" *ngFor=\"let package of filteredPackages\">\r\n        <div class=\"col-md-3 col-sm-4 col-0\">\r\n          <img src=\"{{package.imagePath}}\" alt=\"image\" class=\"img-thumbnail pkgimg\" id=\"pkgdis\" (click)=\"viewPackageDetails(package.packageId,package.packageName)\" />\r\n        </div>\r\n        <div class=\"col-md-9 col-sm-8 col-12 pkgcol\">\r\n          <h3 (click)=\"viewPackageDetails(package.packageId,package.packageName)\">{{package.packageName}}</h3>\r\n          <p>Explore the {{package.packageName}} with us! </p>\r\n          <p>{{package.description}}</p> \r\n         </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-view-vehicles',\r\n  templateUrl: './view-vehicles.component.html',\r\n  styleUrls: ['./view-vehicles.component.css']\r\n})\r\nexport class ViewVehiclesComponent implements OnInit {\r\n  userRole: string;\r\n  vehicles: any[];\r\n   errorMsg: any;\r\n  constructor(private packageService: PackageService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Employee\") {\r\n      this.router.navigate(['/login/2']);\r\n    }\r\n    this.getVehicles();\r\n  }\r\n  getVehicles() {\r\n    this.packageService.getVehicles().subscribe(\r\n      responseVehicleStatus => {\r\n        this.vehicles = responseVehicleStatus;\r\n      },\r\n      responseVehicleError => {\r\n        this.errorMsg = responseVehicleError;\r\n      },\r\n      () => console.log(\"ViewVehicles method executed successfully\")\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n<app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">My Vehicles</h1>\r\n    <div class=\"vehicles-container\">\r\n      <div class=\"row pkgrow\" *ngFor=\"let vehicle of vehicles\">\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Vehicle Name:</span>&nbsp;&nbsp;&nbsp;{{vehicle.vehicleName}}</p>\r\n          <p><span>Vehicle Type:</span>&nbsp;&nbsp;&nbsp;{{vehicle.vehicleType}}</p>\r\n          <p><span>Rate Per Km:</span>&nbsp;&nbsp;&nbsp;&#8377;{{vehicle.ratePerKm}}</p>\r\n        </div>\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Rate Per Hour:</span>&nbsp;&nbsp;&nbsp;&#8377;{{vehicle.ratePerHour}}</p>\r\n          <p><span>Base Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{vehicle.basePrice}}</p>\r\n        </div>\r\n        <div class=\"col-md-2 col-12 pkgdelcol img-container\">\r\n          <img src=\"../assets/car.png\" alt=\"Vehicle Image\" class=\"pkgimg\" />\r\n        </div>\r\n      </div>\r\n      <div id=\"novehicle\" *ngIf=\"!vehicles.length\">\r\n        <h1>No vehicles available...</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\ninterface AuthResponse {\r\n  token: string;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = 'https://localhost:44393/api/auth'; // Replace with your .NET API URL\r\n  //private apiUrl ='https://localhost:44393/api/Auth/customer/login/CustomerLogin';\r\n  private tokenSubject = new BehaviorSubject<string | null>(this.getToken());\r\n  public token$ = this.tokenSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient,private jwtHelper: JwtHelperService) {}\r\n\r\n  login(EmailId: string, UserPassword: string,loginRole: number): Observable<AuthResponse> {\r\n    const Password=UserPassword;\r\n    if (loginRole == 1) \r\n    {\r\n    return this.http.post<AuthResponse>(`${this.apiUrl}/customer/login`, { EmailId: EmailId, UserPassword: UserPassword}).pipe(\r\n      tap((response) => this.saveToken(response.token))\r\n    );\r\n    }\r\n    if (loginRole == 2) \r\n    {\r\n      return this.http.post<AuthResponse>(`${this.apiUrl}/employee/login`, { EmailId: EmailId, Password: Password}).pipe(\r\n        tap((response) => this.saveToken(response.token))\r\n      );\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.clearToken();\r\n    this.tokenSubject.next(null);\r\n    // Optionally redirect the user to the login page\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('authToken');\r\n  }\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('authToken', token);\r\n    this.tokenSubject.next(token);\r\n  }\r\n\r\n    decodeToken(): any {\r\n    const token = this.getToken();\r\n    if (token) {\r\n      return this.jwtHelper.decodeToken(token);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getRole(): string | null {\r\n    const decodedToken = this.decodeToken();\r\n    console.log(\"decode\",decodedToken);\r\n    return decodedToken ? decodedToken['role'] : null; // Assuming your role claim is named 'role'\r\n  }\r\n\r\n  private clearToken(): void {\r\n    localStorage.removeItem('authToken');\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth-service/authservice';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  // intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n  //   return next.handle(request);\r\n  // }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    if (authToken) {\r\n      const authReq = req.clone({\r\n        headers: req.headers.set('Authorization', `Bearer ${authToken}`),\r\n      });\r\n      return next.handle(authReq);\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { IPackage } from 'src/app/travelAway-interfaces/Package';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ICategory } from '../../app/travelAway-interfaces/Category';\r\nimport { IPackageDetails } from '../../app/travelAway-interfaces/PackageDetails';\r\nimport { IBookPackage } from '../../app/travelAway-interfaces/BookPackage';\r\nimport { IViewBookings } from '../../app/travelAway-interfaces/ViewBookings';\r\nimport { IVehicle } from '../../app/travelAway-interfaces/Vehicle';\r\nimport { IHotel } from '../../app/travelAway-interfaces/Hotel';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PackageService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPackages(): Observable<IPackage[]> {\r\n    let temp = this.http.get<IPackage[]>('https://localhost:44393/api/TravelAway/GetPackages').pipe(catchError(this.errorHandler))\r\n    return temp;\r\n  }\r\n\r\n  getVehicles(): Observable<IVehicle[]> {\r\n    let temp = this.http.get<IVehicle[]>('https://localhost:44393/api/TravelAway/GetVehicles').pipe(catchError(this.errorHandler))\r\n    return temp;\r\n  }\r\n\r\n  getHotels(): Observable<IHotel[]> {\r\n    let temp = this.http.get<IHotel[]>('https://localhost:44393/api/TravelAway/GetHotels').pipe(catchError(this.errorHandler))\r\n    return temp;\r\n  }\r\n\r\n  getCategories(): Observable<ICategory[]> {\r\n    return this.http.get<ICategory[]>('https://localhost:44393/api/TravelAway/GetPackageCategories').pipe(catchError(this.errorHandler));\r\n  }\r\n  getPackageDetails(packageId: string): Observable<IPackageDetails[]> {\r\n    let PackageId = { packageId: packageId };\r\n    let temp = this.http.get<IPackageDetails[]>('https://localhost:44393/api/TravelAway/GetPackageDetailsByPackageId', { params: PackageId }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  bookPackage(bookedpkg: IBookPackage): Observable<number> {\r\n    let temp = this.http.post<number>('https://localhost:44393/api/TravelAway/AddBookPackage', bookedpkg).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getBookings(email: string): Observable<IViewBookings[]> {\r\n    let Email = { email: email };\r\n    let temp = this.http.get<IViewBookings[]>('https://localhost:44393/api/TravelAway/ViewBookedPackages', { params: Email }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    console.error(error);\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { IPackage } from 'src/app/travelAway-interfaces/Package';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { IEmployee } from '../../app/travelAway-interfaces/Employee';\r\nimport { ICustomer } from '../../app/travelAway-interfaces/Customer';\r\nimport { IHotel } from '../../app/travelAway-interfaces/Hotel';\r\nimport { IVehicle } from '../../app/travelAway-interfaces/Vehicle';\r\nimport { IcustCare } from '../../app/travelAway-interfaces/CustomerCare';\r\nimport { IAccommodation } from '../../app/travelAway-interfaces/Accommodation';\r\nimport { IPayment } from '../../app/travelAway-interfaces/Payment';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  \r\n  }\r\n  //for login\r\n  validateCredentials(email: string, password: string,loginRole: number): Observable<number> {\r\n    let temp;\r\n    if (loginRole == 1) {\r\n      var custObj: ICustomer;\r\n     // custObj = { EmailId: email, UserPassword: password, FirstName:null,LastName:null,RoleId: null,Gender:null,DateOfBirth: null, Address: null,ContactNumber:null};\r\n      temp = this.http.post<number>('https://localhost:44393/api/TravelAway/ValidateLoginCustomer', { EmailId: email, UserPassword: password}).pipe(catchError(this.errorHandler))\r\n    } else if (loginRole == 2) {\r\n      var EmpObj: IEmployee;\r\n      EmpObj = { EmailId: email, Password: password, FirstName: null, LastName: null, RoleId:null};\r\n      temp = this.http.post<number>('https://localhost:44393/api/TravelAway/ValidateLoginEmployee',EmpObj).pipe(catchError(this.errorHandler))\r\n\r\n    }\r\n    return temp;\r\n  }\r\n  //for register\r\n  addUserDetails(firstName: string, lastName: string, emailId: string,\r\n    password: string, contactNumber: number, address: string, gender: string, dateOfBirth: Date, roleId: number): Observable<number> {\r\n    var custObj: ICustomer;\r\n    custObj = { EmailId: emailId, UserPassword: password, FirstName: firstName, LastName: lastName, RoleId: roleId, Gender: gender, DateOfBirth: dateOfBirth, Address: address, ContactNumber: contactNumber };\r\n    let temp = this.http.post<number>('https://localhost:44393/api/TravelAway/AddCustomer', custObj).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  updateUserDetails(firstName: string, lastName: string, emailId: string,\r\n    password: string, contactNumber: number, address: string, gender: string, dateOfBirth: Date, roleId: number): Observable<boolean> {\r\n    var custObj: ICustomer;\r\n    custObj = { EmailId: emailId, UserPassword: password, FirstName: firstName, LastName: lastName, RoleId: roleId, Gender: gender, DateOfBirth: dateOfBirth, Address: address, ContactNumber: contactNumber };\r\n    let temp = this.http.put<boolean>('https://localhost:44393/api/TravelAway/UpdateProfile', custObj).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getCustomerById(emailId: string): Observable<ICustomer> {\r\n    let CustId = { emailId: emailId };\r\n    let temp = this.http.get<ICustomer>('https://localhost:44393/api/TravelAway/GetCustomerDetails', { params: CustId }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  addHotel(hotel: IHotel): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/AddHotel', hotel).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  addVehicle(vehicle: IVehicle): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/AddVehicle', vehicle).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  custCare(query: IcustCare): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/AddCustomerCare', query).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getassignee(): Observable<number> {\r\n    let temp = this.http.get<number>('https://localhost:44393/api/TravelAway/GetAssignee').pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n  getTotal(bookingId: string): Observable<number> {\r\n    let BookId = { bookingId: bookingId };\r\n    let temp = this.http.get<number>('https://localhost:44393/api/TravelAway/GetTotal', { params: BookId }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getCitiesByBookId(bookingId: string): Observable<string> {\r\n    let BookId = { bookingId: bookingId };\r\n    let temp = this.http.get<string>('https://localhost:44393/api/TravelAway/GetCityByPackageDetailsId', { params: BookId }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getHotelRatingByCity(city: string): Observable<number[]> {\r\n    let City = { city: city };\r\n    let temp = this.http.get<number[]>('https://localhost:44393/api/TravelAway/GetHotelRatingsByCity', { params: City }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getHotelsByCityAndRating(city: string, rating: string): Observable<string[]> {\r\n  // let CityandRating = { city: city,rating: rating};\r\n    //let params = new HttpParams().set('city', city).set('rating', rating);\r\n    //console.log(\"mayank\",params);\r\n    let address: string = 'https://localhost:44393/api/TravelAway/GetHotelsByCityAndRating?city=' + city + '&rating=' + rating;\r\n    let temp = this.http.get<string[]>(address).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getCost(hotelName: string, roomtype: string): Observable<number> {\r\n \r\n    let address: string = 'https://localhost:44393/api/TravelAway/GetHotelCost?hotelName=' + hotelName + '&roomtype=' + roomtype;\r\n    let temp = this.http.get<number>(address).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  bookAccommodation(accommodation: IAccommodation): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/AddAccomodationDetails', accommodation).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n\r\n  makePayment(pay:IPayment): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/Payment', pay).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n    errorHandler(error: HttpErrorResponse) {\r\n      console.error(error);\r\n      return throwError(error.message || \"Server Error\");\r\n    }\r\n  }\r\n","/* (ignored) */"],"sourceRoot":"webpack:///"}