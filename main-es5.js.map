{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/accommodation/accommodation.component.ts","webpack:///src/app/accommodation/accommodation.component.html","webpack:///src/app/add-hotel/add-hotel.component.ts","webpack:///src/app/add-hotel/add-hotel.component.html","webpack:///src/app/add-vehicle/add-vehicle.component.ts","webpack:///src/app/add-vehicle/add-vehicle.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/book-package/book-package.component.ts","webpack:///src/app/book-package/book-package.component.html","webpack:///src/app/customer-care/customer-care.component.ts","webpack:///src/app/customer-care/customer-care.component.html","webpack:///src/app/edit-details/edit-details.component.ts","webpack:///src/app/edit-details/edit-details.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/layouts/common-layout/common-layout.component.ts","webpack:///src/app/layouts/common-layout/common-layout.component.html","webpack:///src/app/layouts/employee-layout/employee-layout.component.ts","webpack:///src/app/layouts/employee-layout/employee-layout.component.html","webpack:///src/app/layouts/user-layout/user-layout.component.ts","webpack:///src/app/layouts/user-layout/user-layout.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/payment/payment.component.ts","webpack:///src/app/payment/payment.component.html","webpack:///src/app/popular-packages/popular-packages.component.ts","webpack:///src/app/popular-packages/popular-packages.component.html","webpack:///src/app/protected/protected.component.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/shared/breadcrumb/breadcrumb.component.ts","webpack:///src/app/shared/breadcrumb/breadcrumb.component.html","webpack:///src/app/view-bookings/view-bookings.component.ts","webpack:///src/app/view-bookings/view-bookings.component.html","webpack:///src/app/view-hotels/view-hotels.component.ts","webpack:///src/app/view-hotels/view-hotels.component.html","webpack:///src/app/view-package-details/view-package-details.component.ts","webpack:///src/app/view-package-details/view-package-details.component.html","webpack:///src/app/view-packages/view-packages.component.ts","webpack:///src/app/view-packages/view-packages.component.html","webpack:///src/app/view-vehicles/view-vehicles.component.ts","webpack:///src/app/view-vehicles/view-vehicles.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/travelAway-services/auth-service/authservice.ts","webpack:///src/travelAway-services/auth.interceptor.ts","webpack:///src/travelAway-services/package-service/package.service.ts","webpack:///src/travelAway-services/user-service/user.service.ts","webpack:///util.inspect (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccommodationComponent","userService","router","route","showDiv","ngOnInit","bookingId","sessionStorage","getItem","userRole","navigate","getCitiesByBookingId","getCitiesByBookId","subscribe","responseCitiesStatus","rawcities","cities","split","responseCitiesError","errorMsg","console","log","searchrating","city","getHotelRatingByCity","ratings","searchhotel","rating","getHotelsByCityAndRating","hotels","getCost","hotelName","roomtype","cost","rooms","submitaccodForm","form","accommodation","parseInt","value","bookingid","noOfRooms","hotelRating","price","estimatedcost","roomType","bookAccommodation","responseAccommodationStatus","status","confirm","msg","responseAccommodationError","selector","templateUrl","styleUrls","AddHotelComponent","submithotelForm","hotel","hotelname","hotelType","singleRoomPrice","singleprice","doubleRoomPrice","doubleprice","deluxeeRoomPrice","deluxeprice","suiteRoomPrice","suiteprice","addHotel","responseHotelStatus","responseHotelError","AddVehicleComponent","submitvehicleForm","vehicle","vehicleName","vehicleType","ratePerHour","rateperhr","ratePerKm","rateperkm","basePrice","addVehicle","AppComponent","title","tokenGetter","localStorage","AppModule","provide","useClass","multi","forRoot","timeOut","positionClass","preventDuplicates","config","whitelistedDomains","blacklistedRoutes","declarations","imports","providers","bootstrap","routes","path","component","data","breadcrumb","routing","BookPackageComponent","packageService","tostr","dialog","dialogTitle","dialogMessage","packageId","snapshot","params","packageName","queryParams","ngAfterViewInit","submitBookForm","email","bookpkg","contactNumber","emailId","address","dateOfTravel","Date","numberOfAdults","adults","numberOfChildren","children","bookPackage","responseRegisterStatus","setItem","toString","success","error","responseRegisterError","closeDialog","result","dialogRef","close","CustomerCareComponent","getAssignee","submitCompForm","query","queryStatus","assignee","custCare","responsecustCareStatus","getassignee","responseassignee","responseassigneeError","EditDetailsComponent","ac","customerLayout","commonLayout","getCustomerDetails","getCustomerById","customer","firstName","lastName","gender","Address","contact","dob","substring","SubmitForm","updateUserDetails","dateOfBirth","responseUpdateStatus","responseUpdateError","HomeComponent","employeeLayout","CommonLayoutComponent","userType","paramMap","get","updateForm","warn","EmployeeLayoutComponent","logOut","removeItem","UserLayoutComponent","LoginComponent","toastr","authService","routeSubscription","role","loginRole","rolename","submitLoginForm","password","login","next","response","getRole","PaymentComponent","getTotal","responseTotalStatus","total","responseTotalError","submitpayForm","pay","bookid","paymentStatus","totalAmount","amount","makePayment","alert","PopularPackagesComponent","popularPackages","topPackages","loadPopularPackages","showMsg","imagePath","getPackages","responseGet","slice","resonseError","ProtectedComponent","http","apiUrl","err","template","RegisterComponent","formBuilder","addUserDetails","checkDate","control","currentDate","givenDate","dateError","message","BreadcrumbComponent","activatedRoute","breadcrumbs","events","pipe","event","buildBreadcrumb","root","url","length","child","routeURL","map","segment","join","label","push","ViewBookingsComponent","userName","getBookings","rawbookings","booking","bookings","gocustcare","gohotelbook","gopayment","ViewHotelsComponent","getHotels","ViewPackageDetailsComponent","showMsgDiv","getPackageDetails","packageDetails","responseData","responseError","errMsg","navigateToBookPackage","packageDetailsId","name","ViewPackagesComponent","getCategories","packages","filteredPackages","categories","searchPackageByCategory","categoryId","catid","filter","prod","packageCategoryId","viewPackageDetails","ViewVehiclesComponent","getVehicles","responseVehicleStatus","vehicles","responseVehicleError","environment","production","bootstrapModule","AuthService","jwtHelper","tokenSubject","getToken","token$","asObservable","EmailId","UserPassword","Password","post","saveToken","token","logout","clearToken","decodeToken","decodedToken","isAuthenticated","providedIn","AuthInterceptor","intercept","authToken","authReq","clone","headers","set","handle","PackageService","temp","errorHandler","PackageId","bookedpkg","Email","UserService","validateCredentials","custObj","EmpObj","FirstName","LastName","RoleId","roleId","Gender","DateOfBirth","ContactNumber","put","CustId","BookId","City"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBc;;AAAqD;;AAAQ;;;;;;AAArD;;AAA6C;;AAAA;;;;;;AAGzD;;AACE;;AAAG;;AAAiB;;AACtB;;;;;;AAWI;;AAA0D;;AAAe;;;;;;AAAjE;;AAAkD;;AAAA;;;;;;AAG9D;;AACE;;AAAG;;AAAmB;;AACxB;;;;;;AAOI;;AAAuD;;AAAS;;;;;;AAAxD;;AAA+C;;AAAA;;;;;;AAG3D;;AACE;;AAAG;;AAAkB;;AACvB;;;;;;AAiBA;;AACE;;AAAG;;AAAsB;;AAC3B;;;;;;AAOA;;AACE;;AAAG;;AAA4B;;AACjC;;;;QDtEGC,sB;;;AAaX,sCAAoBC,WAApB,EAAsDC,MAAtD,EAA8EC,KAA9E,EAAqG;AAAA;;AAAjF,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAR9E,aAAAC,OAAA,GAAmB,KAAnB;AAQwG;;;;eAExG,SAAAC,QAAQ;AACN,eAAKC,SAAL,GAAiBC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAjB;AACA,eAAKC,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;AACD,eAAKC,oBAAL,CAA0B,KAAKL,SAA/B;AACD;;;eAED,SAAAK,oBAAoB,CAACL,SAAD,EAAmB;AAAA;;AACrC,eAAKL,WAAL,CAAiBW,iBAAjB,CAAmCN,SAAnC,EAA8CO,SAA9C,CACE,UAAAC,oBAAoB,EAAI;AACtB,iBAAI,CAACC,SAAL,GAAiBD,oBAAjB;AACA,iBAAI,CAACE,MAAL,GAAc,KAAI,CAACD,SAAL,CAAeE,KAAf,CAAqB,GAArB,CAAd;AACD,WAJH,EAKE,UAAAC,mBAAmB,EAAI;AACrB,iBAAI,CAACC,QAAL,GAAgBD,mBAAhB;AACD,WAPH,EAQE;AAAA,mBAAME,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAAN;AAAA,WARF;AAWD;;;eAED,SAAAC,YAAY,CAACC,IAAD,EAAe;AAAA;;AACzB,eAAKtB,WAAL,CAAiBuB,oBAAjB,CAAsCD,IAAtC,EAA4CV,SAA5C,CACE,UAAAC,oBAAoB,EAAI;AACtB,kBAAI,CAACW,OAAL,GAAeX,oBAAf;AAED,WAJH,EAKE,UAAAI,mBAAmB,EAAI;AACrB,kBAAI,CAACC,QAAL,GAAgBD,mBAAhB;AACD,WAPH,EAQE;AAAA,mBAAME,OAAO,CAACC,GAAR,CAAY,0CAAZ,CAAN;AAAA,WARF;AAUD;;;eAED,SAAAK,WAAW,CAACC,MAAD,EAAiBJ,IAAjB,EAA+B;AAAA;;AAExC,eAAKtB,WAAL,CAAiB2B,wBAAjB,CAA0CL,IAA1C,EAA+CI,MAA/C,EAAuDd,SAAvD,CACE,UAAAC,oBAAoB,EAAI;AACvB,kBAAI,CAACe,MAAL,GAAcf,oBAAd;AAEA,WAJH,EAKE,UAAAI,mBAAmB,EAAI;AACrB,kBAAI,CAACC,QAAL,GAAgBD,mBAAhB;AACD,WAPH,EAQE;AAAA,mBAAME,OAAO,CAACC,GAAR,CAAY,0CAAZ,CAAN;AAAA,WARF;AAUD;;;eAED,SAAAS,OAAO,CAACC,SAAD,EAAoBC,QAApB,EAAsC;AAAA;;AAE3C,eAAK/B,WAAL,CAAiB6B,OAAjB,CAAyBC,SAAzB,EAAoCC,QAApC,EAA8CnB,SAA9C,CACE,UAAAC,oBAAoB,EAAI;AACtB,kBAAI,CAACmB,IAAL,GAAYnB,oBAAoB,GAAC,MAAI,CAACoB,KAAtC,CADsB,CAEtB;AACD,WAJH,EAKE,UAAAhB,mBAAmB,EAAI;AACrB,kBAAI,CAACC,QAAL,GAAgBD,mBAAhB;AACD,WAPH,EAQE;AAAA,mBAAME,OAAO,CAACC,GAAR,CAAY,mCAAZ,CAAN;AAAA,WARF;AAWD;;;eACD,SAAAc,eAAe,CAACC,IAAD,EAAe;AAAA;;AAC5B,cAAIC,aAAa,GAAmB;AAClC/B,qBAAS,EAAEgC,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWC,SAAZ,CADe;AAElCT,qBAAS,EAAEK,IAAI,CAACG,KAAL,CAAWR,SAFY;AAGlCR,gBAAI,EAAEa,IAAI,CAACG,KAAL,CAAWhB,IAHiB;AAIlCkB,qBAAS,EAAEH,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWL,KAAZ,CAJe;AAKlCQ,uBAAW,EAAEJ,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWZ,MAAZ,CALa;AAMlCgB,iBAAK,EAAEL,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWK,aAAZ,CANmB;AAOlCC,oBAAQ,EAAET,IAAI,CAACG,KAAL,CAAWP;AAPa,WAApC;AAUA,eAAK/B,WAAL,CAAiB6C,iBAAjB,CAAmCT,aAAnC,EAAkDxB,SAAlD,CACE,UAAAkC,2BAA2B,EAAI;AAC7B,kBAAI,CAACC,MAAL,GAAcD,2BAAd;;AACA,gBAAI,MAAI,CAACC,MAAT,EAAiB;AACf,kBAAIC,OAAO,CAAC,+EAAD,CAAX,EAA8F;AAC5F,sBAAI,CAAC/C,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,eAFD,MAEO;AACL,sBAAI,CAACR,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,aAND,MAMO;AACL,oBAAI,CAACN,OAAL,GAAe,IAAf;AACA,oBAAI,CAAC8C,GAAL,GAAW,2CAAX;AACD;AACF,WAbH,EAcE,UAAAC,0BAA0B,EAAI;AAC5B,kBAAI,CAAChC,QAAL,GAAgBgC,0BAAhB;AACD,WAhBH,EAiBE;AAAA,mBAAM/B,OAAO,CAACC,GAAR,CAAY,iDAAZ,CAAN;AAAA,WAjBF;AAmBD;;;;;uBA7GUrB,sB,EAAsB,2J,EAAA,uH,EAAA,+H;AAAA,K;;;YAAtBA,sB;AAAsB,wC;AAAA,e;AAAA,c;AAAA,yiD;AAAA;AAAA;;;ACVlC;;AACD;;AACE;;AACE;;AAAI;;AAAa;;AAEjB;;AAA0B;AAAA;;AAAA;;AAAA,mBAAY,IAAAmC,eAAA,OAAZ;AAAsC,WAAtC;;AAExB;;AACE;;AACE;;AACE;;AAAuB;;AAAU;;AACjC;;AAAoE;AAAA;AAAA;;AAApE;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAkB;;AAAI;;AACtB;;AAAwF;AAAA;;AAAA;;AAAA,mBAAU,IAAAb,YAAA,aAAV;AAAqC,WAArC;;AACtF;;AAAmC;;AAAI;;AACvC;;AACF;;AACF;;AACA;;AAGF;;AACF;;AAGA;;AACE;;AACE;;AACE;;AAAoB;;AAAY;;AAChC;;AAA4F;AAAA;;AAAA;;AAAA;;AAAA,mBAAU,IAAAI,WAAA,0BAAV;AAAqD,WAArD;;AAC1F;;AAAmC;;AAAmB;;AACtD;;AACF;;AACF;;AACA;;AAGF;;AACA;;AACE;;AACE;;AAAoB;;AAAK;;AACzB;;AACE;;AAAmC;;AAAY;;AAC/C;;AACF;;AACF;;AACA;;AAGF;;AACF;;AAGA;;AACE;;AACE;;AACE;;AAAsB;;AAAS;;AAC/B;;AACE;;AAAmC;;AAAgB;;AACnD;;AAAuB;;AAAW;;AAClC;;AAAuB;;AAAW;;AAClC;;AAAuB;;AAAW;;AAClC;;AAAsB;;AAAK;;AAC7B;;AACF;;AACA;;AAGF;;AACA;;AACE;;AACE;;AAAmB;;AAAe;;AAClC;;AAAuG;AAAA;AAAA,aAAmB,OAAnB,EAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAU,IAAAI,OAAA,0BAAV;AAAoD,WAAvE;;AAAvG;;AACF;;AACA;;AAGF;;AACF;;AAGA;;AACE;;AACE;;AACE;;AAA2B;;AAAc;;AACzC;;AAAmG;AAAA;AAAA;;AAAnG;;AACF;;AACF;;AACF;;AAGA;;AAAyE;;AAAG;;AAC9E;;AACF;;AACF;;;;;;;;;;;;;;;;AAvFgF;;AAAA;;AAQzC;;AAAA;;AAGxB;;AAAA;;AAa0B;;AAAA;;AAG1B;;AAAA;;AASyB;;AAAA;;AAGzB;;AAAA;;AAmBA;;AAAA;;AAOoG;;AAAA;;AAEpG;;AAAA;;AAWgG;;AAAA;;AAMnE;;AAAA;;;;;;;;;sEDrF/B9B,sB,EAAsB;cALlC,uDAKkC;eALxB;AACToD,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBU;;AACE;;AACE;;AAAG;;AAAuB;;AAC5B;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAqBP;;AACE;;AACE;;AAAG;;AAAyB;;AAC9B;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAoBP;;AACE;;AACE;;AAAG;;AAAkB;;AACvB;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAiBP;;AACE;;AACE;;AAAG;;AAAkB;;AACvB;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAoBP;;AACE;;AACE;;AAAG;;AAAkB;;AACvB;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAiBP;;AACE;;AACE;;AAAG;;AAAkB;;AACvB;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAoBP;;AACE;;AACE;;AAAG;;AAAiB;;AACtB;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAQX;;AACE;;AACA;;AACF;;;;;;AADE;;AAAA;;;;QD3IKC,iB;;;AAMX,iCAAoBtD,WAApB,EAAsDC,MAAtD,EAA8EC,KAA9E,EAAqG;AAAA;;AAAjF,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAA0B;;;;eAExG,SAAAE,QAAQ;AACN,eAAKI,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;AACF;;;eACD,SAAA8C,eAAe,CAACpB,IAAD,EAAe;AAAA;;AAE5B,cAAIqB,KAAK,GAAW;AAClB1B,qBAAS,EAAEK,IAAI,CAACG,KAAL,CAAWmB,SADJ;AAElBhB,uBAAW,EAAEJ,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWoB,SAAZ,CAFH;AAGlBC,2BAAe,EAAEtB,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWsB,WAAZ,CAHP;AAIlBC,2BAAe,EAAExB,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWwB,WAAZ,CAJP;AAKlBC,4BAAgB,EAAE1B,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAW0B,WAAZ,CALR;AAMlBC,0BAAc,EAAE5B,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAW4B,UAAZ,CANN;AAOlB5C,gBAAI,EAAEa,IAAI,CAACG,KAAL,CAAWhB;AAPC,WAApB;AASAH,iBAAO,CAACC,GAAR,CAAYoC,KAAZ;AACA,eAAKxD,WAAL,CAAiBmE,QAAjB,CAA0BX,KAA1B,EAAiC5C,SAAjC,CACE,UAAAwD,mBAAmB,EAAI;AACrB,kBAAI,CAACrB,MAAL,GAAcqB,mBAAd;AACA,kBAAI,CAACjE,OAAL,GAAe,IAAf;;AACA,gBAAI,MAAI,CAAC4C,MAAT,EAAiB;AACf,oBAAI,CAACE,GAAL,GAAW,0BAAX;AACD,aAFD,MAEO;AACL,oBAAI,CAACA,GAAL,GAAW,iBAAX;AACD;AACF,WATH,EAUE,UAAAoB,kBAAkB,EAAI;AACpB,kBAAI,CAACnD,QAAL,GAAgBmD,kBAAhB;AACD,WAZH,EAaE;AAAA,mBAAMlD,OAAO,CAACC,GAAR,CAAY,uCAAZ,CAAN;AAAA,WAbF;AAgBD;;;;;uBA1CUkC,iB,EAAiB,2J,EAAA,uH,EAAA,+H;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,gkD;AAAA;AAAA;;;ACZ9B;;AACA;;AACE;;AACE;;AAAuB;;AAAS;;AAEhC;;AAA0B;AAAA;;AAAA;;AAAA,mBAAY,IAAAC,eAAA,OAAZ;AAAsC,WAAtC;;AACxB;;AACE;;AACE;;AACE;;AASF;;AACA;;AAKF;;AACA;;AACE;;AACE;;AAOE;;AAAmC;;AAAY;;AAC/C;;AAAkB;;AAAM;;AACxB;;AAAkB;;AAAM;;AACxB;;AAAkB;;AAAM;;AACxB;;AAAkB;;AAAM;;AAC1B;;AACF;;AACA;;AAKF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AASF;;AACA;;AAKF;;AACA;;AACE;;AACE;;AASF;;AACA;;AAKF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AASF;;AACA;;AAKF;;AACA;;AACE;;AACE;;AASF;;AACA;;AAKF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AASF;;AACA;;AAKF;;AACF;;AAEA;;AAAyE;;AAAG;;AAC5E;;AAIF;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;AAxIe;;AAAA;;AAsBA;;AAAA;;AAqBA;;AAAA;;AAkBA;;AAAA;;AAqBA;;AAAA;;AAkBA;;AAAA;;AAqBA;;AAAA;;AAQ6B;;AAAA;;AACjC;;AAAA;;;;;;;;;sEDzIED,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTH,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmFM;;AACE;;AACE;;AAAG;;AAAyB;;AAC9B;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAoBP;;AACE;;AACE;;AAAG;;AAAyB;;AAC9B;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAiBP;;AACE;;AACE;;AAAG;;AAAiB;;AACtB;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAiBP;;AACE;;AACE;;AAAG;;AAAiB;;AACtB;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAiBP;;AACE;;AACE;;AAAG;;AAAuB;;AAC5B;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAOP;;AACE;;AACA;;AACF;;;;;;AADE;;AAAA;;;;QD7JKiB,mB;;;AAMX,mCAAoBtE,WAApB,EAAsDC,MAAtD,EAA8EC,KAA9E,EAAqG;AAAA;;AAAjF,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAA0B;;;;eAExG,SAAAE,QAAQ;AACN,eAAKI,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;AACF;;;eACD,SAAA8D,iBAAiB,CAACpC,IAAD,EAAe;AAAA;;AAC9B,cAAIqC,OAAO,GAAa;AACtBC,uBAAW,EAAEtC,IAAI,CAACG,KAAL,CAAWmC,WADF;AAEtBC,uBAAW,EAAEvC,IAAI,CAACG,KAAL,CAAWoC,WAFF;AAGtBC,uBAAW,EAAEtC,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWsC,SAAZ,CAHC;AAItBC,qBAAS,EAAExC,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWwC,SAAZ,CAJG;AAKtBC,qBAAS,EAAE1C,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWyC,SAAZ;AALG,WAAxB;AAOA,eAAK/E,WAAL,CAAiBgF,UAAjB,CAA4BR,OAA5B,EAAqC5D,SAArC,CACE,UAAAwD,mBAAmB,EAAI;AACrB,kBAAI,CAACrB,MAAL,GAAcqB,mBAAd;AACA,kBAAI,CAACjE,OAAL,GAAe,IAAf;;AACA,gBAAI,MAAI,CAAC4C,MAAT,EAAiB;AACf,oBAAI,CAACE,GAAL,GAAW,4BAAX;AACD,aAFD,MAEO;AACL,oBAAI,CAACA,GAAL,GAAW,mBAAX;AACD;AACF,WATH,EAUE,UAAAoB,kBAAkB,EAAI;AACpB,kBAAI,CAACnD,QAAL,GAAgBmD,kBAAhB;AACD,WAZH,EAaE;AAAA,mBAAMlD,OAAO,CAACC,GAAR,CAAY,yCAAZ,CAAN;AAAA,WAbF;AAeD;;;;;uBArCUkD,mB,EAAmB,2J,EAAA,uH,EAAA,+H;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,ssC;AAAA;AAAA;;;ACsD/B;;AACD;;AACE;;AACE;;AAAuB;;AAAW;;AAElC;;AAA4B;AAAA;;AAAA;;AAAA,mBAAY,IAAAC,iBAAA,MAAZ;AAA0C,WAA1C;;AAE1B;;AACE;;AASF;;AACA;;AAOA;;AACE;;AAOE;;AAAmC;;AAAY;;AAC/C;;AAA4B;;AAAW;;AACvC;;AAA6B;;AAAY;;AACzC;;AAAyB;;AAAQ;;AACnC;;AACF;;AACA;;AAOA;;AACE;;AASF;;AACA;;AAOA;;AACE;;AASF;;AACA;;AAOA;;AACE;;AASF;;AACA;;AAOA;;AAA2E;;AAAG;;AAC9E;;AAIF;;AACF;;AACF;;;;;;;;;;;;;;;;AAzFW;;AAAA;;AAqBA;;AAAA;;AAkBA;;AAAA;;AAkBA;;AAAA;;AAkBA;;AAAA;;AAOiC;;AAAA;;AACjC;;AAAA;;;;;;;;;sED3JED,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTnB,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa4B,Y;;iBALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,eAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACDzB;;;;;;;;;sEDCaA,Y,EAAY;cALxB,uDAKwB;eALd;AACT9B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzoCO,aAAS8B,WAAT,GAAuB;AAC5B,aAAOC,YAAY,CAAC7E,OAAb,CAAqB,WAArB,CAAP,CAD4B,CACc;AAC3C;;QA+CY8E,S;;;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBALT,CAAC,oGAAD,EAAiB,0FAAjB,EAA6B,0FAA7B,EACT;AAAEC,eAAO,EAAE,uEAAX;AAA8BC,gBAAQ,EAAE,sFAAxC;AAAyDC,aAAK,EAAE;AAAhE,OADS,C;AAEV,gBAlBQ,CACP,uEADO,EACQ,sEADR,EAC0B,0DAD1B,EACuC,kEADvC,EAC2D,qDAD3D,EACmE,6FADnE,EAEP,yEAFO,EAES,yEAFT,EAGP,yDAAaC,OAAb,CAAqB;AACnBC,eAAO,EAAE,IADU;AAEnBC,qBAAa,EAAE,iBAFI;AAGnBC,yBAAiB,EAAE;AAHA,OAArB,CAHO,EAQH,8DAAUH,OAAV,CAAkB;AACpBI,cAAM,EAAE;AACNV,qBAAW,EAAEA,WADP;AAENW,4BAAkB,EAAG,CAAC,gBAAD,CAFf;AAGNC,2BAAiB,EAAE,CAAC,YAAD;AAHb;AADY,OAAlB,CARG,CAkBR;;;;0HAGUV,S,EAAS;AAAA,uBA5ClB,2DA4CkB,EA3ClB,qEA2CkB,EA1ClB,8EA0CkB,EAzClB,4FAyCkB,EAxClB,gHAwCkB,EAvClB,kEAuCkB,EAtClB,qGAsCkB,EArClB,+FAqCkB,EApClB,2GAoCkB,EAnClB,0FAmCkB,EAlClB,6FAkCkB,EAjClB,0FAiCkB,EAhClB,8FAgCkB,EA/BlB,4EA+BkB,EA9BlB,uFA8BkB,EA7BlB,iFA6BkB,EA5BlB,6FA4BkB,EA3BlB,uFA2BkB,EA1BlB,6FA0BkB,EAzBlB,kFAyBkB,EAxBlB,sGAwBkB,EAvBlB,4FAuBkB;AAvBC,kBAGnB,uEAHmB,EAGJ,sEAHI,EAGc,0DAHd,EAG2B,kEAH3B,EAG8C,6DAH9C,EAGuD,6FAHvD,EAInB,yEAJmB,EAIH,yEAJG,EAIY,wDAJZ,EAIY,6DAJZ;AAuBD,O;AAnBa,K;;;;;sEAmBtBA,S,EAAS;cA9CrB,sDA8CqB;eA9CZ;AACRW,sBAAY,EAAE,CACZ,2DADY,EAEZ,qEAFY,EAGZ,8EAHY,EAIZ,4FAJY,EAKZ,gHALY,EAMZ,kEANY,EAOZ,qGAPY,EAQZ,+FARY,EASZ,2GATY,EAUZ,0FAVY,EAWZ,6FAXY,EAYZ,0FAZY,EAaZ,8FAbY,EAcZ,4EAdY,EAeZ,uFAfY,EAgBZ,iFAhBY,EAiBZ,6FAjBY,EAkBZ,uFAlBY,EAmBZ,6FAnBY,EAoBZ,kFApBY,EAqBZ,sGArBY,EAsBZ,4FAtBY,CADN;AAyBRC,iBAAO,EAAE,CACP,uEADO,EACQ,sEADR,EAC0B,0DAD1B,EACuC,kEADvC,EAC2D,qDAD3D,EACmE,6FADnE,EAEP,yEAFO,EAES,yEAFT,EAGP,yDAAaR,OAAb,CAAqB;AACnBC,mBAAO,EAAE,IADU;AAEnBC,yBAAa,EAAE,iBAFI;AAGnBC,6BAAiB,EAAE;AAHA,WAArB,CAHO,EAQH,8DAAUH,OAAV,CAAkB;AACpBI,kBAAM,EAAE;AACNV,yBAAW,EAAEA,WADP;AAENW,gCAAkB,EAAG,CAAC,gBAAD,CAFf;AAGNC,+BAAiB,EAAE,CAAC,YAAD;AAHb;AADY,WAAlB,CARG,CAzBD;AAyCRG,mBAAS,EAAE,CAAC,oGAAD,EAAiB,0FAAjB,EAA6B,0FAA7B,EACT;AAAEZ,mBAAO,EAAE,uEAAX;AAA8BC,oBAAQ,EAAE,sFAAxC;AAAyDC,iBAAK,EAAE;AAAhE,WADS,CAzCH;AA4CRW,mBAAS,EAAE,CAAC,2DAAD;AA5CH,S;AA8CY,Q;;;;;;;;;;;;;;;;;;ACrFtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE,kEAA3B;AAA0CC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAAhD,KAFqB,EAGrB;AAAEH,UAAI,EAAE,cAAR;AAAwBC,eAAS,EAAE,4FAAnC;AAA0DC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAAhE,KAHqB,EAIrB;AAAEH,UAAI,EAAE,kBAAR;AAA4BC,eAAS,EAAE,qEAAvC;AAAuDC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAA7D,KAJqB,EAKrB;AAAEH,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE,8EAA/B;AAAkDC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAAxD,KALqB,EAMrB;AAAEH,UAAI,EAAE,4CAAR;AAAsDC,eAAS,EAAE;AAAjE,KANqB,EAOrB;AAAED,UAAI,EAAE,4CAAR;AAAsDC,eAAS,EAAE;AAAjE,KAPqB,EAQrB;AAAED,UAAI,EAAE,aAAR;AAAuBC,eAAS,EAAE,yFAAlC;AAAwDC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAA9D,KARqB,EASrB;AAAEH,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE,4FAA/B;AAAsDC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAA5D,KATqB,EAUrB;AAAEH,UAAI,EAAE,oBAAR;AAA8BC,eAAS,EAAE;AAAzC,KAVqB,EAWrB;AAAED,UAAI,EAAE,SAAR;AAAmBC,eAAS,EAAE,2EAA9B;AAAgDC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAAtD,KAXqB,EAYrB;AAAEH,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE,uFAAjC;AAAsDC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAA5D,KAZqB,EAarB;AAAEH,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE,iFAA/B;AAAkDC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAAxD,KAbqB,EAcrB;AAAEH,UAAI,EAAE,eAAR;AAAyBC,eAAS,EAAE,8FAApC;AAA4DC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAAlE,KAdqB,EAerB;AAAEH,UAAI,EAAE,cAAR;AAAwBC,eAAS,EAAE,6FAAnC;AAA0DC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAAhE,KAfqB,EAgBrB;AAAEH,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE,uFAAjC;AAAsDC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAA5D,KAhBqB,EAiBrB;AAAEH,UAAI,EAAE,cAAR;AAAwBC,eAAS,EAAE,6FAAnC;AAA0DC,UAAI,EAAE;AAAEC,kBAAU,EAAE;AAAd;AAAhE,KAjBqB,EAkBrB;AAAEH,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KAlBqB,CAAvB;;AAoBO,QAAMG,OAAO,GAAwB,6DAAahB,OAAb,CAAqBW,MAArB,CAArC;;;;;;;;;;;;;;;;;ACrCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACkBM;;AACE;;AACE;;AAAG;;AAA0B;;AAC/B;;AACA;;AACE;;AAAG;;AAAkE;;AACvE;;AACF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAcP;;AACE;;AACE;;AAAG;;AAA0B;;AAC/B;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAgBP;;AACE;;AACE;;AAAG;;AAAiC;;AACtC;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAeP;;AACE;;AACE;;AAAG;;AAAgC;;AACrC;;AACF;;;;;;;;AAHO;;AAAA;;;;;;AAeP;;AACE;;AACE;;AAAG;;AAAkC;;AACvC;;AACF;;;;;;;;AAHO;;AAAA;;;;;;;;AAST;;AAAqB;;AAAiB;;AACpC;;AACE;;AAAG;;AAAmB;;AACxB;;AACJ;;AACE;;AAAmB;AAAA;;AAAA;;AAAA,qCAAqB,KAArB;AAA0B,SAA1B;;AAA6B;;AAAE;;AAClD;;AAAmB;AAAA;;AAAA;;AAAA,qCAAqB,IAArB;AAAyB,SAAzB;;AAA4B;;AAAG;;AACpD;;;;;;AAPuB;;AAAA;;AAEd;;AAAA;;;;QDrFEM,oB;;;AAUX,oCAAoBC,cAApB,EAA4D1G,MAA5D,EAAmFC,KAAnF,EAAiH0G,KAAjH,EAA8IC,MAA9I,EAAiK;AAAA;;AAA7I,aAAAF,cAAA,GAAAA,cAAA;AAAwC,aAAA1G,MAAA,GAAAA,MAAA;AAAuB,aAAAC,KAAA,GAAAA,KAAA;AAA8B,aAAA0G,KAAA,GAAAA,KAAA;AAA6B,aAAAC,MAAA,GAAAA,MAAA;AAH9I,aAAAC,WAAA,GAAsB,EAAtB;AACA,aAAAC,aAAA,GAAwB,EAAxB;AAEoK;;;;eAEpK,SAAA3G,QAAQ;AACN,eAAK4G,SAAL,GAAiB3E,QAAQ,CAAC,KAAKnC,KAAL,CAAW+G,QAAX,CAAoBC,MAApB,CAA2B,WAA3B,CAAD,CAAzB;AACA,eAAKC,WAAL,GAAmB,KAAKjH,KAAL,CAAW+G,QAAX,CAAoBG,WAApB,CAAgC,MAAhC,CAAnB;AACAjG,iBAAO,CAACC,GAAR,CAAY,KAAK+F,WAAjB;AACA,eAAK3G,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;AACF;;;eACD,SAAA4G,eAAe,GAAG,CAEjB;;;eACD,SAAAC,cAAc,CAACnF,IAAD,EAAe;AAAA;;AAC3B,cAAIoF,KAAK,GAAGjH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAZ;AAEA,cAAIiH,OAAO,GAAiB;AAC1BC,yBAAa,EAAEpF,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWmF,aAAZ,CADG;AACyBC,mBAAO,EAAEH,KADlC;AACyCI,mBAAO,EAAExF,IAAI,CAACG,KAAL,CAAWqF,OAD7D;AACsEC,wBAAY,EAAE,IAAIC,IAAJ,CAAS1F,IAAI,CAACG,KAAL,CAAWsF,YAApB,CADpF;AACuHE,0BAAc,EAAEzF,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWyF,MAAZ,CAD/I;AAE1BC,4BAAgB,EAAE3F,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAW2F,QAAZ,CAFA;AAEuBlF,kBAAM,EAAE,QAF/B;AAEyCiE,qBAAS,EAAE,KAAKA;AAFzD,WAA5B;AAIA7F,iBAAO,CAACC,GAAR,CAAYoG,OAAZ;AACA,eAAKb,cAAL,CAAoBuB,WAApB,CAAgCV,OAAhC,EAAyC5G,SAAzC,CACI,UAAAuH,sBAAsB,EAAI;AAC1B,kBAAI,CAAC9H,SAAL,GAAiB8H,sBAAjB;;AACA,gBAAI,MAAI,CAAC9H,SAAL,GAAiB,CAArB,EAAwB;AACtBC,4BAAc,CAAC8H,OAAf,CAAuB,WAAvB,EAAoC,MAAI,CAAC/H,SAAL,CAAegI,QAAf,EAApC;;AACA,oBAAI,CAACzB,KAAL,CAAW0B,OAAX,CAAmB,2BAAnB,EAAgD,SAAhD,EAFsB,CAGtB;AACA;AACA;AACA;AACA;AACA;AACN;;;AAEM,kBAAItF,OAAO,CAAC,0EAAD,CAAX,EAAyF;AACvF,sBAAI,CAAC/C,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD,eAFD,MAEO;AACL,sBAAI,CAACR,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,aAhBD,MAkBA;AAAE,oBAAI,CAACmG,KAAL,CAAW2B,KAAX,CAAiB,gBAAjB,EAAmC,OAAnC;AAA6C;AAC9C,WAtBL,EAuBI,UAAAC,qBAAqB,EAAI;AACvB,kBAAI,CAACtH,QAAL,GAAgBsH,qBAAhB;AACD,WAzBL,EA0BI;AAAA,mBAAMrH,OAAO,CAACC,GAAR,CAAY,6CAAZ,CAAN;AAAA,WA1BJ;AA6BD;;;eACD,SAAAqH,WAAW,CAACC,MAAD,EAAkB;AAC3B,eAAKC,SAAL,CAAeC,KAAf,CAAqBF,MAArB;AACD;;;;;uBAhEUhC,oB,EAAoB,oK,EAAA,uH,EAAA,+H,EAAA,yH,EAAA,mI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;;;;;;;;;;;;;;;;;ACZjC;;AACA;;AACE;;AAAI;;AAAe;;AACnB;;AACE;;AAAI;;AAAY;;AAChB;;AAAyB;AAAA;;AAAA;;AAAA,mBAAY,IAAAY,cAAA,MAAZ;AAAoC,WAApC;;AACvB;;AACE;;AAUF;;AACA;;AAQA;;AACE;;AAQF;;AACA;;AAKA;;AACE;;AAUF;;AACA;;AAKA;;AACE;;AASF;;AACA;;AAKA;;AACE;;AASF;;AACA;;AAKA;;AAAwE;;AAAQ;;AAClF;;AACF;;AACF;;AACE;;;;;;;;;;;;;;;;AA5FI;;AAAA;;AAgBK;;AAAA;;AAkBA;;AAAA;;AAiBA;;AAAA;;AAgBA;;AAAA;;AAgBA;;AAAA;;AAKiC;;AAAA;;;;;;;;;sED9E/BZ,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTvD,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;gBAC9B,uD;iBAAU,4B;;;;;;;;;;;;;;;;;;;;AEbb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBM;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QDTKwF,qB;;;AAQX,qCAAoB7I,WAApB,EAAsDC,MAAtD,EAA8EC,KAA9E,EAAqG;AAAA;;AAAjF,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAN9E,aAAAC,OAAA,GAAmB,KAAnB;AAMwG;;;;eAExG,SAAAC,QAAQ;AACN,eAAKI,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;AACD,eAAKJ,SAAL,GAAiBgC,QAAQ,CAAC/B,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAD,CAAzB;AACA,eAAKuI,WAAL;AACD;;;eACD,SAAAC,cAAc,CAAC5G,IAAD,EAAe;AAAA;;AAE3B,cAAI6G,KAAK,GAAc;AACrB3I,qBAAS,EAAE,KAAKA,SADK;AAErB2I,iBAAK,EAAE7G,IAAI,CAACG,KAAL,CAAW0G,KAFG;AAGrBC,uBAAW,EAAE,UAHQ;AAIrBC,oBAAQ,EAAE,KAAKA;AAJM,WAAvB;AAMA/H,iBAAO,CAACC,GAAR,CAAY4H,KAAZ;AACA,eAAKhJ,WAAL,CAAiBmJ,QAAjB,CAA0BH,KAA1B,EAAiCpI,SAAjC,CACE,UAAAwI,sBAAsB,EAAI;AACxB,kBAAI,CAACrG,MAAL,GAAcqG,sBAAd;;AACA,gBAAI,MAAI,CAACrG,MAAT,EAAiB;AACf,oBAAI,CAAC5C,OAAL,GAAe,IAAf;AACA,oBAAI,CAAC8C,GAAL,GAAW,yBAAX;AACD,aAHD,MAGO;AACL,oBAAI,CAACA,GAAL,GAAW,oCAAX;AACD;AACF,WATH,EAUE,UAAAoB,kBAAkB,EAAI;AACpB,kBAAI,CAACnD,QAAL,GAAgBmD,kBAAhB;AACD,WAZH,EAaE;AAAA,mBAAMlD,OAAO,CAACC,GAAR,CAAY,2CAAZ,CAAN;AAAA,WAbF;AAeD;;;eAED,SAAA0H,WAAW,GAAG;AAAA;;AACZ,eAAK9I,WAAL,CAAiBqJ,WAAjB,GAA+BzI,SAA/B,CACE,UAAA0I,gBAAgB,EAAI;AAClB,kBAAI,CAACJ,QAAL,GAAgBI,gBAAhB,CADkB,CAEnB;AACA,WAJH,EAKE,UAAAC,qBAAqB,EAAI;AACvB,kBAAI,CAACL,QAAL,GAAgB,IAAhB;AACD,WAPH,EAQE;AAAA,mBAAM/H,OAAO,CAACC,GAAR,CAAY,0CAAZ,CAAN;AAAA,WARF;AAUD;;;;;uBAvDUyH,qB,EAAqB,2J,EAAA,uH,EAAA,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,0b;AAAA;AAAA;;;ACVlC;;AACA;;AACE;;AACE;;AACA;;AAAI;;AAAa;;AACjB;;AAAG;;AAAwB;;AAC3B;;AAAyB;AAAA;;AAAA;;AAAA,mBAAY,IAAAE,cAAA,MAAZ;AAAoC,WAApC;;AACvB;;AACE;;AAQF;;AACA;;AAAwE;;AAAM;;AAC9E;;AAGF;;AACF;;AACF;;;;;;AAN4C;;AAAA;;AACjC;;AAAA;;;;;;;;;sEDREF,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT1F,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAQM;;AACE;;AACE;;AAAG;;AAA6B;;AAClC;;AACA;;AACE;;AAAG;;AAAgD;;AACrD;;AACF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAOP;;AACE;;AACE;;AAAG;;AAA4B;;AACjC;;AACA;;AACE;;AAAG;;AAA+C;;AACpD;;AACF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAcP;;AACE;;AACE;;AAAG;;AAA0B;;AAC/B;;AACA;;AACE;;AAAG;;AAAkE;;AACvE;;AACF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAOP;;AACE;;AACE;;AAAG;;AAAgC;;AAQrC;;AACF;;;;;;;;AAVO;;AAAA;;;;;;AAeP;;AACE;;AACE;;AAAG;;AAA0B;;AAC/B;;AAEF;;;;;;;;AAJO;;AAAA;;;;;;AAMP;;AACE;;AACA;;AACF;;;;;;AADE;;AAAA;;;;QDpEKmG,oB;;;AAgBX,oCAAoBvJ,MAApB,EAA4CD,WAA5C,EAA8EyJ,EAA9E,EAAkG;AAAA;;AAA9E,aAAAxJ,MAAA,GAAAA,MAAA;AAAwB,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAyJ,EAAA,GAAAA,EAAA;AAH9E,aAAAtJ,OAAA,GAAmB,IAAnB;AACA,aAAAuJ,cAAA,GAA0B,KAA1B;AACA,aAAAC,YAAA,GAAwB,KAAxB;AAEE,aAAKjC,OAAL,GAAepH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAf;AACA,aAAKC,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,YAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,eAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,SAFD,MAEO,IAAI,KAAKD,QAAL,IAAiB,UAArB,EAAiC;AACtC,eAAKkJ,cAAL,GAAsB,IAAtB;AACD;AACF;;;;eAED,SAAAtJ,QAAQ;AAEN,eAAKwJ,kBAAL,CAAwB,KAAKlC,OAA7B;AAED;;;eAED,SAAAkC,kBAAkB,CAAClC,OAAD,EAAkB;AAAA;;AAClC,eAAK1H,WAAL,CAAiB6J,eAAjB,CAAiCnC,OAAjC,EAA0C9G,SAA1C,CACI,UAAAuH,sBAAsB,EAAI;AAC1B,kBAAI,CAAC2B,QAAL,GAAgB3B,sBAAhB;AACA,kBAAI,CAAC4B,SAAL,GAAiB,MAAI,CAACD,QAAL,CAAc,WAAd,CAAjB;AACA,kBAAI,CAACE,QAAL,GAAgB,MAAI,CAACF,QAAL,CAAc,UAAd,CAAhB;AACA,kBAAI,CAACG,MAAL,GAAc,MAAI,CAACH,QAAL,CAAc,QAAd,CAAd;AACA,kBAAI,CAACI,OAAL,GAAe,MAAI,CAACJ,QAAL,CAAc,SAAd,CAAf;AACA,kBAAI,CAACK,OAAL,GAAe,MAAI,CAACL,QAAL,CAAc,eAAd,CAAf;AACA,kBAAI,CAACM,GAAL,GAAW,MAAI,CAACN,QAAL,CAAc,aAAd,EAA6BO,SAA7B,CAAuC,CAAvC,EAAyC,EAAzC,CAAX;AACAlJ,mBAAO,CAACC,GAAR,CAAY,MAAI,CAAC2I,SAAjB,EAA2B,MAAI,CAACC,QAAhC;AACC,WAVL,EAWI,UAAAxB,qBAAqB,EAAI;AACvB,kBAAI,CAACtH,QAAL,GAAgBsH,qBAAhB;AACD,WAbL,EAcI;AAAA,mBAAMrH,OAAO,CAACC,GAAR,CAAY,8CAAZ,CAAN;AAAA,WAdJ;AAgBD;;;eAED,SAAAkJ,UAAU,CAACnI,IAAD,EAAe;AAAA;;AACvB,eAAKnC,WAAL,CAAiBuK,iBAAjB,CAAmCpI,IAAI,CAACG,KAAL,CAAWyH,SAA9C,EAAyD5H,IAAI,CAACG,KAAL,CAAW0H,QAApE,EAA8E,KAAKtC,OAAnF,EACE,IADF,EACQrF,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWmF,aAAZ,CADhB,EAC4CtF,IAAI,CAACG,KAAL,CAAWqF,OADvD,EACgExF,IAAI,CAACG,KAAL,CAAW2H,MAD3E,EACmF,IAAIpC,IAAJ,CAAS1F,IAAI,CAACG,KAAL,CAAWkI,WAApB,CADnF,EACqH,CADrH,EACwH5J,SADxH,CAEI,UAAA6J,oBAAoB,EAAI;AACtB,mBAAI,CAAC1H,MAAL,GAAc0H,oBAAd;AACA,mBAAI,CAACtK,OAAL,GAAe,IAAf;;AACA,gBAAI,OAAI,CAAC4C,MAAL,IAAe,IAAnB,EAAyB;AACvB,qBAAI,CAACE,GAAL,GAAW,uBAAX;AAGD,aAJD,MAIO;AACL,qBAAI,CAACA,GAAL,GAAW,oBAAX;AACD;AACF,WAZL,EAaI,UAAAyH,mBAAmB,EAAI;AACrB,mBAAI,CAACxJ,QAAL,GAAgBwJ,mBAAhB;AACD,WAfL,EAgBI;AAAA,mBAAMvJ,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAAN;AAAA,WAhBJ;AAkBD;;;;;uBAtEUoI,oB,EAAoB,uH,EAAA,2J,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,c;AAAA,gnD;AAAA;AAAA;;;ACVjC;;AAGA;;AAGA;;AACE;;AACE;;AAA4B;;AAAY;;AACxC;;AAA2B;AAAA;;AAAA;;AAAA,mBAAY,IAAAc,UAAA,MAAZ;AAAkC,WAAlC;;AACzB;;AACE;;AACF;;AACA;;AAQA;;AACE;;AACF;;AACA;;AAQA;;AACE;;AACE;;AAAmC;;AAAM;;AACzC;;AAAkB;;AAAI;;AACtB;;AAAkB;;AAAM;;AAC1B;;AACF;;AACA;;AACE;;AACF;;AACA;;AAQA;;AACE;;AACF;;AACA;;AAaA;;AACE;;AACF;;AACA;;AAMA;;AAAsC;;AAAM;;AAC5C;;AAIF;;AACF;;AACF;;;;;;;;;;;;;;AAlFK;;AAGA;;AAAA;;AAQgE;;AAAA;;AAE1D;;AAAA;;AASyD;;AAAA;;AAEzD;;AAAA;;AAS8D;;AAAA;;AAOI;;AAAA;;AAElE;;AAAA;;AAS+D;;AAAA;;AAE/D;;AAAA;;AAc4E;;AAAA;;AAE5E;;AAAA;;AAOA;;AAAA;;;;;;;;;sEDlEEd,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTrG,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AACA;;AACF;;;;;;AACA;;AACE;;AACA;;AACF;;;;;;AACA;;AACE;;AACA;;AACF;;;;;;AAOI;;AAA0E;;AAAa;;;;;;AACvF;;AAAwD;;AAAS;;;;QDZxDsH,a;;;AAKX,+BAAc;AAAA;;AAHd,aAAAjB,cAAA,GAA0B,KAA1B;AACA,aAAAC,YAAA,GAAwB,KAAxB;AACA,aAAAiB,cAAA,GAA0B,KAA1B;AAEE,aAAKpK,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,YAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,eAAKkJ,cAAL,GAAsB,IAAtB;AACD,SAFD,MAGK,IAAI,KAAKlJ,QAAL,IAAiB,UAArB,EAAiC;AACpC,eAAKoK,cAAL,GAAsB,IAAtB;AACD,SAFI,MAGA;AACH,eAAKjB,YAAL,GAAoB,IAApB;AACD;AACF;;;;eAED,SAAAvJ,QAAQ,IACP;;;;;uBAnBUuK,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,mT;AAAA;AAAA;ACP1B;;AAIA;;AAIA;;AAIA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAAU;;AACd;;AACA;;AACF;;AACA;;AACE;;AAAI;;AAAoC;;AACxC;;AACE;;AAAqC;;AAAQ;;AAC7C;;AAAqC;;AAAQ;;AAC7C;;AAAqC;;AAAQ;;AAC/C;;AACF;;AACF;;;;AA7BK;;AAIA;;AAAA;;AAIA;;AAAA;;AAUkC;;AAAA;;AACJ;;AAAA;;;;;;;;;sEDZtBA,a,EAAa;cALzB,uDAKyB;eALf;AACTxH,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;QASawH,qB;;;AAGX,qCAAoB3K,KAApB,EAA2C;AAAA;;AAAvB,aAAAA,KAAA,GAAAA,KAAA;AAFpB,aAAA4K,QAAA,GAA2B,EAA3B,CAE2C,CAFX;AAEa;;;;eAE7C,SAAA1K,QAAQ;AAAA;;AACN;AACA,eAAKF,KAAL,CAAW6K,QAAX,CAAoBnK,SAApB,CAA8B,UAAAsG,MAAM,EAAI;AACtC,mBAAI,CAAC4D,QAAL,GAAiB5D,MAAM,CAAC8D,GAAP,CAAW,WAAX,KAAyC,EAA1D;;AACA,mBAAI,CAACC,UAAL,GAFsC,CAGtC;;AACD,WAJD;AAKD;;;eAED,SAAAA,UAAU;AACR;AACA,cAAI,KAAKH,QAAL,KAAkB,GAAtB,EAA2B;AACzB;AACA3J,mBAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,WAHD,MAGO,IAAI,KAAK0J,QAAL,KAAkB,GAAtB,EAA2B;AAChC;AACA3J,mBAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,WAHM,MAGA;AACL;AACAD,mBAAO,CAAC+J,IAAR,CAAa,oBAAb;AACD;AACF;;;;;uBA1BUL,qB,EAAqB,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,siC;AAAA;AAAA;ACTlC;;AACE;;AACE;;AAAuC;;AAAgE;;AAAU;;AACjH;;AASE;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAyG;;AAAI;;AAC/G;;AACA;;AACE;;AAAyE;;AAAQ;;AACnF;;AAGA;;AACE;;AAQE;;AACF;;AACA;;AACE;;AAAI;;AAAsD;;AAAc;;AAAI;;AAC5E;;AAAI;;AAAsD;;AAAc;;AAAI;;AAC9E;;AACF;;AAEA;;AACE;;AAAqE;;AAAM;;AAC7E;;AACF;;AACF;;AACF;;AACF;;;;AA9BuE;;AAAA;;AAmB9B;;AAAA;;AACA;;AAAA;;;;;;;;;sED7B5BA,qB,EAAqB;cANjC,uDAMiC;eANvB;AACT1H,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAMuB,Q;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAOa8H,uB;;;AAEX,uCAAoBlL,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAkB,aAAKO,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;AAAoD;;;;eAE1F,SAAAH,QAAQ,IACP;;;eACD,SAAAgL,MAAM,GAAG;AACP9K,wBAAc,CAAC+K,UAAf,CAA0B,UAA1B;AACA/K,wBAAc,CAAC+K,UAAf,CAA0B,UAA1B;AACA,eAAKpL,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;;;;uBAVU0K,uB,EAAuB,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,a;AAAA,+hC;AAAA;AAAA;ACPpC;;AACE;;AAAuC;;AAAgE;;AAAU;;AACjH;;AASE;;AACF;;AACA;;AACE;;AACE;;AAME;;AACF;;AACA;;AAA8E;;AAAQ;;AACtF;;AAAgF;;AAAU;;AAC1F;;AAAgF;;AAAU;;AAC1F;;AAAkF;;AAAY;;AAC9F;;AAAsC;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAM;;AACjE;;AACF;;AACF;;;;AAXQ;;AAAA;;;;;;;;;sEDZKD,uB,EAAuB;cALnC,uDAKmC;eALzB;AACThI,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;AEPpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAOaiI,mB;;;AAEX,mCAAoBrL,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAkB,aAAKO,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;AAAqD;;;;eAE3F,SAAAH,QAAQ,IACP;;;eACD,SAAAgL,MAAM,GAAG;AACP9K,wBAAc,CAAC+K,UAAf,CAA0B,UAA1B;AACA/K,wBAAc,CAAC+K,UAAf,CAA0B,UAA1B;AACA,eAAKpL,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;;;;uBAVU6K,mB,EAAmB,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,48B;AAAA;AAAA;ACNhC;;AACE;;AAAuC;;AAAgE;;AAAU;;AACjH;;AASE;;AACF;;AACA;;AACE;;AACE;;AAAkH;;AAAI;;AACtH;;AAAkF;;AAAY;;AAC9F;;AAAiF;;AAAW;;AAC5F;;AAAkF;;AAAa;;AAC/F;;AAAsC;AAAA,mBAAS,IAAAF,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAM;;AACjE;;AACF;;AACF;;;;AAP4E;;AAAA;;;;;;;;;sEDT/DE,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTnI,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQQ;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AASP;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAiBT;;AACE;;AACA;;AACF;;;;;;AADE;;AAAA;;;;QDhCKkI,c;;;AASX,8BACUvL,WADV,EAEUC,MAFV,EAGUC,KAHV,EAIUsL,MAJV,EAKUC,WALV,EAKkC;AAAA;;AAJxB,aAAAzL,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAsL,MAAA,GAAAA,MAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AAVV,aAAAtL,OAAA,GAAmB,KAAnB;AAYC;;;;eAED,SAAAC,QAAQ;AAAA;;AACJ,eAAKsL,iBAAL,GAAyB,KAAKxL,KAAL,CAAW6K,QAAX,CAAoBnK,SAApB,CAA8B,UAACsG,MAAD,EAAsB;AAC3E,gBAAMyE,IAAI,GAAGzE,MAAM,CAAC8D,GAAP,CAAW,WAAX,CAAb;;AACA,gBAAIW,IAAI,KAAK,GAAb,EAAkB;AAChB,qBAAI,CAACC,SAAL,GAAiB,CAAjB;AACA,qBAAI,CAACC,QAAL,GAAgB,UAAhB;AACD,aAHD,MAGO,IAAIF,IAAI,KAAK,GAAb,EAAkB;AACvB,qBAAI,CAACC,SAAL,GAAiB,CAAjB;AACA,qBAAI,CAACC,QAAL,GAAgB,UAAhB;AACD,aAHM,MAGA;AACL,qBAAI,CAACD,SAAL,GAAiB,CAAjB;AACA,qBAAI,CAACC,QAAL,GAAgB,EAAhB;AACD;;AACD1K,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,OAAI,CAACwK,SAAxC,EAAmD,WAAnD,EAAgE,OAAI,CAACC,QAArE,EAZ2E,CAa3E;AACD,WAdwB,CAAzB;AAeH;;;eACD,SAAAC,eAAe,CAAC3J,IAAD,EAAe;AAAA;;AAC5BhB,iBAAO,CAACC,GAAR,CAAYe,IAAI,CAACG,KAAL,CAAWiF,KAAvB,EAA8BpF,IAAI,CAACG,KAAL,CAAWyJ,QAAzC;AAEE,eAAKN,WAAL,CAAiBO,KAAjB,CAAuB7J,IAAI,CAACG,KAAL,CAAWiF,KAAlC,EAAyCpF,IAAI,CAACG,KAAL,CAAWyJ,QAApD,EAA6D,KAAKH,SAAlE,EAA6EhL,SAA7E,CAAuF;AACvFqL,gBAAI,EAAE,SAANA,IAAM,CAACC,QAAD,EAAc;AAClB,qBAAI,CAAC/L,OAAL,GAAe,IAAf;;AACE,qBAAI,CAACqL,MAAL,CAAYlD,OAAZ,CAAoB,kBAApB;;AACA,qBAAI,CAACrF,GAAL,GAAW,kBAAX;;AACA,kBAAM0I,IAAI,GAAG,OAAI,CAACF,WAAL,CAAiBU,OAAjB,EAAb,CAJgB,CAKhB;;;AACA,kBAAGR,IAAI,IAAI,UAAX,EACA;AACArL,8BAAc,CAAC8H,OAAf,CAAuB,UAAvB,EAAmCjG,IAAI,CAACG,KAAL,CAAWiF,KAA9C;AACAjH,8BAAc,CAAC8H,OAAf,CAAuB,UAAvB,EAAmC,UAAnC;AACC,eAJD,MAKK,IAAGuD,IAAI,IAAI,UAAX,EACL;AACErL,8BAAc,CAAC8H,OAAf,CAAuB,UAAvB,EAAmCjG,IAAI,CAACG,KAAL,CAAWiF,KAA9C;AACAjH,8BAAc,CAAC8H,OAAf,CAAuB,UAAvB,EAAmC,UAAnC;AACD;;AACD,qBAAI,CAACnI,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACAU,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC8K,QAAhC;AACH,aAnBsF;AAoBvF3D,iBAAK,EAAE,SAAPA,KAAO,CAACA,MAAD,EAAW;AAChBpH,qBAAO,CAACoH,KAAR,CAAc,cAAd,EAA8BA,MAA9B;AACA,qBAAI,CAACrH,QAAL,GAAe,+BAAf;AACD;AAvBsF,WAAvF,EAH0B,CA8B5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AACD;;;;;uBA7FUqK,c,EAAc,2J,EAAA,uH,EAAA,+H,EAAA,yH,EAAA,6J;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,miC;AAAA;AAAA;;;ACZ3B;;AACA;;AACE;;AACE;;AAAI;;AAAa;;AAA+B;;AAAK;;AAAO;;AAC5D;;AAA0B;AAAA;;AAAA;;AAAA,mBAAY,IAAAO,eAAA,KAAZ;AAAsC,WAAtC;;AACxB;;AACE;;AAAmB;;AAAa;;AAChC;;AACA;;AAQF;;AAEA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AACA;;AAQF;;AAEA;;AACE;;AACA;;AAAiD;;AAAW;;AAC9D;;AAEA;;AAAyE;;AAAO;;AAEhF;;AACE;;AAAiC;;AAAqB;;AACxD;;AAEA;;AAKA;;AACJ;;AACF;;;;;;;;;;AA9CQ;;AAAA;;AAKK;;AAAA;;AAaA;;AAAA;;AAe+B;;AAAA;;AAMjC;;AAAA;;;;;;;;;sED9BEP,c,EAAc;cAL1B,uDAK0B;eALhB;AACTpI,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeM;;AACE;;AACA;;AACF;;;;;;AADE;;AAAA;;;;QDNK+I,gB;;;AASX,gCAAoBpM,WAApB,EAAqDC,MAArD,EAA6EC,KAA7E,EAAoG;AAAA;;AAAhF,aAAAF,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAC5E;;;;eAED,SAAAE,QAAQ;AACN,eAAKC,SAAL,GAAiBC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAjB;AACA,eAAKC,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;AACD,eAAK4L,QAAL,CAAc,KAAKhM,SAAnB;AACD,S,CAED;AACA;AACA;AACA;;;;eAEA,SAAAgM,QAAQ,CAAC9J,SAAD,EAAmB;AAAA;;AACzB,eAAKvC,WAAL,CAAiBqM,QAAjB,CAA0B9J,SAA1B,EAAqC3B,SAArC,CACE,UAAA0L,mBAAmB,EAAI;AACrB,mBAAI,CAACC,KAAL,GAAaD,mBAAb;AAED,WAJH,EAKE,UAAAE,kBAAkB,EAAI;AACpB,mBAAI,CAACtL,QAAL,GAAgBsL,kBAAhB;AACD,WAPH,EAQE;AAAA,mBAAMrL,OAAO,CAACC,GAAR,CAAY,uCAAZ,CAAN;AAAA,WARF;AAUD;;;eACD,SAAAqL,aAAa,CAACtK,IAAD,EAAe;AAAA;;AAE1B,cAAIuK,GAAG,GAAa;AAClBrM,qBAAS,EAAEgC,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWqK,MAAZ,CADD;AAElBC,yBAAa,EAAE,WAFG;AAGlBC,uBAAW,EAAExK,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWwK,MAAZ;AAHH,WAApB;AAMA,eAAK9M,WAAL,CAAiB+M,WAAjB,CAA6BL,GAA7B,EAAkC9L,SAAlC,CACE,UAAAwD,mBAAmB,EAAI;AACrB,mBAAI,CAACrB,MAAL,GAAcqB,mBAAd;AACA,mBAAI,CAACjE,OAAL,GAAe,IAAf;;AACA,gBAAI,OAAI,CAAC4C,MAAT,EAAiB;AACfiK,mBAAK,CAAC,2BAAD,CAAL;AACA1M,4BAAc,CAAC+K,UAAf,CAA0B,WAA1B;;AACA,qBAAI,CAACpL,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,aAJD,MAIO;AACL,qBAAI,CAACwC,GAAL,GAAW,4BAAX;AACD;AACF,WAXH,EAYE,UAAAoB,kBAAkB,EAAI;AACpB,mBAAI,CAACnD,QAAL,GAAgBmD,kBAAhB;AACD,WAdH,EAeE;AAAA,mBAAMlD,OAAO,CAACC,GAAR,CAAY,yCAAZ,CAAN;AAAA,WAfF;AAmBD;;;;;uBAjEUgL,gB,EAAgB,2J,EAAA,uH,EAAA,+H;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,q1B;AAAA;AAAA;;;ACX7B;;AACA;;AACE;;AACE;;AAAqD;;AAAe;;AACpE;;AAAG;;AAAuC;;AAC1C;;AAAwB;AAAA;;AAAA;;AAAA,mBAAY,IAAAK,aAAA,MAAZ;AAAkC,WAAlC;;AACtB;;AAAuF;;AAAU;;AACjG;;AACE;;AAA8F;AAAA;AAAA;;AAA9F;;AACF;;AACA;;AAAuF;;AAAY;;AACnG;;AACE;;AAA+G;AAAA;AAAA;;AAA/G;;AACF;;AACA;;AAAuE;;AAAG;;AAC1E;;AAIF;;AACF;;AACF;;;;;;AAbsG;;AAAA;;AAI7D;;AAAA;;AAA8E;;AAE3E;;AAAA;;AACjC;;AAAA;;;;;;;;;sEDJEL,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTjJ,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AACE;;AACA;;AAAY;;AAAuB;;AAGrC;;;;;;AAJO;;AAAA;;AAA4B;;AACrB;;AAAA;;;;QDMH4J,wB;;;AAMX,wCAAoBtG,cAApB,EAAkD;AAAA;;AAA9B,aAAAA,cAAA,GAAAA,cAAA;AALpB,aAAAuG,eAAA,GAAoC,EAApC;AAIA,aAAAC,WAAA,GAAgC,EAAhC;AACwD;;;;eAExD,SAAA/M,QAAQ;AACN,eAAKgN,mBAAL;;AACA,cAAI,KAAKF,eAAL,IAAwB,IAA5B,EAAkC;AAChC,iBAAKG,OAAL,GAAe,IAAf;AACD;;AACD,eAAKC,SAAL,GAAiB,aAAjB;AACD;;;eACC,SAAAF,mBAAmB,GAAG;AAAA;;AACtB,eAAKzG,cAAL,CAAoB4G,WAApB,GAAkC3M,SAAlC,CACE,UAAA4M,WAAW,EAAI;AACb,mBAAI,CAACH,OAAL,GAAe,KAAf;AACA,mBAAI,CAACH,eAAL,GAAuBM,WAAvB;AACA,mBAAI,CAACL,WAAL,GAAmB,OAAI,CAACD,eAAL,CAAqBO,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAnB;AACD,WALH,EAME,UAAAC,YAAY,EAAI;AACd,mBAAI,CAACL,OAAL,GAAe,IAAf;AACA,mBAAI,CAACH,eAAL,GAAuB,IAAvB;AACA,mBAAI,CAAChM,QAAL,GAAgBwM,YAAhB;AACD,WAVH,EAWE;AAAA,mBAAMvM,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAN;AAAA,WAXF;AAaD;;;;;uBA7BU6L,wB,EAAwB,oK;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,c;AAAA,a;AAAA,gJ;AAAA;AAAA;ACTrC;;AACE;;AAMF;;;;AANO;;AAAA;;;;;;;;;sEDQMA,wB,EAAwB;cANpC,uDAMoC;eAN1B;AACT9J,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAM0B,Q;;;;;;;;;;;;;;;;;;;;;;AETrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;;;;;AAQI;;AAAkB;;AAA0C;;;;;;AAA1C;;AAAA;;;;;;AAClB;;AAAmB;;AAAW;;;;;;AAAX;;AAAA;;;;QAGVsK,kB;;;AAKX,kCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFZ,aAAAC,MAAA,GAAS,wCAAT,CAE8B,CAFqB;AAEnB;;;;eAExC,SAAAzN,QAAQ;AAAA;;AACN,eAAKwN,IAAL,CAAU5C,GAAV,CAAc,KAAK6C,MAAnB,EAA2BjN,SAA3B,CAAqC;AACnCqL,gBAAI,EAAE,SAANA,IAAM,CAACC,QAAD;AAAA,qBAAe,OAAI,CAAC3F,IAAL,GAAY2F,QAA3B;AAAA,aAD6B;AAEnC3D,iBAAK,EAAE,SAAPA,KAAO,CAACuF,GAAD;AAAA,qBAAU,OAAI,CAACvF,KAAL,GAAa,gCAAvB;AAAA;AAF4B,WAArC;AAID;;;;;uBAZUoF,kB,EAAkB,gI;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA,2B;AAAA;AAAA;AAL3B;;AAAI;;AAAc;;AAClB;;AACA;;;;AADK;;AAAA;;AACA;;AAAA;;;;;;;;;sEAGIA,kB,EAAkB;cAR9B,uDAQ8B;eARpB;AACTxK,kBAAQ,EAAE,eADD;AAET4K,kBAAQ;AAFC,S;AAQoB,Q;;;;;;;;;;;;;;;;;;;;;;ACZ/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSQ;;AACE;;AAA8C;;AAAuB;;AACrE;;AAA6C;;AAAuC;;AACtF;;;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAOP;;AACE;;AAA6C;;AAAsB;;AACnE;;AAA4C;;AAAsC;;AACpF;;;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAOP;;AACE;;AAA0C;;AAA0B;;AACpE;;AAAyC;;AAA0C;;AACrF;;;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAOP;;AACE;;AAA6C;;AAAqB;;AAClE;;AAA+E;;AAA6C;;AAC9H;;;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAYL;;AACE;;AAA2C;;AAA0B;;AACvE;;;;;;;;AADO;;AAAA;;;;;;AAOT;;AACE;;AAAoD;;AAA6B;;AACjF;;AAAuG;;AAAuB;;AAChI;;;;;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAOP;;AACE;;AAAkD;;AAA2B;;AAC7E;;AAAiD;;AAAwD;;AAC3G;;;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAOP;;AACE;;AAAwC;;AAA0B;;AACpE;;;;;;;;AADO;;AAAA;;;;;;AAQP;;AACE;;AAA4C;;AAAoB;;AAClE;;;;;;;;AADO;;AAAA;;;;;;AAOP;;AACE;;AAA6E;;AAA2C;;AAC1H;;;;;;;;AADO;;AAAA;;;;;;AAMT;;AACE;;AACA;;AACF;;;;;;AADE;;AAAA;;;;QD5FKC,iB;;;AAMX,iCAAoBhO,WAApB,EAAqDiO,WAArD,EAAuFhO,MAAvF,EAAuG;AAAA;;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXkB,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAAiO,WAAA,GAAAA,WAAA;AAAkC,aAAAhO,MAAA,GAAAA,MAAA;AAatF;;;;eAED,SAAAG,QAAQ,IACP;;;eACD,SAAAkK,UAAU,CAACnI,IAAD,EAAe;AAAA;;AACvB,cAAIoF,KAAK,GAAGpF,IAAI,CAACG,KAAL,CAAWoF,OAAvB;AACA,eAAK1H,WAAL,CAAiBkO,cAAjB,CAAgC/L,IAAI,CAACG,KAAL,CAAWyH,SAA3C,EAAsD5H,IAAI,CAACG,KAAL,CAAW0H,QAAjE,EAA2E7H,IAAI,CAACG,KAAL,CAAWoF,OAAtF,EACEvF,IAAI,CAACG,KAAL,CAAWyJ,QADb,EACuB1J,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAWmF,aAAZ,CAD/B,EAC2DtF,IAAI,CAACG,KAAL,CAAWqF,OADtE,EAC+ExF,IAAI,CAACG,KAAL,CAAW2H,MAD1F,EACkG,IAAIpC,IAAJ,CAAS,YAAT,CADlG,EACyH,CADzH,EAC4HjH,SAD5H,CAEE,UAAAuH,sBAAsB,EAAI;AACxB,mBAAI,CAACpF,MAAL,GAAcoF,sBAAd;AACA,mBAAI,CAAChI,OAAL,GAAe,IAAf;;AACA,gBAAI,OAAI,CAAC4C,MAAL,IAAa,CAAjB,EAAoB;AAClB,qBAAI,CAACE,GAAL,GAAW,yBAAX;AACA3C,4BAAc,CAAC8H,OAAf,CAAuB,UAAvB,EAAmCb,KAAnC;AACAjH,4BAAc,CAAC8H,OAAf,CAAuB,UAAvB,EAAmC,UAAnC;;AACA,qBAAI,CAACnI,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,aALD,MAKO;AACL,qBAAI,CAACwC,GAAL,GAAW,sBAAX;AACD;AACF,WAbH,EAcE,UAAAuF,qBAAqB,EAAI;AACvB,mBAAI,CAACtH,QAAL,GAAgBsH,qBAAhB;AACD,WAhBH,EAiBE;AAAA,mBAAMrH,OAAO,CAACC,GAAR,CAAY,8CAAZ,CAAN;AAAA,WAjBF;AAmBD;;;;;uBA5CU4M,iB,EAAiB,2J,EAAA,2H,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,c;AAAA,2rF;AAAA;AAAA;;;ACV9B;;AACA;;AACE;;AACE;;AAAI;;AAAM;;AACV;;AAA2B;AAAA;;AAAA;;AAAA,mBAAY,IAAA1D,UAAA,KAAZ;AAAkC,WAAlC;;AACzB;;AACA;;AACE;;AAAuB;;AAAU;;AACjC;;AACA;;AAIF;;AAEA;;AACE;;AAAsB;;AAAS;;AAC/B;;AACA;;AAIF;;AAEA;;AACE;;AAAqB;;AAAa;;AAClC;;AACA;;AAIF;;AAEA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AACA;;AAIA;;AAEA;;AACE;;AAAoB;;AAAM;;AAC1B;;AACE;;AAAmC;;AAAkB;;AACrD;;AAAkB;;AAAI;;AACtB;;AAAkB;;AAAM;;AACxB;;AAAkB;;AAAK;;AACzB;;AACA;;AAGF;;AAEF;;AACE;;AAA6B;;AAAgB;;AAC7C;;AACA;;AAIF;;AAEA;;AACE;;AAA2B;;AAAc;;AACzC;;AACA;;AAIF;;AAEA;;AACE;;AAAyB;;AAAa;;AACtC;;AACA;;AAGF;;AACF;;AAEE;;AACE;;AAAqB;;AAAO;;AAC5B;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAAyD;;AAAe;;AAAiC;;AAAoB;;AAAK;;AAAI;;AAAmC;;AAAc;;AAAI;;AAC3L;;AAGF;;AAEA;;AAA0E;;AAAO;;AAEjF;;AAIF;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;AAjGa;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAcE;;AAAA;;AAQF;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAQA;;AAAA;;AAK+B;;AAAA;;AAEjC;;AAAA;;;;;;;;;sED1FE0D,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT7K,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;AA8C9B,aAAS8K,SAAT,CAAmBC,OAAnB,EAAyC;AACvC,UAAIC,WAAW,GAAG,IAAIxG,IAAJ,EAAlB;AACA,UAAIyG,SAAS,GAAG,IAAIzG,IAAJ,CAASuG,OAAO,CAAC9L,KAAjB,CAAhB;AACAnB,aAAO,CAACC,GAAR,CAAYiN,WAAZ;AACAlN,aAAO,CAACC,GAAR,CAAYkN,SAAZ;;AACA,UAAIA,SAAS,IAAID,WAAb,IAA4BC,SAAS,IAAI,IAA7C,EAAmD;AACjD,eAAO,IAAP;AACD,OAFD,MAGK;AACH,eAAO;AACLC,mBAAS,EAAE;AACTC,mBAAO,EAAE;AADA;AADN,SAAP;AAKD;AACF;;;;;;;;;;;;;;;;;AEvED;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGM;;AAA+C;;AAAsB;;;;;;AAApD;;AAA8B;;AAAA;;;;;;AAC/C;;AAAmB;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAFrB;;AACE;;AACA;;AACF;;;;;;AAHoF;;AAC/E;;AAAA;;AACG;;AAAA;;;;QDKCC,mB;;;AAGX,mCAAoBxO,MAApB,EAA4CyO,cAA5C,EAA4E;AAAA;;AAAxD,aAAAzO,MAAA,GAAAA,MAAA;AAAwB,aAAAyO,cAAA,GAAAA,cAAA;AAF5C,aAAAC,WAAA,GAAqD,EAArD;AAE8E,O,CAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;eACF,SAAAvO,QAAQ;AAAA;;AACN,eAAKH,MAAL,CAAY2O,MAAZ,CACGC,IADH,CAEI,8DAAO,UAACC,KAAD;AAAA,mBAAWA,KAAK,YAAY,6DAA5B;AAAA,WAAP,CAFJ,EAGI,2DAAI;AAAA,mBAAM,OAAI,CAACC,eAAL,CAAqB,OAAI,CAACL,cAAL,CAAoBM,IAAzC,CAAN;AAAA,WAAJ,CAHJ,EAKGpO,SALH,CAKa,UAAC+N,WAAD,EAAiB;AAC1BxN,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BuN,WAA5B,EAD0B,CACgB;;AAC1C,mBAAI,CAACA,WAAL,GAAmBA,WAAnB;AACD,WARH;AASD;;;eACS,SAAAI,eAAe,CAAC7O,KAAD,EAAiG;AAAA,cAAzE+O,GAAyE,uEAA3D,EAA2D;AAAA,cAAvDN,WAAuD,uEAAF,EAAE;AACtH,cAAM1G,QAAQ,GAAqB/H,KAAK,CAAC+H,QAAzC;;AAEA,cAAIA,QAAQ,CAACiH,MAAT,KAAoB,CAAxB,EAA2B;AACzB,mBAAOP,WAAP;AACD;;AALqH,qDAOlG1G,QAPkG;AAAA;;AAAA;AAOtH,gEAA8B;AAAA,kBAAnBkH,KAAmB;AAC5B,kBAAMC,QAAQ,GAAWD,KAAK,CAAClI,QAAN,CAAegI,GAAf,CAAmBI,GAAnB,CAAuB,UAACC,OAAD;AAAA,uBAAaA,OAAO,CAACjJ,IAArB;AAAA,eAAvB,EAAkDkJ,IAAlD,CAAuD,GAAvD,CAAzB;;AACA,kBAAIH,QAAQ,KAAK,EAAjB,EAAqB;AACnBH,mBAAG,eAAQG,QAAR,CAAH;AACD;;AAED,kBAAMI,KAAK,GAAGL,KAAK,CAAClI,QAAN,CAAeV,IAAf,CAAoB,YAApB,CAAd;;AACA,kBAAIiJ,KAAJ,EAAW;AACTb,2BAAW,CAACc,IAAZ,CAAiB;AAAED,uBAAK,EAALA,KAAF;AAASP,qBAAG,EAAHA;AAAT,iBAAjB;AACD;;AAED,qBAAO,KAAKF,eAAL,CAAqBI,KAArB,EAA4BF,GAA5B,EAAiCN,WAAjC,CAAP;AACD;AAnBqH;AAAA;AAAA;AAAA;AAAA;;AAqBtH,iBAAOA,WAAP;AACD;;;;;uBAhDUF,mB,EAAmB,uH,EAAA,+H;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,c;AAAA,a;AAAA,uN;AAAA;AAAA;ACThC;;AACE;;AACE;;AAIF;;AACF;;;;AALQ;;AAAA;;;;;;;;;sEDOKA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTtL,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC4CkD;;AAA6B;;AAAmD;;;;;;AAAnD;;AAAA;;;;;;AAE3B;;AAA+B;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;AAIvE;;AAAyD;;AAAU;;;;;;AAEnE;;AAAwD;;AAAgB;;;;;;AAIxE;;AAAmC;;AAAY;;;;;;;;AApBrD;;AACE;;AACE;;AAAG;;AAAM;;AAAQ;;AAAO;;AAAyC;;AACjE;;AAAG;;AAAM;;AAAgB;;AAAO;;AAA2C;;AAC3E;;AAAG;;AAAM;;AAAY;;AAAO;;AAA6D;;AACzF;;AAAG;;AAAM;;AAAe;;AAAO;;AAA0C;;AAC3E;;AACA;;AACE;;AAAG;;AAAM;;AAAM;;AAAO;;AAAkB;;AAAoF;;AAAgC;;AAAU;;AAAI;;AAC1K;;AAAG;;AAAM;;AAAsB;;AAAO;;AAAyE;;AAC/G;;AAAG;;AAAM;;AAAQ;;AAAO;;AAAkB;;AAAiE;;AAAkC;;AAAQ;;AAAI;;AAC3J;;AACA;;AACE;;AAA6F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3F;;AACA;;AAAoC;;AAAY;;AAChD;;AACF;;AACA;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AAAa;;AAC3F;;AAA8F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC5F;;AACA;;AAAsC;;AAAY;;AACpD;;AACF;;AACF;;;;;;AAtB4B;;AAAA;;AACQ;;AAAA;;AACJ;;AAAA;;AACG;;AAAA;;AAGY;;AAAA;;AAAoF;;AAAA;;AACzF;;AAAA;;AACO;;AAAA;;AAAiE;;AAAA;;AAGvE;;AAAA;;AAC/B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGqD;;AAAA;;AACrD;;AAAA;;AACA;;AAAA;;;;;;AAIZ;;AACE;;AAAI;;AAAwB;;AAC9B;;;;QDrDOqM,qB;;;AAMX,qCAAoB/I,cAApB,EAA4D1G,MAA5D,EAAoFC,KAApF,EAA2G;AAAA;;AAAvF,aAAAyG,cAAA,GAAAA,cAAA;AAAwC,aAAA1G,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAA0B;;;;eAE9G,SAAAE,QAAQ;AACN,eAAKI,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;AACA,eAAKoP,QAAL,GAAgBrP,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;AACD,eAAKmP,WAAL;AACD;;;eAED,SAAAA,WAAW,GAAG;AAAA;;AACZ,eAAKjJ,cAAL,CAAoBiJ,WAApB,CAAgC,KAAKD,QAArC,EAA+C/O,SAA/C,CACE,UAAA0L,mBAAmB,EAAI;AACrB,mBAAI,CAACuD,WAAL,GAAmBvD,mBAAnB;;AADqB,wDAGD,OAAI,CAACuD,WAHJ;AAAA;;AAAA;AAGrB,qEAAsC;AAAA,oBAA7BC,OAA6B;;AACpC,oBAAIA,OAAO,CAAC,WAAD,CAAP,IAAwB,KAA5B,EAAmC;AACjCA,yBAAO,CAAC,WAAD,CAAP,GAAsB,CAAtB;AACD;;AACD,oBAAIA,OAAO,CAAC,aAAD,CAAP,GAAuB,CAA3B,EAA8B;AAC5BA,yBAAO,CAAC,aAAD,CAAP,GAAyB,CAAzB;AAED;;AACDA,uBAAO,CAAC,cAAD,CAAP,GAA0BA,OAAO,CAAC,cAAD,CAAP,CAAwBzF,SAAxB,CAAkC,CAAlC,EAAqC,EAArC,CAA1B;AACD;AAZoB;AAAA;AAAA;AAAA;AAAA;;AAarB,mBAAI,CAAC0F,QAAL,GAAgB,OAAI,CAACF,WAArB;AACD,WAfH,EAgBE,UAAArD,kBAAkB,EAAI;AACpB,mBAAI,CAACtL,QAAL,GAAgBsL,kBAAhB;AACD,WAlBH,EAmBE;AAAA,mBAAMrL,OAAO,CAACC,GAAR,CAAY,2CAAZ,CAAN;AAAA,WAnBF;AAsBD;;;eAED,SAAA4O,UAAU,CAACzN,SAAD,EAAoB;AAC5B,cAAIjC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAJ,EAAyC;AACvCD,0BAAc,CAAC+K,UAAf,CAA0B,WAA1B;AACD;;AACD/K,wBAAc,CAAC8H,OAAf,CAAuB,WAAvB,EAAoC7F,SAApC;AACA,eAAKtC,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;;;eAED,SAAAwP,WAAW,CAAC1N,SAAD,EAAoB;AAC7B,cAAIjC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAJ,EAAyC;AACvCD,0BAAc,CAAC+K,UAAf,CAA0B,WAA1B;AACD;;AACD/K,wBAAc,CAAC8H,OAAf,CAAuB,WAAvB,EAAoC7F,SAApC;AACA,eAAKtC,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;;;eACD,SAAAyP,SAAS,CAAC3N,SAAD,EAAoB;AAC3B,cAAIjC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAJ,EAAyC;AACvCD,0BAAc,CAAC+K,UAAf,CAA0B,WAA1B;AACD;;AACC/K,wBAAc,CAAC8H,OAAf,CAAuB,WAAvB,EAAoC7F,SAApC;AAEF,eAAKtC,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;;;;uBAhEUiP,qB,EAAqB,oK,EAAA,uH,EAAA,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,+hB;AAAA;AAAA;ACqBlC;;AACA;;AACE;;AACE;;AAAoB;;AAAW;;AAC/B;;AACE;;AAyBA;;AAGF;;AACF;;AACF;;;;AA9B8B;;AAAA;;AAyBJ;;AAAA;;;;;;;;;sEDnDbA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTvM,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOM;;AACE;;AACE;;AAAG;;AAAM;;AAAW;;AAAO;;AAAqC;;AAChE;;AAAG;;AAAM;;AAAa;;AAAO;;AAA4C;;AACzE;;AAAG;;AAAM;;AAAkB;;AAAO;;AAAkD;;AACtF;;AACA;;AACE;;AAAG;;AAAM;;AAAkB;;AAAO;;AAAkD;;AACpF;;AAAG;;AAAM;;AAAkB;;AAAO;;AAAmD;;AACrF;;AAAG;;AAAM;;AAAiB;;AAAO;;AAAiD;;AACpF;;AACA;;AACE;;AACF;;AACF;;;;;;AAZ+B;;AAAA;;AACE;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;;;QDP9B8M,mB;;;AAIX,mCAAoBxJ,cAApB,EAA4D1G,MAA5D,EAAoFC,KAApF,EAA2G;AAAA;;AAAvF,aAAAyG,cAAA,GAAAA,cAAA;AAAwC,aAAA1G,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AADpF,aAAA0B,MAAA,GAAc,EAAd;AAC8G;;;;eAE9G,SAAAxB,QAAQ;AACN,eAAKI,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;AACD,eAAK2P,SAAL;AACD;;;eACD,SAAAA,SAAS,GAAG;AAAA;;AACV,eAAKzJ,cAAL,CAAoByJ,SAApB,GAAgCxP,SAAhC,CACE,UAAAwD,mBAAmB,EAAI;AACrB,mBAAI,CAACxC,MAAL,GAAcwC,mBAAd;AACAjD,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACQ,MAAjB;AACD,WAJH,EAKE,UAAAyC,kBAAkB,EAAI;AACpB,mBAAI,CAACnD,QAAL,GAAgBmD,kBAAhB;AACD,WAPH,EAQE;AAAA,mBAAMlD,OAAO,CAACC,GAAR,CAAY,yCAAZ,CAAN;AAAA,WARF;AAUD;;;;;uBAxBU+O,mB,EAAmB,oK,EAAA,uH,EAAA,+H;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,4W;AAAA;AAAA;ACPhC;;AACA;;AACE;;AACE;;AAAoB;;AAAS;;AAC7B;;AACE;;AAeA;;AACE;;AAAI;;AAAsB;;AAC5B;;AACF;;AACF;;AACF;;;;AApB8B;;AAAA;;AAeN;;AAAA;;;;;;;;;sEDbXA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACThN,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;;;AAII;;AACE;;AACE;;AAAI;;AAAe;;AACnB;;AAAG;;AAA+B;;AAChC;;AACJ;;AACA;;AACE;;AAAI;;AAAmB;;AACvB;;AAAG;;AAA6B;;AAClC;;AACA;;AACE;;AAAI;;AAAO;;AACX;;AAAG;;AAAuB;;AAAa;;AAAO;;AAAM;;AAAyD;;AAAO;;AACpH;;AAAG;;AAAuB;;AAAO;;AAAO;;AAAM;;AAA+B;;AAAO;;AACpF;;AAAG;;AAAuB;;AAAe;;AAAO;;AAAM;;AAA8B;;AAAO;;AAC3F;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4F;;AAAI;;AACxI;;AACF;;;;;;AAdO;;AAAA;;AACI;;AAAA;;AAIJ;;AAAA;;AAIiD;;AAAA;;AACN;;AAAA;;AACQ;;AAAA;;;;QDbjDgN,2B;;;AASX,2CAAoB1J,cAApB,EAA4D1G,MAA5D,EAAoFC,KAApF,EAA2G;AAAA;;AAAvF,aAAAyG,cAAA,GAAAA,cAAA;AAAwC,aAAA1G,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AALpF,aAAAoQ,UAAA,GAAsB,KAAtB;AAGA,aAAA5G,cAAA,GAA0B,KAA1B;AACA,aAAAC,YAAA,GAAwB,KAAxB;AAC8G;;;;eAE9G,SAAAvJ,QAAQ;AACN,eAAKI,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,WAFD,MAEO,IAAI,KAAKD,QAAL,IAAiB,UAArB,EAAiC;AACtC,iBAAKkJ,cAAL,GAAsB,IAAtB;AACD;;AACD,eAAK1C,SAAL,GAAiB,KAAK9G,KAAL,CAAW+G,QAAX,CAAoBC,MAApB,CAA2B,WAA3B,CAAjB;AACA,eAAKC,WAAL,GAAmB,KAAKjH,KAAL,CAAW+G,QAAX,CAAoBC,MAApB,CAA2B,aAA3B,CAAnB;AACA,eAAKqJ,iBAAL,CAAuB,KAAKvJ,SAA5B;;AAEA,cAAI,KAAKwJ,cAAL,IAAuB,IAA3B,EAAiC;AAC/B,iBAAKF,UAAL,GAAkB,IAAlB;AACD;AACF;;;eAGD,SAAAC,iBAAiB,CAACvJ,SAAD,EAAoB;AAAA;;AACnC,eAAKL,cAAL,CAAoB4J,iBAApB,CAAsCvJ,SAAtC,EAAiDpG,SAAjD,CACE,UAAA6P,YAAY,EAAI;AACd,mBAAI,CAACD,cAAL,GAAsBC,YAAtB;AACAtP,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACoP,cAAjB;AACA,mBAAI,CAACF,UAAL,GAAkB,KAAlB;AACD,WALH,EAME,UAAAI,aAAa,EAAI;AACf,mBAAI,CAACF,cAAL,GAAsB,IAAtB;AACA,mBAAI,CAACG,MAAL,GAAcD,aAAd;AACAvP,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACuP,MAAjB;AACD,WAVH,EAWE;AAAA,mBAAMxP,OAAO,CAACC,GAAR,CAAY,+CAAZ,CAAN;AAAA,WAXF;AAaD,S,CAED;AACA;AACA;;;;eACA,SAAAwP,qBAAqB,CAACC,gBAAD,EAA2B1J,WAA3B,EAAgD;AACrE,eAAKlH,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,SAAD,EAAYoQ,gBAAZ,CAArB,EAAoD;AAAEzJ,uBAAW,EAAE;AAAE0J,kBAAI,EAAE3J;AAAR;AAAf,WAApD;AACD;;;;;uBAjDYkJ,2B,EAA2B,oK,EAAA,uH,EAAA,+H;AAAA,K;;;YAA3BA,2B;AAA2B,+C;AAAA,c;AAAA,a;AAAA,+W;AAAA;AAAA;ACVxC;;AAGA;;AAGA;;AACE;;AACE;;AAAoB;;AAAiB;;AAAM;;AAAe;;AAAO;;AACjE;;AAkBF;;AACF;;;;AA5BK;;AAGA;;AAAA;;AAK0C;;AAAA;;AACvB;;AAAA;;;;;;;;;sEDCXA,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACTlN,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK6B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAWU;;AACE;;AACF;;;;;;AAF4C;;AAC1C;;AAAA;;;;;;;;AAMN;;AACE;;AACE;;AAAsF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAtF;;AACF;;AACA;;AACE;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoE;;AAAuB;;AAC/F;;AAAG;;AAA6C;;AAChD;;AAAG;;AAAuB;;AAC3B;;AACH;;;;;;AAPS;;AAAA;;AAGmE;;AAAA;;AACrE;;AAAA;;AACA;;AAAA;;;;QDpBA0N,qB;;;AAWX,qCAAoBpK,cAApB,EAA4D1G,MAA5D,EAA4E;AAAA;;AAAxD,aAAA0G,cAAA,GAAAA,cAAA;AAAwC,aAAA1G,MAAA,GAAAA,MAAA;AAH5D,aAAAyJ,cAAA,GAA0B,KAA1B;AACA,aAAAC,YAAA,GAAwB,KAAxB;AAIE,aAAKnJ,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,YAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,eAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,SAFD,MAEO,IAAI,KAAKD,QAAL,IAAiB,UAArB,EAAiC;AACtC,eAAKkJ,cAAL,GAAsB,IAAtB;AACD;AACF;;;;eAED,SAAAtJ,QAAQ;AACN,eAAKmN,WAAL;AACA,eAAKyD,aAAL;;AAEA,cAAI,KAAKC,QAAL,IAAiB,IAArB,EAA2B;AACzB,iBAAK5D,OAAL,GAAe,IAAf;AACD;;AAED,eAAK6D,gBAAL,GAAwB,KAAKD,QAA7B;AAEA,eAAK3D,SAAL,GAAiB,aAAjB;AACD;;;eACD,SAAAC,WAAW,GAAG;AAAA;;AACZ,eAAK5G,cAAL,CAAoB4G,WAApB,GAAkC3M,SAAlC,CACE,UAAA4M,WAAW,EAAI;AACb,mBAAI,CAACH,OAAL,GAAe,KAAf;AACA,mBAAI,CAAC4D,QAAL,GAAgBzD,WAAhB;AACA,mBAAI,CAAC0D,gBAAL,GAAwB1D,WAAxB;AACD,WALH,EAME,UAAAE,YAAY,EAAI;AACd,mBAAI,CAACL,OAAL,GAAe,IAAf;AACA,mBAAI,CAAC4D,QAAL,GAAgB,IAAhB;AACA,mBAAI,CAAC/P,QAAL,GAAgBwM,YAAhB;AACD,WAVH,EAWE;AAAA,mBAAMvM,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyC,OAAI,CAAC6P,QAA9C,CAAN;AAAA,WAXF;AAaD;;;eAED,SAAAD,aAAa,GAAG;AAAA;;AACd,eAAKrK,cAAL,CAAoBqK,aAApB,GAAoCpQ,SAApC,CACE,UAAA4M,WAAW,EAAI;AACb,mBAAI,CAAC2D,UAAL,GAAkB3D,WAAlB;AACArM,mBAAO,CAACC,GAAR,CAAY,OAAI,CAAC+P,UAAjB;AACD,WAJH,EAKE,UAAAT,aAAa,EAAI;AACf,mBAAI,CAACxP,QAAL,GAAgBwP,aAAhB;AACA,mBAAI,CAACS,UAAL,GAAkB,IAAlB;AACD,WARH,EASE;AAAA,mBAAMhQ,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAAA,WATF;AAWD;;;eAED,SAAAgQ,uBAAuB,CAACC,UAAD,EAAqB;AAC1C;AACA,eAAKH,gBAAL,GAAwB,KAAKD,QAA7B,CAF0C,CAG1C;AACA;AACA;AACA;;AAEA,cAAIK,KAAK,GAAGjP,QAAQ,CAACgP,UAAD,CAApB;;AACA,cAAIC,KAAK,GAAG,CAAZ,EAAe;AACb,iBAAKJ,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBK,MAAtB,CAA6B,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,iBAAL,IAA0BH,KAA9B;AAAA,aAAjC,CAAxB;AACD;;AAEDnQ,iBAAO,CAACC,GAAR,CAAY,KAAK8P,gBAAjB,EAb0C,CAc1C;AACD;;;eAED,SAAAQ,kBAAkB,CAAC1K,SAAD,EAAmBG,WAAnB,EAAuC;AACvDhG,iBAAO,CAACC,GAAR,CAAY4F,SAAZ;AACA,eAAK/G,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,oBAAD,EAAuBuG,SAAvB,EAAiCG,WAAjC,CAArB;AACD;;;;;uBAnFU4J,qB,EAAqB,oK,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,0kB;AAAA;AAAA;;;ACVlC;;AAGA;;AAGA;;AACE;;AACE;;AAAoB;;AAAQ;;AAC5B;;AACE;;AACE;;AAAO;;AAAgB;;AACzB;;AACA;;AACE;;AAAoD;AAAA;;AAAA;;AAAA,mBAAU,IAAAK,uBAAA,YAAV;AAAqD,WAArD;;AAClD;;AAAkB;;AAAc;;AAChC;;AAGF;;AACF;;AACF;;AACA;;AACE;;AAWF;;AACF;;AACF;;;;AApCK;;AAGA;;AAAA;;AAaa;;AAAA;;AAOY;;AAAA;;;;;;;;;sEDbjBL,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT5N,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMM;;AACE;;AACE;;AAAG;;AAAM;;AAAa;;AAAO;;AAAyC;;AACtE;;AAAG;;AAAM;;AAAa;;AAAO;;AAAyC;;AACtE;;AAAG;;AAAM;;AAAY;;AAAO;;AAA8C;;AAC5E;;AACA;;AACE;;AAAG;;AAAM;;AAAc;;AAAO;;AAAgD;;AAC9E;;AAAG;;AAAM;;AAAW;;AAAO;;AAA8C;;AAC3E;;AACA;;AACE;;AACF;;AACF;;;;;;AAXiC;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;AAGE;;AAAA;;AACH;;AAAA;;;;;;AAM/B;;AACE;;AAAI;;AAAwB;;AAC9B;;;;QDbOsO,qB;;;AAIX,qCAAoBhL,cAApB,EAA4D1G,MAA5D,EAAoFC,KAApF,EAA2G;AAAA;;AAAvF,aAAAyG,cAAA,GAAAA,cAAA;AAAwC,aAAA1G,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAA0B;;;;eAE9G,SAAAE,QAAQ;AACN,eAAKI,QAAL,GAAgBF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,cAAI,KAAKC,QAAL,IAAiB,UAArB,EAAiC;AAC/B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;AACD,eAAKmR,WAAL;AACD;;;eACD,SAAAA,WAAW,GAAG;AAAA;;AACZ,eAAKjL,cAAL,CAAoBiL,WAApB,GAAkChR,SAAlC,CACE,UAAAiR,qBAAqB,EAAI;AACvB,mBAAI,CAACC,QAAL,GAAgBD,qBAAhB;AACD,WAHH,EAIE,UAAAE,oBAAoB,EAAI;AACtB,mBAAI,CAAC7Q,QAAL,GAAgB6Q,oBAAhB;AACD,WANH,EAOE;AAAA,mBAAM5Q,OAAO,CAACC,GAAR,CAAY,2CAAZ,CAAN;AAAA,WAPF;AASD;;;;;uBAvBUuQ,qB,EAAqB,oK,EAAA,uH,EAAA,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,kY;AAAA;AAAA;ACRlC;;AACA;;AACE;;AACE;;AAAoB;;AAAW;;AAC/B;;AACE;;AAcA;;AAGF;;AACF;;AACF;;;;AAnB8B;;AAAA;;AAcJ;;AAAA;;;;;;;;;sEDXbA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTxO,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM2O,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAApE,GAAG;AAAA,aAAI3M,OAAO,CAACoH,KAAR,CAAcuF,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;ACVA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaqE,W;;;AAMX,2BAAoBvE,IAApB,EAA6CwE,SAA7C,EAA0E;AAAA;;AAAtD,aAAAxE,IAAA,GAAAA,IAAA;AAAyB,aAAAwE,SAAA,GAAAA,SAAA;AALrC,aAAAvE,MAAA,GAAS,kCAAT,CAKkE,CALrB;AACrD;;AACQ,aAAAwE,YAAA,GAAe,IAAI,oDAAJ,CAAmC,KAAKC,QAAL,EAAnC,CAAf;AACD,aAAAC,MAAA,GAAS,KAAKF,YAAL,CAAkBG,YAAlB,EAAT;AAEqE;;;;eAE5E,SAAAxG,KAAK,CAACyG,OAAD,EAAkBC,YAAlB,EAAuC9G,SAAvC,EAAwD;AAAA;;AAC3D,cAAM+G,QAAQ,GAACD,YAAf;;AACA,cAAI9G,SAAS,IAAI,CAAjB,EACA;AACA,mBAAO,KAAKgC,IAAL,CAAUgF,IAAV,WAAgC,KAAK/E,MAArC,sBAA8D;AAAE4E,qBAAO,EAAEA,OAAX;AAAoBC,0BAAY,EAAEA;AAAlC,aAA9D,EAA+G7D,IAA/G,CACL,2DAAI,UAAC3C,QAAD;AAAA,qBAAc,OAAI,CAAC2G,SAAL,CAAe3G,QAAQ,CAAC4G,KAAxB,CAAd;AAAA,aAAJ,CADK,CAAP;AAGC;;AACD,cAAIlH,SAAS,IAAI,CAAjB,EACA;AACE,mBAAO,KAAKgC,IAAL,CAAUgF,IAAV,WAAgC,KAAK/E,MAArC,sBAA8D;AAAE4E,qBAAO,EAAEA,OAAX;AAAoBE,sBAAQ,EAAEA;AAA9B,aAA9D,EAAuG9D,IAAvG,CACL,2DAAI,UAAC3C,QAAD;AAAA,qBAAc,OAAI,CAAC2G,SAAL,CAAe3G,QAAQ,CAAC4G,KAAxB,CAAd;AAAA,aAAJ,CADK,CAAP;AAGD;AACF;;;eAED,SAAAC,MAAM;AACJ,eAAKC,UAAL;AACA,eAAKX,YAAL,CAAkBpG,IAAlB,CAAuB,IAAvB,EAFI,CAGJ;AACD;;;eAED,SAAAqG,QAAQ;AACN,iBAAOlN,YAAY,CAAC7E,OAAb,CAAqB,WAArB,CAAP;AACD;;;eAEO,SAAAsS,SAAS,CAACC,KAAD,EAAc;AAC7B1N,sBAAY,CAACgD,OAAb,CAAqB,WAArB,EAAkC0K,KAAlC;AACA,eAAKT,YAAL,CAAkBpG,IAAlB,CAAuB6G,KAAvB;AACD;;;eAEC,SAAAG,WAAW;AACX,cAAMH,KAAK,GAAG,KAAKR,QAAL,EAAd;;AACA,cAAIQ,KAAJ,EAAW;AACT,mBAAO,KAAKV,SAAL,CAAea,WAAf,CAA2BH,KAA3B,CAAP;AACD;;AACD,iBAAO,IAAP;AACD;;;eAED,SAAA3G,OAAO;AACL,cAAM+G,YAAY,GAAG,KAAKD,WAAL,EAArB;AACA9R,iBAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB8R,YAArB;AACA,iBAAOA,YAAY,GAAGA,YAAY,CAAC,MAAD,CAAf,GAA0B,IAA7C,CAHK,CAG8C;AACpD;;;eAEO,SAAAF,UAAU;AAChB5N,sBAAY,CAACiG,UAAb,CAAwB,WAAxB;AACD;;;eAED,SAAA8H,eAAe;AACb,iBAAO,CAAC,CAAC,KAAKb,QAAL,EAAT;AACD;;;;;uBA3DUH,W,EAAW,uH,EAAA,2H;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACViB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,e;;;AAEX,+BAAoB5H,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B,O,CAEhD;AACA;AACA;;;;;eACE,SAAA6H,SAAS,CAAClU,GAAD,EAAwB6M,IAAxB,EAA2C;AACpD,cAAMsH,SAAS,GAAG,KAAK9H,WAAL,CAAiB6G,QAAjB,EAAlB;;AACA,cAAIiB,SAAJ,EAAe;AACb,gBAAMC,OAAO,GAAGpU,GAAG,CAACqU,KAAJ,CAAU;AACxBC,qBAAO,EAAEtU,GAAG,CAACsU,OAAJ,CAAYC,GAAZ,CAAgB,eAAhB,mBAA2CJ,SAA3C;AADe,aAAV,CAAhB;AAGA,mBAAOtH,IAAI,CAAC2H,MAAL,CAAYJ,OAAZ,CAAP;AACD;;AACD,iBAAOvH,IAAI,CAAC2H,MAAL,CAAYxU,GAAZ,CAAP;AACD;;;;;uBAhBUiU,e,EAAe,6H;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;;;sEAAfA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;ACX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaQ,c;;;AAEX,8BAAoBjG,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;eAEzC,SAAAL,WAAW;AACT,cAAIuG,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAA0B,oDAA1B,EAAgF6D,IAAhF,CAAqF,kEAAW,KAAKkF,YAAhB,CAArF,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAlC,WAAW;AACT,cAAIkC,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAA0B,oDAA1B,EAAgF6D,IAAhF,CAAqF,kEAAW,KAAKkF,YAAhB,CAArF,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAA1D,SAAS;AACP,cAAI0D,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAAwB,kDAAxB,EAA4E6D,IAA5E,CAAiF,kEAAW,KAAKkF,YAAhB,CAAjF,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAA9C,aAAa;AACX,iBAAO,KAAKpD,IAAL,CAAU5C,GAAV,CAA2B,6DAA3B,EAA0F6D,IAA1F,CAA+F,kEAAW,KAAKkF,YAAhB,CAA/F,CAAP;AACD;;;eACD,SAAAxD,iBAAiB,CAACvJ,SAAD,EAAkB;AACjC,cAAIgN,SAAS,GAAG;AAAEhN,qBAAS,EAAEA;AAAb,WAAhB;AACA,cAAI8M,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAAiC,qEAAjC,EAAwG;AAAE9D,kBAAM,EAAE8M;AAAV,WAAxG,EAA+HnF,IAA/H,CAAoI,kEAAW,KAAKkF,YAAhB,CAApI,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAA5L,WAAW,CAAC+L,SAAD,EAAwB;AACjC,cAAIH,IAAI,GAAG,KAAKlG,IAAL,CAAUgF,IAAV,CAAuB,uDAAvB,EAAgFqB,SAAhF,EAA2FpF,IAA3F,CAAgG,kEAAW,KAAKkF,YAAhB,CAAhG,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAlE,WAAW,CAACrI,KAAD,EAAc;AACvB,cAAI2M,KAAK,GAAG;AAAE3M,iBAAK,EAAEA;AAAT,WAAZ;AACA,cAAIuM,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAA+B,2DAA/B,EAA4F;AAAE9D,kBAAM,EAAEgN;AAAV,WAA5F,EAA+GrF,IAA/G,CAAoH,kEAAW,KAAKkF,YAAhB,CAApH,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAC,YAAY,CAACxL,KAAD,EAA2B;AACrCpH,iBAAO,CAACoH,KAAR,CAAcA,KAAd;AACA,iBAAO,wDAAWA,KAAK,CAACiG,OAAN,IAAiB,cAA5B,CAAP;AACD;;;;;uBA1CUqF,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVT,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACd3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeae,W;;;AAEX,2BAAoBvG,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEnB,O,CACD;;;;;eACA,SAAAwG,mBAAmB,CAAC7M,KAAD,EAAgBwE,QAAhB,EAAiCH,SAAjC,EAAkD;AACnE,cAAIkI,IAAJ;;AACA,cAAIlI,SAAS,IAAI,CAAjB,EAAoB;AAClB,gBAAIyI,OAAJ,CADkB,CAEnB;;AACCP,gBAAI,GAAG,KAAKlG,IAAL,CAAUgF,IAAV,CAAuB,8DAAvB,EAAuF;AAAEH,qBAAO,EAAElL,KAAX;AAAkBmL,0BAAY,EAAE3G;AAAhC,aAAvF,EAAkI8C,IAAlI,CAAuI,kEAAW,KAAKkF,YAAhB,CAAvI,CAAP;AACD,WAJD,MAIO,IAAInI,SAAS,IAAI,CAAjB,EAAoB;AACzB,gBAAI0I,MAAJ;AACAA,kBAAM,GAAG;AAAE7B,qBAAO,EAAElL,KAAX;AAAkBoL,sBAAQ,EAAE5G,QAA5B;AAAsCwI,uBAAS,EAAE,IAAjD;AAAuDC,sBAAQ,EAAE,IAAjE;AAAuEC,oBAAM,EAAC;AAA9E,aAAT;AACAX,gBAAI,GAAG,KAAKlG,IAAL,CAAUgF,IAAV,CAAuB,8DAAvB,EAAsF0B,MAAtF,EAA8FzF,IAA9F,CAAmG,kEAAW,KAAKkF,YAAhB,CAAnG,CAAP;AAED;;AACD,iBAAOD,IAAP;AACD,S,CACD;;;;eACA,SAAA5F,cAAc,CAACnE,SAAD,EAAoBC,QAApB,EAAsCtC,OAAtC,EACZqE,QADY,EACMtE,aADN,EAC6BE,OAD7B,EAC8CsC,MAD9C,EAC8DO,WAD9D,EACiFkK,MADjF,EAC+F;AAC3G,cAAIL,OAAJ;AACAA,iBAAO,GAAG;AAAE5B,mBAAO,EAAE/K,OAAX;AAAoBgL,wBAAY,EAAE3G,QAAlC;AAA4CwI,qBAAS,EAAExK,SAAvD;AAAkEyK,oBAAQ,EAAExK,QAA5E;AAAsFyK,kBAAM,EAAEC,MAA9F;AAAsGC,kBAAM,EAAE1K,MAA9G;AAAsH2K,uBAAW,EAAEpK,WAAnI;AAAgJN,mBAAO,EAAEvC,OAAzJ;AAAkKkN,yBAAa,EAAEpN;AAAjL,WAAV;AACA,cAAIqM,IAAI,GAAG,KAAKlG,IAAL,CAAUgF,IAAV,CAAuB,oDAAvB,EAA6EyB,OAA7E,EAAsFxF,IAAtF,CAA2F,kEAAW,KAAKkF,YAAhB,CAA3F,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAvJ,iBAAiB,CAACR,SAAD,EAAoBC,QAApB,EAAsCtC,OAAtC,EACfqE,QADe,EACGtE,aADH,EAC0BE,OAD1B,EAC2CsC,MAD3C,EAC2DO,WAD3D,EAC8EkK,MAD9E,EAC4F;AAC3G,cAAIL,OAAJ;AACAA,iBAAO,GAAG;AAAE5B,mBAAO,EAAE/K,OAAX;AAAoBgL,wBAAY,EAAE3G,QAAlC;AAA4CwI,qBAAS,EAAExK,SAAvD;AAAkEyK,oBAAQ,EAAExK,QAA5E;AAAsFyK,kBAAM,EAAEC,MAA9F;AAAsGC,kBAAM,EAAE1K,MAA9G;AAAsH2K,uBAAW,EAAEpK,WAAnI;AAAgJN,mBAAO,EAAEvC,OAAzJ;AAAkKkN,yBAAa,EAAEpN;AAAjL,WAAV;AACA,cAAIqM,IAAI,GAAG,KAAKlG,IAAL,CAAUkH,GAAV,CAAuB,sDAAvB,EAA+ET,OAA/E,EAAwFxF,IAAxF,CAA6F,kEAAW,KAAKkF,YAAhB,CAA7F,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAjK,eAAe,CAACnC,OAAD,EAAgB;AAC7B,cAAIqN,MAAM,GAAG;AAAErN,mBAAO,EAAEA;AAAX,WAAb;AACA,cAAIoM,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAAyB,2DAAzB,EAAsF;AAAE9D,kBAAM,EAAE6N;AAAV,WAAtF,EAA0GlG,IAA1G,CAA+G,kEAAW,KAAKkF,YAAhB,CAA/G,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAA3P,QAAQ,CAACX,KAAD,EAAc;AACpB,cAAIsQ,IAAI,GAAG,KAAKlG,IAAL,CAAUgF,IAAV,CAAwB,iDAAxB,EAA2EpP,KAA3E,EAAkFqL,IAAlF,CAAuF,kEAAW,KAAKkF,YAAhB,CAAvF,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAA9O,UAAU,CAACR,OAAD,EAAkB;AAC1B,cAAIsP,IAAI,GAAG,KAAKlG,IAAL,CAAUgF,IAAV,CAAwB,mDAAxB,EAA6EpO,OAA7E,EAAsFqK,IAAtF,CAA2F,kEAAW,KAAKkF,YAAhB,CAA3F,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAA3K,QAAQ,CAACH,KAAD,EAAiB;AACvB,cAAI8K,IAAI,GAAG,KAAKlG,IAAL,CAAUgF,IAAV,CAAwB,wDAAxB,EAAkF5J,KAAlF,EAAyF6F,IAAzF,CAA8F,kEAAW,KAAKkF,YAAhB,CAA9F,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAzK,WAAW;AACT,cAAIyK,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAAsB,oDAAtB,EAA4E6D,IAA5E,CAAiF,kEAAW,KAAKkF,YAAhB,CAAjF,CAAX;AACA,iBAAOD,IAAP;AACD;;;eACD,SAAAzH,QAAQ,CAAChM,SAAD,EAAkB;AACxB,cAAI2U,MAAM,GAAG;AAAE3U,qBAAS,EAAEA;AAAb,WAAb;AACA,cAAIyT,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAAsB,iDAAtB,EAAyE;AAAE9D,kBAAM,EAAE8N;AAAV,WAAzE,EAA6FnG,IAA7F,CAAkG,kEAAW,KAAKkF,YAAhB,CAAlG,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAnT,iBAAiB,CAACN,SAAD,EAAkB;AACjC,cAAI2U,MAAM,GAAG;AAAE3U,qBAAS,EAAEA;AAAb,WAAb;AACA,cAAIyT,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAAsB,kEAAtB,EAA0F;AAAE9D,kBAAM,EAAE8N;AAAV,WAA1F,EAA8GnG,IAA9G,CAAmH,kEAAW,KAAKkF,YAAhB,CAAnH,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAvS,oBAAoB,CAACD,IAAD,EAAa;AAC/B,cAAI2T,IAAI,GAAG;AAAE3T,gBAAI,EAAEA;AAAR,WAAX;AACA,cAAIwS,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAAwB,8DAAxB,EAAwF;AAAE9D,kBAAM,EAAE+N;AAAV,WAAxF,EAA0GpG,IAA1G,CAA+G,kEAAW,KAAKkF,YAAhB,CAA/G,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAnS,wBAAwB,CAACL,IAAD,EAAeI,MAAf,EAA6B;AACrD;AACE;AACA;AACA,cAAIiG,OAAO,GAAW,0EAA0ErG,IAA1E,GAAiF,UAAjF,GAA8FI,MAApH;AACA,cAAIoS,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAAwBrD,OAAxB,EAAiCkH,IAAjC,CAAsC,kEAAW,KAAKkF,YAAhB,CAAtC,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAjS,OAAO,CAACC,SAAD,EAAoBC,QAApB,EAAoC;AAEzC,cAAI4F,OAAO,GAAW,mEAAmE7F,SAAnE,GAA+E,YAA/E,GAA8FC,QAApH;AACA,cAAI+R,IAAI,GAAG,KAAKlG,IAAL,CAAU5C,GAAV,CAAsBrD,OAAtB,EAA+BkH,IAA/B,CAAoC,kEAAW,KAAKkF,YAAhB,CAApC,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAED,SAAAjR,iBAAiB,CAACT,aAAD,EAA8B;AAC7C,cAAI0R,IAAI,GAAG,KAAKlG,IAAL,CAAUgF,IAAV,CAAwB,+DAAxB,EAAyFxQ,aAAzF,EAAwGyM,IAAxG,CAA6G,kEAAW,KAAKkF,YAAhB,CAA7G,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAGD,SAAA/G,WAAW,CAACL,GAAD,EAAa;AACtB,cAAIoH,IAAI,GAAG,KAAKlG,IAAL,CAAUgF,IAAV,CAAwB,gDAAxB,EAA0ElG,GAA1E,EAA+EmC,IAA/E,CAAoF,kEAAW,KAAKkF,YAAhB,CAApF,CAAX;AACA,iBAAOD,IAAP;AACD;;;eAEC,SAAAC,YAAY,CAACxL,KAAD,EAA2B;AACrCpH,iBAAO,CAACoH,KAAR,CAAcA,KAAd;AACA,iBAAO,wDAAWA,KAAK,CAACiG,OAAN,IAAiB,cAA5B,CAAP;AACD;;;;;uBA9GQ2F,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVf,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfxB","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { IAccommodation } from '../travelAway-interfaces/Accommodation';\r\n\r\n@Component({\r\n  selector: 'app-accommodation',\r\n  templateUrl: './accommodation.component.html',\r\n  styleUrls: ['./accommodation.component.css']\r\n})\r\nexport class AccommodationComponent implements OnInit {\r\n  bookingId: string;\r\n  userRole: string;\r\n  errorMsg: any;\r\n  status: boolean;\r\n  showDiv: boolean = false;\r\n  msg: string;\r\n  cities: string[];\r\n  ratings: number[];\r\n  hotels: string[];\r\n  rawcities: string;\r\n  cost: number;\r\n  rooms: number;\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bookingId = sessionStorage.getItem('bookingId');\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n    this.getCitiesByBookingId(this.bookingId);\r\n  }\r\n\r\n  getCitiesByBookingId(bookingId:string) {\r\n    this.userService.getCitiesByBookId(bookingId).subscribe(\r\n      responseCitiesStatus => {\r\n        this.rawcities = responseCitiesStatus;\r\n        this.cities = this.rawcities.split(\",\");\r\n      },\r\n      responseCitiesError => {\r\n        this.errorMsg = responseCitiesError;\r\n      },\r\n      () => console.log(\"GetCity method executed successfully\")\r\n    );\r\n    \r\n  }\r\n\r\n  searchrating(city: string) {\r\n    this.userService.getHotelRatingByCity(city).subscribe(\r\n      responseCitiesStatus => {\r\n        this.ratings = responseCitiesStatus;\r\n        \r\n      },\r\n      responseCitiesError => {\r\n        this.errorMsg = responseCitiesError;\r\n      },\r\n      () => console.log(\"HotelRating method executed successfully\")\r\n    );\r\n  }\r\n\r\n  searchhotel(rating: string, city: string) {\r\n\r\n    this.userService.getHotelsByCityAndRating(city,rating).subscribe(\r\n      responseCitiesStatus => {\r\n       this.hotels = responseCitiesStatus;\r\n        \r\n      },\r\n      responseCitiesError => {\r\n        this.errorMsg = responseCitiesError;\r\n      },\r\n      () => console.log(\"SearchHotel method executed successfully\")\r\n    );\r\n  }\r\n\r\n  getCost(hotelName: string, roomtype: string) {\r\n\r\n    this.userService.getCost(hotelName, roomtype).subscribe(\r\n      responseCitiesStatus => {\r\n        this.cost = responseCitiesStatus*this.rooms;\r\n        //console.log(\"Cost:\", this.cost * this.rooms);\r\n      },\r\n      responseCitiesError => {\r\n        this.errorMsg = responseCitiesError;\r\n      },\r\n      () => console.log(\"Cost method executed successfully\")\r\n    );\r\n\r\n  }\r\n  submitaccodForm(form: NgForm) {\r\n    var accommodation: IAccommodation = {\r\n      bookingId: parseInt(form.value.bookingid),\r\n      hotelName: form.value.hotelName,\r\n      city: form.value.city,\r\n      noOfRooms: parseInt(form.value.rooms),\r\n      hotelRating: parseInt(form.value.rating),\r\n      price: parseInt(form.value.estimatedcost),\r\n      roomType: form.value.roomtype\r\n    }\r\n\r\n    this.userService.bookAccommodation(accommodation).subscribe(\r\n      responseAccommodationStatus => {\r\n        this.status = responseAccommodationStatus;\r\n        if (this.status) {\r\n          if (confirm(\"Accommodation details added successfully.Do you want to continue for payment?\")) {\r\n            this.router.navigate(['/payment']);\r\n          } else {\r\n            this.router.navigate(['/viewbookings']);\r\n          }\r\n        } else {\r\n          this.showDiv = true;\r\n          this.msg = \"Accommodation details not added.Try Again\";\r\n        }\r\n      },\r\n      responseAccommodationError => {\r\n        this.errorMsg = responseAccommodationError;\r\n      },\r\n      () => console.log(\"Book Accommodation method executed successfully\")\r\n    );\r\n  }\r\n}\r\n","\r\n <app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div class=\"accommodation\">\r\n    <h1>Accommodation</h1>\r\n\r\n    <form #accodForm=\"ngForm\" (ngSubmit)=\"submitaccodForm(accodForm)\">\r\n      <!-- Booking ID and City -->\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"bookingid\">Booking ID</label>\r\n            <input type=\"text\" name=\"bookingid\" class=\"form-control forminputs\" [(ngModel)]=\"bookingId\" #bookingRef=\"ngModel\" ngModel readonly />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"city\">City</label>\r\n            <select class=\"form-control forminputs\" name=\"city\" #cityRef=\"ngModel\" ngModel required (change)=\"searchrating(cityRef.value)\">\r\n              <option value=\"\" disabled selected>City</option>\r\n              <option value=\"{{city}}\" *ngFor=\"let city of cities\">{{city}}</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"cityRef.errors && (cityRef.dirty || cityRef.touched)\" class=\"error-message\">\r\n            <p>City is mandatory</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Hotel Rating and Hotel -->\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"rating\">Hotel Rating</label>\r\n            <select class=\"form-control forminputs\" name=\"rating\" #ratingRef=\"ngModel\" ngModel required (change)=\"searchhotel(ratingRef.value, cityRef.value)\">\r\n              <option value=\"\" disabled selected>Select hotel rating</option>\r\n              <option value=\"{{rating}}\" *ngFor=\"let rating of ratings\">{{rating}}-star</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"ratingRef.errors && (ratingRef.dirty || ratingRef.touched)\" class=\"error-message\">\r\n            <p>Rating is mandatory</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"hotels\">Hotel</label>\r\n            <select class=\"form-control forminputs\" name=\"hotelName\" #hotelRef=\"ngModel\" ngModel required>\r\n              <option value=\"\" disabled selected>Select hotel</option>\r\n              <option value=\"{{hotel}}\" *ngFor=\"let hotel of hotels\">{{hotel}}</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"hotelRef.errors && (hotelRef.dirty || hotelRef.touched)\" class=\"error-message\">\r\n            <p>Hotel is mandatory</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Room Type and Number of Rooms -->\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"roomtype\">Room Type</label>\r\n            <select class=\"form-control forminputs\" name=\"roomtype\" #roomtypeRef=\"ngModel\" ngModel required>\r\n              <option value=\"\" disabled selected>Select Room type</option>\r\n              <option value=\"Single\">Single Room</option>\r\n              <option value=\"Double\">Double Room</option>\r\n              <option value=\"Deluxe\">Deluxe Room</option>\r\n              <option value=\"Suite\">Suite</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"roomtypeRef.errors && (roomtypeRef.dirty || roomtypeRef.touched)\" class=\"error-message\">\r\n            <p>Room Type is mandatory</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"rooms\">Number of Rooms</label>\r\n            <input type=\"number\" name=\"rooms\" class=\"form-control forminputs\" #roomsRef=\"ngModel\" ngModel required [(ngModel)]=\"rooms\" (keyup)=\"getCost(hotelRef.value, roomtypeRef.value)\" />\r\n          </div>\r\n          <div *ngIf=\"roomsRef.errors && (roomsRef.dirty || roomsRef.touched)\" class=\"error-message\">\r\n            <p>Number of rooms is mandatory</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Estimated Cost -->\r\n      <div class=\"row frow\">\r\n        <div class=\"col-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"estimatedcost\">Estimated Cost</label>\r\n            <input type=\"text\" name=\"estimatedcost\" class=\"form-control forminputs\" #costRef=\"ngModel\" ngModel [(ngModel)]=\"cost\" required readonly />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Submit Button -->\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!accodForm.form.valid\">Add</button>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IHotel } from '../travelAway-interfaces/Hotel';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-add-hotel',\r\n  templateUrl: './add-hotel.component.html',\r\n  styleUrls: ['./add-hotel.component.css']\r\n})\r\nexport class AddHotelComponent implements OnInit {\r\n  status: boolean;\r\n  showDiv: boolean;\r\n  errorMsg: string;\r\n  msg: string;\r\n  userRole: string;\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Employee\") {\r\n      this.router.navigate(['/login/2']);\r\n    }\r\n  }\r\n  submithotelForm(form: NgForm) {\r\n\r\n    var hotel: IHotel = {\r\n      hotelName: form.value.hotelname,\r\n      hotelRating: parseInt(form.value.hotelType),\r\n      singleRoomPrice: parseInt(form.value.singleprice),\r\n      doubleRoomPrice: parseInt(form.value.doubleprice),\r\n      deluxeeRoomPrice: parseInt(form.value.deluxeprice),\r\n      suiteRoomPrice: parseInt(form.value.suiteprice),\r\n      city: form.value.city\r\n    }\r\n    console.log(hotel);\r\n    this.userService.addHotel(hotel).subscribe(\r\n      responseHotelStatus => {\r\n        this.status = responseHotelStatus;\r\n        this.showDiv = true;\r\n        if (this.status) {\r\n          this.msg = \"Hotel added successfully\";\r\n        } else {\r\n          this.msg = \"Hotel not added\";\r\n        }\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"AddHotel method executed successfully\")\r\n    );\r\n\r\n  }\r\n}\r\n","<app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div class=\"addhotel\">\r\n    <h1 class=\"form-title\">Add Hotel</h1>\r\n\r\n    <form #hotelForm=\"ngForm\" (ngSubmit)=\"submithotelForm(hotelForm)\">\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"hotelname\"\r\n              placeholder=\"Hotel Name\"\r\n              class=\"form-control forminputs\"\r\n              #hotelRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"hotelRef.errors && (hotelRef.dirty || hotelRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!hotelRef.errors.required\">\r\n              <p>Hotel Name is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <select\r\n              class=\"form-control forminputs\"\r\n              name=\"hotelType\"\r\n              #hoteltypeRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            >\r\n              <option value=\"\" disabled selected>Hotel Rating</option>\r\n              <option value=\"2\">2-star</option>\r\n              <option value=\"3\">3-star</option>\r\n              <option value=\"4\">4-star</option>\r\n              <option value=\"5\">5-star</option>\r\n            </select>\r\n          </div>\r\n          <div *ngIf=\"hoteltypeRef.errors && (hoteltypeRef.dirty || hoteltypeRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!hoteltypeRef.errors.required\">\r\n              <p>Hotel Rating is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"singleprice\"\r\n              placeholder=\"Single Room Price (in INR)\"\r\n              class=\"form-control forminputs\"\r\n              #singleRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"singleRef.errors && (singleRef.dirty || singleRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!singleRef.errors.required\">\r\n              <p>Price is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"doubleprice\"\r\n              placeholder=\"Double Room Price (in INR)\"\r\n              class=\"form-control forminputs\"\r\n              #doubleRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"doubleRef.errors && (doubleRef.dirty || doubleRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!doubleRef.errors.required\">\r\n              <p>Price is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"suiteprice\"\r\n              placeholder=\"Suite Price (in INR)\"\r\n              class=\"form-control forminputs\"\r\n              #suiteRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"suiteRef.errors && (suiteRef.dirty || suiteRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!suiteRef.errors.required\">\r\n              <p>Price is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"deluxeprice\"\r\n              placeholder=\"Deluxe Price (in INR)\"\r\n              class=\"form-control forminputs\"\r\n              #deluxeRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"deluxeRef.errors && (deluxeRef.dirty || deluxeRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!deluxeRef.errors.required\">\r\n              <p>Price is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row frow\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"city\"\r\n              placeholder=\"City Name\"\r\n              class=\"form-control forminputs\"\r\n              #cityRef=\"ngModel\"\r\n              ngModel\r\n              required\r\n            />\r\n          </div>\r\n          <div *ngIf=\"cityRef.errors && (cityRef.dirty || cityRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!cityRef.errors.required\">\r\n              <p>City is mandatory</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!hotelForm.form.valid\">Add</button>\r\n      <div *ngIf=\"showDiv\" class=\"submission-message\">\r\n        <br />\r\n        {{ msg }}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IVehicle } from '../travelAway-interfaces/Vehicle';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-vehicle',\r\n  templateUrl: './add-vehicle.component.html',\r\n  styleUrls: ['./add-vehicle.component.css']\r\n})\r\nexport class AddVehicleComponent implements OnInit {\r\n  msg: string;\r\n  status: boolean;\r\n  showDiv: boolean;\r\n  errorMsg: any;\r\n  userRole: string;\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Employee\") {\r\n      this.router.navigate(['/login/2']);\r\n    }\r\n  }\r\n  submitvehicleForm(form: NgForm) {\r\n    var vehicle: IVehicle = {\r\n      vehicleName: form.value.vehicleName,\r\n      vehicleType: form.value.vehicleType,\r\n      ratePerHour: parseInt(form.value.rateperhr),\r\n      ratePerKm: parseInt(form.value.rateperkm),\r\n      basePrice: parseInt(form.value.basePrice)\r\n    }\r\n    this.userService.addVehicle(vehicle).subscribe(\r\n      responseHotelStatus => {\r\n        this.status = responseHotelStatus;\r\n        this.showDiv = true;\r\n        if (this.status) {\r\n          this.msg = \"Vehicle added successfully\";\r\n        } else {\r\n          this.msg = \"Vehicle not added\";\r\n        }\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"AddVehicle method executed successfully\")\r\n    );\r\n  }\r\n}\r\n","<!-- <app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div class=\"addveh\">\r\n    <h1 style=\"color:red;text-shadow:2px 2px 2px black;margin-bottom:10px;\">Add Vehicle</h1>\r\n\r\n    <form #vehicleForm=\"ngForm\" (ngSubmit)=\"submitvehicleForm(vehicleForm)\">\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"vehicleName\" placeholder=\"Vehicle Name\" class=\"form-control forminputs\" #vehicleRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"vehicleRef.errors && (vehicleRef.dirty || vehicleRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!vehicleRef.errors.required\">\r\n          <p>&nbsp;Vehicle Name is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <select class=\"form-control forminputs\" name=\"vehicleType\" #vehicletypeRef=\"ngModel\" ngModel required>\r\n          <option value=\"\" disabled selected>Vehicle Type</option>\r\n          <option value=\"Two-Wheeler\">Two-Wheeler</option>\r\n          <option value=\"Four-Wheeler\">Four-Wheeler</option>\r\n          <option value=\"Mini-Bus\">Mini-Bus</option>\r\n        </select>\r\n      </div>\r\n      <div *ngIf=\"vehicletypeRef.errors && (vehicletypeRef.dirty || vehicletypeRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!vehicletypeRef.errors.required\">\r\n          <p>&nbsp;Vehicle Type is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <input type=\"number\" name=\"rateperhr\" placeholder=\"Rate per hour\" class=\"form-control forminputs\" #ratehrRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"ratehrRef.errors && (ratehrRef.dirty || ratehrRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!ratehrRef.errors.required\">\r\n          <p>&nbsp;Rate is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <input type=\"number\" name=\"rateperkm\" placeholder=\"Rate per km\" class=\"form-control forminputs\" #ratekmRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"ratekmRef.errors && (ratekmRef.dirty || ratekmRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!ratekmRef.errors.required\">\r\n          <p>&nbsp;Rate is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"number\" name=\"basePrice\" placeholder=\"Base Price\" class=\"form-control forminputs\" #basePriceRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"basePriceRef.errors && (basePriceRef.dirty || basePriceRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!basePriceRef.errors.required\">\r\n          <p>&nbsp;Base Price is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!vehicleForm.form.valid\">Add</button>\r\n      <div *ngIf=\"showDiv\" style=\"color:red;text-align:center;\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n -->\r\n\r\n\r\n\r\n <app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div class=\"addveh\">\r\n    <h1 class=\"form-title\">Add Vehicle</h1>\r\n\r\n    <form #vehicleForm=\"ngForm\" (ngSubmit)=\"submitvehicleForm(vehicleForm)\">\r\n      <!-- Vehicle Name -->\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"vehicleName\"\r\n          placeholder=\"Vehicle Name\"\r\n          class=\"form-control forminputs\"\r\n          #vehicleRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"vehicleRef.errors && (vehicleRef.dirty || vehicleRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!vehicleRef.errors.required\">\r\n          <p>Vehicle Name is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Vehicle Type -->\r\n      <div class=\"form-group\">\r\n        <select\r\n          class=\"form-control forminputs\"\r\n          name=\"vehicleType\"\r\n          #vehicletypeRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        >\r\n          <option value=\"\" disabled selected>Vehicle Type</option>\r\n          <option value=\"Two-Wheeler\">Two-Wheeler</option>\r\n          <option value=\"Four-Wheeler\">Four-Wheeler</option>\r\n          <option value=\"Mini-Bus\">Mini-Bus</option>\r\n        </select>\r\n      </div>\r\n      <div *ngIf=\"vehicletypeRef.errors && (vehicletypeRef.dirty || vehicletypeRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!vehicletypeRef.errors.required\">\r\n          <p>Vehicle Type is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Rate per Hour -->\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"rateperhr\"\r\n          placeholder=\"Rate per hour\"\r\n          class=\"form-control forminputs\"\r\n          #ratehrRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"ratehrRef.errors && (ratehrRef.dirty || ratehrRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!ratehrRef.errors.required\">\r\n          <p>Rate is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Rate per KM -->\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"rateperkm\"\r\n          placeholder=\"Rate per km\"\r\n          class=\"form-control forminputs\"\r\n          #ratekmRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"ratekmRef.errors && (ratekmRef.dirty || ratekmRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!ratekmRef.errors.required\">\r\n          <p>Rate is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Base Price -->\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"basePrice\"\r\n          placeholder=\"Base Price\"\r\n          class=\"form-control forminputs\"\r\n          #basePriceRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"basePriceRef.errors && (basePriceRef.dirty || basePriceRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!basePriceRef.errors.required\">\r\n          <p>Base Price is mandatory</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Submit Button -->\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!vehicleForm.form.valid\">Add</button>\r\n      <div *ngIf=\"showDiv\" class=\"submission-message\">\r\n        <br />\r\n        {{ msg }}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'TravelAwayApp';\r\n}\r\n","<!--<app-home></app-home>-->\r\n<!--<app-view-packages></app-view-packages>-->\r\n<!--<app-view-package-details></app-view-package-details>-->\r\n<!--<app-register></app-register>-->\r\n<!--<app-login></app-login>-->\r\n<!-- <app-breadcrumb></app-breadcrumb> -->\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ViewPackagesComponent } from './view-packages/view-packages.component';\r\nimport { ViewPackageDetailsComponent } from './view-package-details/view-package-details.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UserService } from '../travelAway-services/user-service/user.service';\r\nimport { PackageService } from '../travelAway-services/package-service/package.service';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { routing } from './app.routing';\r\nimport { CommonLayoutComponent } from './layouts/common-layout/common-layout.component';\r\nimport { UserLayoutComponent } from './layouts/user-layout/user-layout.component';\r\nimport { EmployeeLayoutComponent } from './layouts/employee-layout/employee-layout.component';\r\nimport { EditDetailsComponent } from './edit-details/edit-details.component';\r\nimport { CustomerCareComponent } from './customer-care/customer-care.component';\r\nimport { BookPackageComponent } from './book-package/book-package.component';\r\nimport { AccommodationComponent } from './accommodation/accommodation.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { AddVehicleComponent } from './add-vehicle/add-vehicle.component';\r\nimport { AddHotelComponent } from './add-hotel/add-hotel.component';\r\nimport { ViewBookingsComponent } from './view-bookings/view-bookings.component';\r\nimport { ViewHotelsComponent } from './view-hotels/view-hotels.component';\r\nimport { ViewVehiclesComponent } from './view-vehicles/view-vehicles.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \r\nimport { ToastrModule } from 'ngx-toastr'; \r\nimport { AuthInterceptor } from '../travelAway-services/auth.interceptor';\r\nimport { AuthService } from '../travelAway-services/auth-service/authservice';\r\nimport { ProtectedComponent } from './protected/protected.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { PopularPackagesComponent } from './popular-packages/popular-packages.component';\r\nimport { BreadcrumbComponent } from './shared/breadcrumb/breadcrumb.component';\r\nimport { MatDialogModule } from '@angular/material/dialog'; \r\nimport { MatButtonModule } from '@angular/material/button'; \r\nexport function tokenGetter() { // Ensure 'export' is here\r\n  return localStorage.getItem('authToken'); // Or your preferred storage key\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ViewPackagesComponent,\r\n    ViewPackageDetailsComponent,\r\n    HomeComponent,\r\n    CommonLayoutComponent,\r\n    UserLayoutComponent,\r\n    EmployeeLayoutComponent,\r\n    EditDetailsComponent,\r\n    CustomerCareComponent,\r\n    BookPackageComponent,\r\n    AccommodationComponent,\r\n    PaymentComponent,\r\n    AddVehicleComponent,\r\n    AddHotelComponent,\r\n    ViewBookingsComponent,\r\n    ViewHotelsComponent,\r\n    ViewVehiclesComponent,\r\n    ProtectedComponent,\r\n    PopularPackagesComponent,\r\n    BreadcrumbComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule,routing,BrowserAnimationsModule,\r\n    MatDialogModule,MatButtonModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 2000,\r\n      positionClass: 'toast-top-right',\r\n      preventDuplicates: true,\r\n    }),\r\n        JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        whitelistedDomains : ['localhost:5001'], // Replace with your backend domain\r\n        blacklistedRoutes: ['/api/auth/'], // Adjust as needed\r\n      },\r\n    }),\r\n  ],\r\n  providers: [PackageService, UserService,AuthService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ViewPackagesComponent } from './view-packages/view-packages.component';\r\nimport { ViewPackageDetailsComponent } from './view-package-details/view-package-details.component';\r\nimport { EditDetailsComponent } from './edit-details/edit-details.component';\r\nimport { CustomerCareComponent } from './customer-care/customer-care.component';\r\nimport { BookPackageComponent } from './book-package/book-package.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { AddVehicleComponent } from './add-vehicle/add-vehicle.component';\r\nimport { AddHotelComponent } from './add-hotel/add-hotel.component';\r\nimport { AccommodationComponent } from './accommodation/accommodation.component';\r\nimport { ViewBookingsComponent } from './view-bookings/view-bookings.component';\r\nimport { ViewHotelsComponent } from './view-hotels/view-hotels.component';\r\nimport { ViewVehiclesComponent } from './view-vehicles/view-vehicles.component';\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'home', component: HomeComponent ,data: { breadcrumb: 'Home' }},\r\n  { path: 'viewPackages', component: ViewPackagesComponent ,data: { breadcrumb: 'viewPackages' } },\r\n  { path: 'login/:loginRole', component: LoginComponent, data: { breadcrumb: 'login' } },\r\n  { path: 'register', component: RegisterComponent ,data: { breadcrumb: 'register' }},\r\n  { path: 'viewPackageDetails/:packageId/:packageName', component: ViewPackageDetailsComponent },\r\n  { path: 'viewPackageDetails/:packageId/:packageName', component: ViewPackageDetailsComponent },\r\n  { path: 'editDetails', component: EditDetailsComponent ,data: { breadcrumb: 'editDetails' }},\r\n  { path: 'custcare', component: CustomerCareComponent ,data: { breadcrumb: 'custcare' }},\r\n  { path: 'bookpkg/:packageId', component: BookPackageComponent },\r\n  { path: 'payment', component: PaymentComponent ,data: { breadcrumb: 'payment' }},\r\n  { path: 'addvehicle', component: AddVehicleComponent ,data: { breadcrumb: 'addvehicle' }},\r\n  { path: 'addhotel', component: AddHotelComponent ,data: { breadcrumb: 'addhotel' }},\r\n  { path: 'accommodation', component: AccommodationComponent ,data: { breadcrumb: 'accommodation' }},\r\n  { path: 'viewbookings', component: ViewBookingsComponent ,data: { breadcrumb: 'viewbookings' }},\r\n  { path: 'viewhotels', component: ViewHotelsComponent ,data: { breadcrumb: 'viewhotels' }},\r\n  { path: 'viewvehicles', component: ViewVehiclesComponent ,data: { breadcrumb: 'viewvehicles' }},\r\n  { path: '**', component: HomeComponent }\r\n];\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IBookPackage } from '../travelAway-interfaces/BookPackage';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-book-package',\r\n  templateUrl: './book-package.component.html',\r\n  styleUrls: ['./book-package.component.css']\r\n})\r\nexport class BookPackageComponent implements OnInit {\r\n  @ViewChild('confirmationDialogTemplate') confirmationDialogTemplate!: TemplateRef<any>;\r\n  bookingId: number;\r\n  packageId: number;\r\n  errorMsg: string;\r\n  userRole: string;\r\n  packageName: string;\r\n  dialogTitle: string = '';\r\n  dialogMessage: string = '';\r\n  dialogRef: any;\r\n  constructor(private packageService: PackageService, private router: Router,private route: ActivatedRoute,private tostr: ToastrService,private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.packageId = parseInt(this.route.snapshot.params['packageId']);\r\n    this.packageName = this.route.snapshot.queryParams['name'];\r\n    console.log(this.packageName);\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    \r\n  }\r\n  submitBookForm(form: NgForm) {\r\n    var email = sessionStorage.getItem(\"userName\");\r\n\r\n    var bookpkg: IBookPackage = {\r\n      contactNumber: parseInt(form.value.contactNumber), emailId: email, address: form.value.address, dateOfTravel: new Date(form.value.dateOfTravel), numberOfAdults: parseInt(form.value.adults),\r\n      numberOfChildren: parseInt(form.value.children), status: \"Booked\", packageId: this.packageId\r\n    }\r\n    console.log(bookpkg);\r\n    this.packageService.bookPackage(bookpkg).subscribe(\r\n        responseRegisterStatus => {\r\n        this.bookingId = responseRegisterStatus;\r\n        if (this.bookingId > 0) {\r\n          sessionStorage.setItem('bookingId', this.bookingId.toString());\r\n          this.tostr.success('Booking Done successfully', 'Success');\r\n          // this.dialogTitle = 'Continue to Accommodation?';\r\n          // this.dialogMessage = 'Do you want to proceed to book accommodation?';\r\n          // this.dialogRef = this.dialog.open(this.confirmationDialogTemplate,{width: '400px',panelClass: 'custom-dialog-top-center'});\r\n          // this.dialogRef.afterClosed().subscribe((result: boolean) => {\r\n          // if (result) {this.router.navigate(['/accommodation']);}\r\n          // else {this.router.navigate(['/viewbookings']);}\r\n    //});\r\n          \r\n          if (confirm(\"Booking Done successfully.Do you want to continue to book accommodation?\")) {\r\n            this.router.navigate(['/accommodation']);\r\n          } else {\r\n            this.router.navigate(['/viewbookings']);\r\n          }\r\n        } \r\n        else \r\n        { this.tostr.error('Booking Failed', 'Error');} \r\n        },\r\n        responseRegisterError => {\r\n          this.errorMsg = responseRegisterError;\r\n        },\r\n        () => console.log(\"BookingPackage method executed successfully\")\r\n    );\r\n\r\n  }\r\n  closeDialog(result: boolean) {\r\n    this.dialogRef.close(result);\r\n  }\r\n}\r\n","<app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <h2>{{packageName}}</h2>\r\n  <div class=\"bookpkg\">\r\n    <h1>Book Package</h1>\r\n    <form #bookForm=\"ngForm\" (ngSubmit)=\"submitBookForm(bookForm)\">\r\n      <div class=\"form-group\">\r\n        <input class\r\n          type=\"text\"\r\n          name=\"contactNumber\"\r\n          placeholder=\"Contact Number\"\r\n          class=\"form-control forminputs\"\r\n          #contactNumberRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n          pattern=\"[1-9]{1}[0-9]{9}\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"contactNumberRef.errors && (contactNumberRef.dirty || contactNumberRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!contactNumberRef.errors.required\">\r\n          <p>&nbsp;Contact is mandatory</p>\r\n        </div>\r\n        <div [hidden]=\"!contactNumberRef.errors.pattern\">\r\n          <p>&nbsp;Contact number should be of 10 digits, 0 not as first digit.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <textarea\r\n          name=\"address\"\r\n          placeholder=\"Residential Address\"\r\n          class=\"form-control forminputs\"\r\n          #addressRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <div *ngIf=\"addressRef.errors && (addressRef.dirty || addressRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!addressRef.errors.required\">\r\n          <p>&nbsp;Address is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"dateOfTravel\"\r\n          placeholder=\"Date of Travel\"\r\n          class=\"form-control forminputs\"\r\n          onfocus=\"(this.type='date')\"\r\n          #dotRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"dotRef.errors && (dotRef.dirty || dotRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!dotRef.errors.required\">\r\n          <p>&nbsp;Date of Travel is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"adults\"\r\n          placeholder=\"Number of adults\"\r\n          class=\"form-control forminputs\"\r\n          #adultRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"adultRef.errors && (adultRef.dirty || adultRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!adultRef.errors.required\">\r\n          <p>&nbsp;No. of Adults is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"children\"\r\n          placeholder=\"Number of children\"\r\n          class=\"form-control forminputs\"\r\n          #childrenRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        />\r\n      </div>\r\n      <div *ngIf=\"childrenRef.errors && (childrenRef.dirty || childrenRef.touched)\" class=\"error-message\">\r\n        <div [hidden]=\"!childrenRef.errors.required\">\r\n          <p>&nbsp;No. of children is mandatory</p>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!bookForm.form.valid\">Book now</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n  <ng-template #confirmationDialogTemplate>\r\n    <h2 mat-dialog-title>{{ dialogTitle }}</h2>\r\n      <div mat-dialog-content>\r\n        <p>{{ dialogMessage }}</p>\r\n      </div>\r\n  <div mat-dialog-actions>\r\n    <button mat-button (click)=\"closeDialog(false)\">No</button>\r\n    <button mat-button (click)=\"closeDialog(true)\">Yes</button>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { IcustCare } from '../travelAway-interfaces/CustomerCare';\r\n@Component({\r\n  selector: 'app-customer-care',\r\n  templateUrl: './customer-care.component.html',\r\n  styleUrls: ['./customer-care.component.css']\r\n})\r\nexport class CustomerCareComponent implements OnInit {\r\n  userRole: string;\r\n  showDiv: boolean = false;\r\n  msg: string;\r\n  status: boolean;\r\n  bookingId: number;\r\n  assignee: number;\r\n  errorMsg: string;\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n    this.bookingId = parseInt(sessionStorage.getItem('bookingId'));\r\n    this.getAssignee();\r\n  }\r\n  submitCompForm(form: NgForm) {\r\n\r\n    var query: IcustCare = {\r\n      bookingId: this.bookingId,\r\n      query: form.value.query,\r\n      queryStatus: \"Assigned\",\r\n      assignee: this.assignee\r\n    }\r\n    console.log(query);\r\n    this.userService.custCare(query).subscribe(\r\n      responsecustCareStatus => {\r\n        this.status = responsecustCareStatus;\r\n        if (this.status) {\r\n          this.showDiv = true;\r\n          this.msg = \"We will answer you soon\";\r\n        } else {\r\n          this.msg = \"Some error occured. Query not sent\";\r\n        }\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"CustomerCare method executed successfully\")\r\n    );\r\n  }\r\n\r\n  getAssignee() {\r\n    this.userService.getassignee().subscribe(\r\n      responseassignee => {\r\n        this.assignee = responseassignee;\r\n       // console.log(this.assignee, typeof (this.assignee));\r\n      },\r\n      responseassigneeError => {\r\n        this.assignee = null;\r\n      },\r\n      () => console.log(\"GetAssignee method executed successfully\")\r\n    );\r\n  }\r\n}\r\n","\r\n<app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div class=\"inner-content\">\r\n    <img src=\"./assets/customer-service.png\" alt=\"Customer Service Image\" />\r\n    <h1>Customer Care</h1>\r\n    <p>Thanks for writing to us</p>\r\n    <form #compForm=\"ngForm\" (ngSubmit)=\"submitCompForm(compForm)\">\r\n      <div class=\"form-group\">\r\n        <textarea\r\n          name=\"query\"\r\n          placeholder=\"Enter your complaint here\"\r\n          class=\"form-control forminputs\"\r\n          #compRef=\"ngModel\"\r\n          ngModel\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!compForm.form.valid\">Submit</button>\r\n      <div *ngIf=\"showDiv\" class=\"message\">\r\n        {{ msg }} !!\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Route, ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ICustomer } from '../travelAway-interfaces/Customer';\r\n@Component({\r\n  selector: 'app-edit-details',\r\n  templateUrl: './edit-details.component.html',\r\n  styleUrls: ['./edit-details.component.css']\r\n})\r\nexport class EditDetailsComponent implements OnInit {\r\n  msg: string;\r\n  emailId: string;\r\n  errorMsg: any;\r\n  status: boolean;\r\n  firstName: string;\r\n  lastName: string;\r\n  contact: number;\r\n  dob: Date;\r\n  Address: string;\r\n  userRole: string;\r\n  gender: string;\r\n  customer: ICustomer;\r\n  showDiv: boolean = true;\r\n  customerLayout: boolean = false;\r\n  commonLayout: boolean = false;\r\n  constructor(private router: Router, private userService: UserService, private ac: ActivatedRoute) {\r\n    this.emailId = sessionStorage.getItem(\"userName\");\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    } else if (this.userRole == \"Customer\") {\r\n      this.customerLayout = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.getCustomerDetails(this.emailId);\r\n\r\n  }\r\n\r\n  getCustomerDetails(emailId: string) {\r\n    this.userService.getCustomerById(emailId).subscribe(\r\n        responseRegisterStatus => {\r\n        this.customer = responseRegisterStatus;\r\n        this.firstName = this.customer['firstName'];\r\n        this.lastName = this.customer['lastName'];\r\n        this.gender = this.customer['gender'];\r\n        this.Address = this.customer['address'];\r\n        this.contact = this.customer['contactNumber'];\r\n        this.dob = this.customer['dateOfBirth'].substring(0,10);\r\n        console.log(this.firstName,this.lastName);\r\n        },\r\n        responseRegisterError => {\r\n          this.errorMsg = responseRegisterError;\r\n        },\r\n        () => console.log(\"cutomer details method executed successfully\")\r\n      );\r\n  }\r\n\r\n  SubmitForm(form: NgForm) {\r\n    this.userService.updateUserDetails(form.value.firstName, form.value.lastName, this.emailId,\r\n      null, parseInt(form.value.contactNumber), form.value.address, form.value.gender, new Date(form.value.dateOfBirth), 1).subscribe(\r\n        responseUpdateStatus => {\r\n          this.status = responseUpdateStatus;\r\n          this.showDiv = true;\r\n          if (this.status == true) {\r\n            this.msg = \"Updation Successfully\";\r\n            \r\n\r\n          } else {\r\n            this.msg = \"Not able to update\";\r\n          }\r\n        },\r\n        responseUpdateError => {\r\n          this.errorMsg = responseUpdateError;\r\n        },\r\n        () => console.log(\"Updated method executed successfully\")\r\n      );\r\n  }\r\n\r\n}\r\n\r\n","<div *ngIf=\"commonLayout\">\r\n  <app-common-layout></app-common-layout>\r\n</div>\r\n<div *ngIf=\"customerLayout\">\r\n  <app-user-layout></app-user-layout>\r\n</div>\r\n<div class=\"content\">\r\n  <div class=\"signup\">\r\n    <h1 style=\"text-align:left\">Edit Details</h1>\r\n    <form #updateForm=\"ngForm\" (ngSubmit)=\"SubmitForm(updateForm)\">\r\n      <div class=\"form-group\" style=\"margin-top:20px;\">\r\n        <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" value=\"{{firstName}}\" class=\"form-control forminputs\" #firstNameRef=\"ngModel\" ngModel required pattern=\"[a-zA-z]{1,}\" />\r\n      </div>\r\n      <div *ngIf=\"firstNameRef.errors && (firstNameRef.dirty || firstNameRef.touched)\" style=\"text-align:left; color:red;\">\r\n        <div [hidden]=\"!firstNameRef.errors.required\">\r\n          <p>&nbsp;First Name is mandatory</p>\r\n        </div>\r\n        <div [hidden]=\"!firstNameRef.errors.pattern\">\r\n          <p>&nbsp;First Name is not entered in proper format</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\"  value=\"{{lastName}}\"  class=\"form-control forminputs\" #lastNameRef=\"ngModel\" ngModel required pattern=\"[a-zA-z]{1,}\" />\r\n      </div>\r\n      <div *ngIf=\"lastNameRef.errors && (lastNameRef.dirty || lastNameRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!lastNameRef.errors.required\">\r\n          <p>&nbsp;Last Name is mandatory</p>\r\n        </div>\r\n        <div [hidden]=\"!lastNameRef.errors.pattern\">\r\n          <p>&nbsp;Last Name is not entered in proper format</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <select class=\"form-control\" name=\"gender\" #genderRef=\"ngModel\"  value=\"{{gender}}\" ngModel required>\r\n          <option value=\"\" disabled selected>Gender</option>\r\n          <option value=\"M\">Male</option>\r\n          <option value=\"F\">Female</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"contactNumber\" placeholder=\"Contact Number\" value=\"{{contact}}\" class=\"form-control forminputs\" #contactNumberRef=\"ngModel\" ngModel required pattern=\"[1-9]{1}[0-9]{9}\" />\r\n      </div>\r\n      <div *ngIf=\"contactNumberRef.errors && (contactNumberRef.dirty || contactNumberRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!contactNumberRef.errors.required\">\r\n          <p>&nbsp;Contact is mandatory</p>\r\n        </div>\r\n        <div [hidden]=\"!contactNumberRef.errors.pattern\">\r\n          <p>&nbsp;Contact number should be of 10 digits, 0 not as first digit.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"dateOfBirth\" placeholder=\"Date of birth\" value=\"{{dob}}\" class=\"form-control forminputs\" onfocus=\"(this.type='date')\" #dobRef=\"ngModel\" ngModel required />\r\n      </div>\r\n      <div *ngIf=\"dobRef.errors && (dobRef.dirty || dobRef.touched)\" style=\"text-align:left; color:red;\">\r\n        <div [hidden]=\"!dobRef.errors.required\">\r\n          <p>&nbsp;Date of birth is mandatory</p>\r\n\r\n          <!--<p *ngIf=\"dobRef.errors?.dateError &&  dobRef.dirty\" class=\"alert alert-danger\">\r\n            {{dobRef.errors?.dateError.message}}\r\n          </p>-->\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <textarea placeholder=\"Address\" name=\"address\" class=\"form-control forminputs\" value=\"{{Address}}\" #addressRef=\"ngModel\" ngModel required></textarea>\r\n      </div>\r\n      <div *ngIf=\"addressRef.errors && (addressRef.dirty || addressRef.touched)\" style=\"text-align:left;color:red;\">\r\n        <div [hidden]=\"!addressRef.errors.required\">\r\n          <p>&nbsp;Address is mandatory</p>\r\n        </div>\r\n\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\">Update</button>\r\n      <div *ngIf=\"showDiv\" style=\"color:red;text-align:center;\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userRole: string;\r\n  customerLayout: boolean = false;\r\n  commonLayout: boolean = false;\r\n  employeeLayout: boolean = false;\r\n  constructor() {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole == \"Customer\") {\r\n      this.customerLayout = true;\r\n    }\r\n    else if (this.userRole == \"Employee\") {\r\n      this.employeeLayout = true;\r\n    }\r\n    else {\r\n      this.commonLayout = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"commonLayout\">\r\n  <app-common-layout></app-common-layout>\r\n  <app-breadcrumb></app-breadcrumb>\r\n</div>\r\n<div *ngIf=\"customerLayout\">\r\n  <app-user-layout></app-user-layout>\r\n  <app-breadcrumb></app-breadcrumb>\r\n</div>\r\n<div *ngIf=\"employeeLayout\">\r\n  <app-employee-layout></app-employee-layout>\r\n  <app-breadcrumb></app-breadcrumb>\r\n</div>\r\n<div class=\"content\">\r\n  <div id=\"popular\">\r\n    <app-popular-packages></app-popular-packages>\r\n  </div>\r\n  <div class=\"inner-content\">\r\n    <h1>TravelAway</h1>\r\n    <button routerLink=\"/viewPackages\" *ngIf=\"(customerLayout||commonLayout)\">View Packages</button>\r\n    <button routerLink=\"/addhotel\" *ngIf=\"(employeeLayout)\">Add Hotel</button>\r\n  </div>\r\n  <div id=\"footer\">\r\n    <h2>Explore this beautiful world with us</h2>\r\n    <div id=\"social_media\">\r\n      <i style=\"font-size:50px\" class=\"fa\">&#xf082;</i>\r\n      <i style=\"font-size:50px\" class=\"fa\">&#xf16d;</i>\r\n      <i style=\"font-size:50px\" class=\"fa\">&#xf081;</i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute,RouterModule  } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-common-layout',\r\n  templateUrl: './common-layout.component.html',\r\n  styleUrls: ['./common-layout.component.css'],\r\n  \r\n})\r\nexport class CommonLayoutComponent implements OnInit {\r\n  userType: '1' | '2' | '' = '';  // '1' for Customer, '2' for Employee\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to param changes to handle dynamic navigation like /login/1 or /login/2\r\n    this.route.paramMap.subscribe(params => {\r\n      this.userType = (params.get('loginRole') as '1' | '2') || '';\r\n      this.updateForm();\r\n      //console.log('User type:', this.userType);\r\n    });\r\n  }\r\n\r\n  updateForm(): void {\r\n    // Logic to handle changes in form based on user type\r\n    if (this.userType === '1') {\r\n      // Configure UI or form fields for Customer Login\r\n      console.log('Displaying Customer Login');\r\n    } else if (this.userType === '2') {\r\n      // Configure UI or form fields for Employee Login\r\n      console.log('Displaying Employee Login');\r\n    } else {\r\n      // Optional fallback\r\n      console.warn('Unknown login type');\r\n    }\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../assets/logo.png\" alt=\"Logo\" width=\"40\" height=\"40\">TravelAway</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbarNav\"\r\n      aria-controls=\"navbarNav\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav ms-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/viewPackages\" routerLinkActive=\"active\">Packages</a>\r\n        </li>\r\n\r\n        \r\n        <li class=\"nav-item dropdown\">\r\n          <a\r\n            class=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"loginDropdown\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Login\r\n          </a>\r\n          <ul class=\"dropdown-menu\" aria-labelledby=\"loginDropdown\">\r\n            <li><a class=\"dropdown-item\" [routerLink]=\"['/login', 1]\">Customer Login</a></li>\r\n            <li><a class=\"dropdown-item\" [routerLink]=\"['/login', 2]\">Employee Login</a></li>\r\n          </ul>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/register\" routerLinkActive=\"active\">Signup</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-employee-layout',\r\n  templateUrl: './employee-layout.component.html',\r\n  styleUrls: ['./employee-layout.component.css']\r\n})\r\nexport class EmployeeLayoutComponent implements OnInit {\r\n  userRole: string;\r\n  constructor(private router: Router) { this.userRole = sessionStorage.getItem('userRole');}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  logOut() {\r\n    sessionStorage.removeItem('userName');\r\n    sessionStorage.removeItem('userRole');\r\n    this.router.navigate(['/login/2']);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" id=\"nbar\">\r\n  <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../assets/logo.png\" alt=\"Logo\" width=\"40\" height=\"40\">TravelAway</a>\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarNavAltMarkup\"\r\n    aria-controls=\"navbarNavAltMarkup\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\" id=\"nitems\">\r\n      <a\r\n        class=\"nav-item nav-link\"\r\n        routerLink=\"/\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        Home\r\n      </a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/addhotel\" routerLinkActive=\"active\">AddHotel</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/addvehicle\" routerLinkActive=\"active\">AddVehicle</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/viewhotels\" routerLinkActive=\"active\">ViewHotels</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/viewvehicles\" routerLinkActive=\"active\">ViewVehicles</a>\r\n      <a class=\"nav-item nav-link\" href=\"#\" (click)=\"logOut()\">Logout</a>\r\n    </div>\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-user-layout',\r\n  templateUrl: './user-layout.component.html',\r\n  styleUrls: ['./user-layout.component.css']\r\n})\r\nexport class UserLayoutComponent implements OnInit {\r\n  userRole: string;\r\n  constructor(private router: Router) { this.userRole = sessionStorage.getItem('userRole'); }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  logOut() {\r\n    sessionStorage.removeItem('userName');\r\n    sessionStorage.removeItem('userRole');\r\n    this.router.navigate(['/login/1']);\r\n  }\r\n}\r\n","\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" id=\"nbar\">\r\n  <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../assets/logo.png\" alt=\"Logo\" width=\"40\" height=\"40\">TravelAway</a>\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarNavAltMarkup\"\r\n    aria-controls=\"navbarNavAltMarkup\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\" id=\"nitems\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Home</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/viewPackages\" routerLinkActive=\"active\">ViewPackages</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/editDetails\" routerLinkActive=\"active\">EditProfile</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/viewbookings\" routerLinkActive=\"active\">View Bookings</a>\r\n      <a class=\"nav-item nav-link\" href=\"#\" (click)=\"logOut()\">Logout</a>\r\n    </div>\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router,ActivatedRoute,ParamMap} from '@angular/router';\r\nimport { UserService } from \"../../travelAway-services/user-service/user.service\";\r\nimport { Subscription } from 'rxjs'; \r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/travelAway-services/auth-service/authservice';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  status: number;\r\n  errorMsg: string;\r\n  msg: string;\r\n  showDiv: boolean = false;\r\n  name: string;\r\n  loginRole: number;\r\n  rolename: string;\r\n  routeSubscription: Subscription;\r\n  constructor(\r\n    private userService: UserService, \r\n    private router: Router, \r\n    private route: ActivatedRoute,\r\n    private toastr:ToastrService,\r\n    private authService: AuthService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.routeSubscription = this.route.paramMap.subscribe((params: ParamMap) => {\r\n        const role = params.get('loginRole');\r\n        if (role === '1') {\r\n          this.loginRole = 1;\r\n          this.rolename = \"Customer\";\r\n        } else if (role === '2') {\r\n          this.loginRole = 2;\r\n          this.rolename = \"Employee\";\r\n        } else {\r\n          this.loginRole = 0;\r\n          this.rolename = '';\r\n        }\r\n        console.log('Login Role Updated:', this.loginRole, 'Rolename:', this.rolename);\r\n        // You might want to update any UI elements that depend on rolename here\r\n      });\r\n  }\r\n  submitLoginForm(form: NgForm) {\r\n    console.log(form.value.email, form.value.password);\r\n \r\n      this.authService.login(form.value.email, form.value.password,this.loginRole).subscribe({\r\n      next: (response) => {\r\n        this.showDiv = true;\r\n          this.toastr.success(\"Login Successful\");\r\n          this.msg = \"Login Successful\";\r\n          const role = this.authService.getRole();\r\n          //console.log('User Role:', role);\r\n          if(role == \"Customer\")\r\n          {\r\n          sessionStorage.setItem('userName', form.value.email);\r\n          sessionStorage.setItem('userRole', \"Customer\");\r\n          }\r\n          else if(role == \"Employee\")\r\n          {\r\n            sessionStorage.setItem('userName', form.value.email);\r\n            sessionStorage.setItem('userRole', \"Employee\");\r\n          }\r\n          this.router.navigate(['/home']);\r\n          console.log('Login successful', response);\r\n      },\r\n      error: (error) => {\r\n        console.error('Login failed', error);\r\n        this.errorMsg= 'Invalid username or password.';\r\n      },\r\n    });\r\n\r\n\r\n    // this.userService.validateCredentials(form.value.email, form.value.password, this.loginRole).subscribe(\r\n    //   responseLoginStatus => {\r\n    //     this.status = responseLoginStatus;\r\n    //     this.showDiv = true;\r\n    //     if (this.status==1) {\r\n    //       this.toastr.success(\"Login Successful\");\r\n    //       this.msg = \"Login Successful\";\r\n    //       sessionStorage.setItem('userName', form.value.email);\r\n    //       sessionStorage.setItem('userRole', \"Customer\");\r\n    //       this.router.navigate(['/home']);\r\n    //     }\r\n    //     else if (this.status == 2) {\r\n    //       this.toastr.success(\"Login Successful\");\r\n    //       this.msg = \"Login Successful\";\r\n    //       sessionStorage.setItem('userName', form.value.email);\r\n    //       sessionStorage.setItem('userRole', \"Employee\");\r\n    //       this.router.navigate(['/home']);\r\n    //     }\r\n      //   else {\r\n      //     this.toastr.success(\"Try again with valid credentials.\");\r\n      //     this.msg = \"Try again with valid credentials.\";\r\n      //   }\r\n      // },\r\n      // responseLoginError => {\r\n      //   this.errorMsg = responseLoginError;\r\n      // },\r\n    //   () => console.log(\"SubmitLoginForm method executed successfully\")\r\n    // );\r\n  }\r\n}\r\n","<app-common-layout></app-common-layout>\r\n<div class=\"content\">\r\n  <div class=\"login\">\r\n    <h1>{{rolename}} <span style=\"font-size:40px;\"> Login</span></h1>\r\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"submitLoginForm(loginForm)\">\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email address</label>\r\n        <input type=\"email\" id=\"email\" placeholder=\"Your Email\" name=\"email\" class=\"form-control forminputs\" #emailRef=\"ngModel\" pattern='^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$'  ngModel required />\r\n        <div *ngIf=\"emailRef.errors && (emailRef.dirty || emailRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!emailRef.errors.required\">\r\n            Email address is required.\r\n          </div>\r\n          <div [hidden]=\"!emailRef.errors.pattern\">\r\n            Please enter a valid email address format.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" placeholder=\"Your Password\" name=\"password\" minlength=\"8\" maxlength=\"16\" class=\"form-control forminputs\" #passwordRef=\"ngModel\" ngModel required />\r\n        <div *ngIf=\"passwordRef.errors && (passwordRef.dirty || passwordRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!passwordRef.errors.required\">\r\n            Password is required.\r\n          </div>\r\n          <div [hidden]=\"!passwordRef.errors.minlength || !passwordRef.errors.maxlength\">\r\n            Password must be between 8 and 16 characters.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group form-check\">\r\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberMe\" name=\"rememberMe\" ngModel>\r\n        <label class=\"form-check-label\" for=\"rememberMe\">Remember me</label>\r\n      </div>\r\n\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!loginForm.form.valid\">Sign In</button>\r\n\r\n      <div class=\"form-group forgot-password\">\r\n        <a routerLink=\"/forgot-password\">Forgot your password?</a>\r\n      </div>\r\n\r\n      <div *ngIf=\"showDiv\" class=\"login-message\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n\r\n      </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { UserService } from '../../travelAway-services/user-service/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IPayment } from '../travelAway-interfaces/Payment';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.css']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  cost: string;\r\n  userRole: string;\r\n  bookingId: string;\r\n    status: boolean;\r\n    showDiv: boolean;\r\n    msg: string;\r\n  errorMsg: any;\r\n  total: number;\r\n  constructor(private userService: UserService,private router: Router, private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.bookingId = sessionStorage.getItem('bookingId');\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n    this.getTotal(this.bookingId);\r\n  }\r\n\r\n  //filldefaultfields(id: number, cost: string) {\r\n  //  this.bookingId = id;\r\n  //  this.cost = cost;\r\n  //}\r\n\r\n  getTotal(bookingid:string) {\r\n    this.userService.getTotal(bookingid).subscribe(\r\n      responseTotalStatus => {\r\n        this.total = responseTotalStatus;\r\n       \r\n      },\r\n      responseTotalError => {\r\n        this.errorMsg = responseTotalError;\r\n      },\r\n      () => console.log(\"GetTotal method executed successfully\")\r\n    );\r\n  }\r\n  submitpayForm(form: NgForm) {\r\n\r\n    var pay: IPayment = {\r\n      bookingId: parseInt(form.value.bookid),\r\n      paymentStatus: \"Confirmed\",\r\n      totalAmount: parseInt(form.value.amount),\r\n    \r\n    }\r\n    this.userService.makePayment(pay).subscribe(\r\n      responseHotelStatus => {\r\n        this.status = responseHotelStatus;\r\n        this.showDiv = true;\r\n        if (this.status) {\r\n          alert(\"Payment Done successfully\");\r\n          sessionStorage.removeItem('bookingId');\r\n          this.router.navigate(['/']);\r\n        } else {\r\n          this.msg = \"Payment not done.Try Again\";\r\n        }\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"AddVehicle method executed successfully\")\r\n    );\r\n\r\n\r\n  }\r\n}\r\n","<app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div class=\"inner-content\">\r\n    <h1 style=\"color:red;text-shadow:2px 2px 2px black;\">Payment Gateway</h1>\r\n    <p>Complete the payment to confirm booking</p>\r\n    <form #payForm=\"ngForm\" (ngSubmit)=\"submitpayForm(payForm)\">\r\n      <label for=\"bookid\" style=\"text-align:left;width:70%;margin:0 auto;margin-bottom:2px;\">Booking ID</label>\r\n      <div class=\"form-group\">\r\n        <input type=\"number\" name=\"bookid\" class=\"form-control forminputs\" #bookRef=\"ngModel\" ngModel [(ngModel)]=\"bookingId\" readonly />\r\n      </div>\r\n      <label for=\"amount\" style=\"text-align:left;width:70%;margin:0 auto;margin-bottom:2px;\">Total Amount</label>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" name=\"amount\" value=\"{{cost}}\" class=\"form-control forminputs\" #amountRef=\"ngModel\" ngModel [(ngModel)]=\"total\" readonly />\r\n      </div>\r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!payForm.form.valid\">Pay</button>\r\n      <div *ngIf=\"showDiv\" style=\"color:red;text-align:center;\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PopularPackage } from '../models/popular-package.model';\r\nimport { PackageService } from \"../../travelAway-services/package-service/package.service\";\r\n@Component({\r\n  selector: 'app-popular-packages',\r\n  templateUrl: './popular-packages.component.html',\r\n  styleUrls: ['./popular-packages.component.css']\r\n})\r\n\r\nexport class PopularPackagesComponent implements OnInit {\r\n  popularPackages: PopularPackage[] = [];\r\n  errorMsg: string;\r\n  showMsg: boolean;\r\n  imagePath: string;\r\n  topPackages: PopularPackage[] = [];\r\n  constructor(private packageService: PackageService,) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.loadPopularPackages();\r\n    if (this.popularPackages == null) {\r\n      this.showMsg = true;\r\n    }\r\n    this.imagePath = \"src/assets/\"\r\n  }\r\n    loadPopularPackages() {\r\n    this.packageService.getPackages().subscribe(\r\n      responseGet => {\r\n        this.showMsg = false;\r\n        this.popularPackages = responseGet;\r\n        this.topPackages = this.popularPackages.slice(0, 5);\r\n      },\r\n      resonseError => {\r\n        this.showMsg = true\r\n        this.popularPackages = null\r\n        this.errorMsg = resonseError\r\n      },\r\n      () => console.log(\"GetPackage method executed\")\r\n    )\r\n  }\r\n\r\n  // loadPopularPackages() {\r\n  //       this.popularPackages = [\r\n  //     { id: 1, name: 'Romantic Bali', destination: 'Bali, Indonesia', price: 500, imageUrl: 'assets/bali.jpg' },\r\n  //     { id: 2, name: 'Swiss Adventure', destination: 'Switzerland', price: 1000, imageUrl: 'assets/switzerland.jpg' }\r\n  //   ];\r\n  // }\r\n\r\n}\r\n","<div class=\"package-container\">\r\n  <div *ngFor=\"let package of topPackages\" class=\"package-card\">\r\n    <img src=\"{{package.imagePath}}\" alt=\"{{package.name}}\" />\r\n    <h5 id=\"h5\">{{package.packageName}}</h5>\r\n    <!-- <p>{{package.}}</p>\r\n    <span>${{package.price}}</span> -->\r\n  </div>\r\n</div>","// protected.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-protected',\r\n  template: `\r\n    <h2>Protected Data</h2>\r\n    <div *ngIf=\"data\">{{ data.message }} - User: {{ data.user }}</div>\r\n    <div *ngIf=\"error\">{{ error }}</div>\r\n  `,\r\n})\r\nexport class ProtectedComponent implements OnInit {\r\n  data: any;\r\n  error: any;\r\n  private apiUrl = 'https://localhost:44393/api/TravelAway'; // Replace with your .NET API URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n    this.http.get(this.apiUrl).subscribe({\r\n      next: (response) => (this.data = response),\r\n      error: (err) => (this.error = 'Failed to load protected data.'),\r\n    });\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from \"../../travelAway-services/user-service/user.service\";\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  msg: string;\r\n  showDiv: boolean;\r\n  errorMsg: string;\r\n  status:number;\r\n  constructor(private userService: UserService,private formBuilder: FormBuilder, private router: Router) {\r\n    //this.registerForm = this.formBuilder.group({\r\n    //  firstName: ['', [Validators.required, Validators.pattern(\"[a-zA-z]{1,}\")]],\r\n    //  lastName: ['', [Validators.required, Validators.pattern(\"[a-zA-z]{1,}\")]],\r\n    //  emailId: ['', [Validators.required, Validators.pattern(\"^[a-zA-z0-9+_.-]+@[a-zA-z0-9+_.-]+$\")]],\r\n    //  gender: ['', Validators.required],\r\n    //  password: ['', [Validators.required,Validators.maxLength(16)]],\r\n    //  confirmpassword: ['', Validators.required, Validators.minLength(8), Validators.maxLength(16)],\r\n    //  dateOfbirth: ['', [Validators.required, checkDate]],\r\n    //  address: ['', Validators.required],\r\n    //  contactNumber: ['', [Validators.required, Validators.maxLength(10), Validators.pattern(\"[1-9]{1}[0-9]{9}\")]]\r\n    //});\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  SubmitForm(form: NgForm) {\r\n    var email = form.value.emailId;\r\n    this.userService.addUserDetails(form.value.firstName, form.value.lastName, form.value.emailId,\r\n      form.value.password, parseInt(form.value.contactNumber), form.value.address, form.value.gender, new Date(\"1999-08-23\"),1).subscribe(\r\n      responseRegisterStatus => {\r\n        this.status = responseRegisterStatus;\r\n        this.showDiv = true;\r\n        if (this.status==1) {\r\n          this.msg = \"Registered Successfully\";\r\n          sessionStorage.setItem('userName', email);\r\n          sessionStorage.setItem('userRole', \"Customer\");\r\n          this.router.navigate(['/home']);\r\n        } else {\r\n          this.msg = \"Not able to register\";\r\n        }\r\n      },\r\n      responseRegisterError => {\r\n        this.errorMsg = responseRegisterError;\r\n      },\r\n      () => console.log(\"SubmitLoginForm method executed successfully\")\r\n    );\r\n  }\r\n}\r\nfunction checkDate(control: FormControl) {\r\n  var currentDate = new Date();\r\n  var givenDate = new Date(control.value)\r\n  console.log(currentDate);\r\n  console.log(givenDate);\r\n  if (givenDate <= currentDate || givenDate == null) {\r\n    return null\r\n  }\r\n  else {\r\n    return {\r\n      dateError: {\r\n        message: \"Enter a date less than today's date\"\r\n      }\r\n    };\r\n  }\r\n}\r\n","<app-common-layout></app-common-layout>\r\n<div class=\"content\">\r\n  <div class=\"signup\">\r\n    <h1>Signup</h1>\r\n    <form #signupForm=\"ngForm\" (ngSubmit)=\"SubmitForm(signupForm)\">\r\n      <div class=\"name-group\">\r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input type=\"text\" id=\"firstName\" placeholder=\"Enter your first name\" name=\"firstName\" class=\"form-control forminputs\" #firstNameRef=\"ngModel\" ngModel required pattern=\"[a-zA-z]{1,}\" />\r\n        <div *ngIf=\"firstNameRef.errors && (firstNameRef.dirty || firstNameRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!firstNameRef.errors.required\">First Name is required.</div>\r\n          <div [hidden]=\"!firstNameRef.errors.pattern\">First Name should only contain letters.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input type=\"text\" id=\"lastName\" placeholder=\"Enter your last name\" name=\"lastName\" class=\"form-control forminputs\" #lastNameRef=\"ngModel\" ngModel required pattern=\"[a-zA-z]{1,}\" />\r\n        <div *ngIf=\"lastNameRef.errors && (lastNameRef.dirty || lastNameRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!lastNameRef.errors.required\">Last Name is required.</div>\r\n          <div [hidden]=\"!lastNameRef.errors.pattern\">Last Name should only contain letters.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"emailId\">Email address</label>\r\n        <input type=\"email\" id=\"emailId\" placeholder=\"Enter your email address\" name=\"emailId\" class=\"form-control forminputs\" #emailRef=\"ngModel\" ngModel required pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\" />\r\n        <div *ngIf=\"emailRef.errors && (emailRef.dirty || emailRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!emailRef.errors.required\">Email address is required.</div>\r\n          <div [hidden]=\"!emailRef.errors.pattern\">Please enter a valid email address format.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" placeholder=\"Enter your password\" name=\"password\" class=\"form-control forminputs\" #passwordRef=\"ngModel\" minlength=\"8\" maxlength=\"16\" ngModel required />\r\n        <div *ngIf=\"passwordRef.errors && (passwordRef.dirty || passwordRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!passwordRef.errors.required\">Password is required.</div>\r\n          <div [hidden]=\"!passwordRef.errors.minlength || !passwordRef.errors.maxlength\">Password must be between 8 and 16 characters.</div>\r\n        </div>\r\n        </div>\r\n      \r\n        <div class=\"form-group\">\r\n          <label for=\"gender\">Gender</label>\r\n          <select class=\"form-control forminputs\" id=\"gender\" name=\"gender\" #genderRef=\"ngModel\" ngModel required>\r\n            <option value=\"\" disabled selected>Select your gender</option>\r\n            <option value=\"M\">Male</option>\r\n            <option value=\"F\">Female</option>\r\n            <option value=\"O\">Other</option>\r\n          </select>\r\n          <div *ngIf=\"genderRef.errors && (genderRef.dirty || genderRef.touched)\" class=\"error-message\">\r\n            <div [hidden]=\"!genderRef.errors.required\">Please select your gender.</div>\r\n          </div>\r\n        </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\">Confirm Password</label>\r\n        <input type=\"password\" id=\"confirmPassword\" placeholder=\"Confirm your password\" name=\"cpassword\" class=\"form-control forminputs\" #confirmPasswordRef=\"ngModel\" ngModel required />\r\n        <div *ngIf=\"confirmPasswordRef.errors && (confirmPasswordRef.dirty || confirmPasswordRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!confirmPasswordRef.errors.required\">Confirm Password is required.</div>\r\n          <div [hidden]=\"confirmPasswordRef.value !== passwordRef.value && !confirmPasswordRef.errors?.required\">Passwords do not match.</div>\r\n        </div>\r\n      </div>\r\n    \r\n      <div class=\"form-group\">\r\n        <label for=\"contactNumber\">Contact Number</label>\r\n        <input type=\"text\" id=\"contactNumber\" placeholder=\"Enter your contact number\" name=\"contactNumber\" class=\"form-control forminputs\" #contactNumberRef=\"ngModel\" ngModel required pattern=\"[1-9]{1}[0-9]{9}\" />\r\n        <div *ngIf=\"contactNumberRef.errors && (contactNumberRef.dirty || contactNumberRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!contactNumberRef.errors.required\">Contact number is required.</div>\r\n          <div [hidden]=\"!contactNumberRef.errors.pattern\">Contact number should be 10 digits and not start with 0.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"dateOfBirth\">Date of Birth</label>\r\n        <input type=\"date\" id=\"dateOfBirth\" name=\"dateOfBirth\" placeholder=\"Select your date of birth\" class=\"form-control forminputs\" #dobRef=\"ngModel\" ngModel required />\r\n        <div *ngIf=\"dobRef.errors && (dobRef.dirty || dobRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!dobRef.errors.required\">Date of birth is required.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"address\">Address</label>\r\n        <textarea id=\"address\" placeholder=\"Enter your address\" name=\"address\" class=\"form-control forminputs\" #addressRef=\"ngModel\" ngModel required></textarea>\r\n        <div *ngIf=\"addressRef.errors && (addressRef.dirty || addressRef.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!addressRef.errors.required\">Address is required.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group form-check\">\r\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"termsAndConditions\" name=\"termsAndConditions\" ngModel required>\r\n        <label class=\"form-check-label\" for=\"termsAndConditions\">I agree to the <a href=\"/terms\" target=\"_blank\">Terms and Conditions</a> and <a href=\"/privacy\" target=\"_blank\">Privacy Policy</a></label>\r\n        <div *ngIf=\"signupForm.controls['termsAndConditions']?.invalid && (signupForm.controls['termsAndConditions']?.dirty || signupForm.controls['termsAndConditions']?.touched)\" class=\"error-message\">\r\n          <div [hidden]=\"!signupForm.controls['termsAndConditions']?.errors?.required\">You must agree to the terms and conditions.</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <button type=\"submit\" id=\"formsubmit\" [disabled]=\"!signupForm.form.valid\">Sign Up</button>\r\n      \r\n      <div *ngIf=\"showDiv\" class=\"signup-message\">\r\n        <br />\r\n        {{msg}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.css'],\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n  breadcrumbs: Array<{ label: string; url: string }> = [];\r\n\r\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {}\r\n\r\n  // ngOnInit(): void {\r\n  //   this.router.events\r\n  //     .pipe(\r\n  //       filter((event) => event instanceof NavigationEnd),\r\n  //       map(() => this.buildBreadcrumb(this.activatedRoute.root))\r\n  //     )\r\n  //     .subscribe((breadcrumbs) => {\r\n  //       this.breadcrumbs = breadcrumbs;\r\n  //     });\r\n  // }\r\nngOnInit(): void {\r\n  this.router.events\r\n    .pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map(() => this.buildBreadcrumb(this.activatedRoute.root))\r\n    )\r\n    .subscribe((breadcrumbs) => {\r\n      console.log('Breadcrumbs:', breadcrumbs); // Debugging\r\n      this.breadcrumbs = breadcrumbs;\r\n    });\r\n}\r\n  private buildBreadcrumb(route: ActivatedRoute, url: string = '', breadcrumbs: Array<{ label: string; url: string }> = []): Array<{ label: string; url: string }> {\r\n    const children: ActivatedRoute[] = route.children;\r\n\r\n    if (children.length === 0) {\r\n      return breadcrumbs;\r\n    }\r\n\r\n    for (const child of children) {\r\n      const routeURL: string = child.snapshot.url.map((segment) => segment.path).join('/');\r\n      if (routeURL !== '') {\r\n        url += `/${routeURL}`;\r\n      }\r\n\r\n      const label = child.snapshot.data['breadcrumb'];\r\n      if (label) {\r\n        breadcrumbs.push({ label, url });\r\n      }\r\n\r\n      return this.buildBreadcrumb(child, url, breadcrumbs);\r\n    }\r\n\r\n    return breadcrumbs;\r\n  }\r\n}","<nav aria-label=\"breadcrumb\">\r\n  <ol class=\"breadcrumb\">\r\n    <li *ngFor=\"let breadcrumb of breadcrumbs; let last = last\" class=\"breadcrumb-item\" [class.active]=\"last\">\r\n      <a *ngIf=\"!last\" [routerLink]=\"breadcrumb.url\">{{ breadcrumb.label }}</a>\r\n      <span *ngIf=\"last\">{{ breadcrumb.label }}</span>\r\n    </li>\r\n  </ol>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\nimport { IViewBookings } from '../travelAway-interfaces/ViewBookings';\r\n\r\n@Component({\r\n  selector: 'app-view-bookings',\r\n  templateUrl: './view-bookings.component.html',\r\n  styleUrls: ['./view-bookings.component.css']\r\n})\r\nexport class ViewBookingsComponent implements OnInit {\r\n  userRole: string;\r\n  bookings: any[];\r\n  userName: string;\r\n   errorMsg: any;\r\n   rawbookings: any[];\r\n  constructor(private packageService: PackageService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    this.userName = sessionStorage.getItem('userName');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    }\r\n    this.getBookings();\r\n  }\r\n\r\n  getBookings() {\r\n    this.packageService.getBookings(this.userName).subscribe(\r\n      responseTotalStatus => {\r\n        this.rawbookings = responseTotalStatus;\r\n\r\n        for (let booking of this.rawbookings) {\r\n          if (booking['hotelName'] == 'N/A') {\r\n            booking['noOfRooms'] =0;\r\n          }\r\n          if (booking['totalAmount']<0) {\r\n            booking['totalAmount'] = 0;\r\n          \r\n          }\r\n          booking['dateOfTravel'] = booking['dateOfTravel'].substring(0, 10);\r\n        }\r\n        this.bookings = this.rawbookings;\r\n      },\r\n      responseTotalError => {\r\n        this.errorMsg = responseTotalError;\r\n      },\r\n      () => console.log(\"ViewBookings method executed successfully\")\r\n    );\r\n\r\n  }\r\n\r\n  gocustcare(bookingid: string) {\r\n    if (sessionStorage.getItem('bookingId')) {\r\n      sessionStorage.removeItem('bookingId');\r\n    } \r\n    sessionStorage.setItem('bookingId', bookingid);\r\n    this.router.navigate(['/custcare']);\r\n  }\r\n\r\n  gohotelbook(bookingid: string) {\r\n    if (sessionStorage.getItem('bookingId')) {\r\n      sessionStorage.removeItem('bookingId');\r\n    } \r\n    sessionStorage.setItem('bookingId', bookingid);\r\n    this.router.navigate(['/accommodation']);\r\n  }\r\n  gopayment(bookingid: string) {\r\n    if (sessionStorage.getItem('bookingId')) {\r\n      sessionStorage.removeItem('bookingId');\r\n    } \r\n      sessionStorage.setItem('bookingId', bookingid);\r\n\r\n    this.router.navigate(['/payment']);\r\n  }\r\n}\r\n","<!-- <app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">My Bookings</h1>\r\n    <div style=\"width:100%;height:330px;overflow-y:scroll;\">\r\n      <div class=\"row pkgrow\" *ngFor=\"let booking of bookings\">\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Package:</span>&nbsp;&nbsp;&nbsp;{{booking.packageName}}</p>\r\n          <p><span>Places to visit:</span>&nbsp;&nbsp;&nbsp;{{booking.placesToVisit}}</p>\r\n          <p><span>Days/Nights:</span>&nbsp;&nbsp;&nbsp;{{booking.noOfDays}}/{{booking.noOfNights}}</p>\r\n          <p><span>Date of Travel:</span>&nbsp;&nbsp;&nbsp;{{booking.dateOfTravel}}</p>\r\n        </div>\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Hotel:</span>&nbsp;&nbsp;&nbsp;<i *ngIf=\"booking.noOfRooms\">{{booking.hotelName}} ({{booking.noOfRooms}} rooms)</i><i [hidden]=\"booking.noOfRooms\">Not Booked</i></p>\r\n          <p><span>Total Adults/children:</span>&nbsp;&nbsp;&nbsp;{{booking.numberOfAdults}}/{{booking.numberOfChildren}}</p>\r\n          <p><span>Payment:</span>&nbsp;&nbsp;&nbsp;<i *ngIf=\"booking.totalAmount\">&#8377;{{booking.totalAmount}}</i><i [hidden]=\"booking.totalAmount\">Not Paid</i></p>\r\n        </div>\r\n        <div class=\"col-md-2 col-12 pkgdelcol\" style=\"justify-content:space-around\">\r\n          <button class=\"btn btn-primary btn-sm\" [disabled]=\"booking.noOfRooms || booking.totalAmount\" (click)=\"gohotelbook(booking.bookingId)\"><span *ngIf=\"!booking.noOfRooms && !booking.totalAmount\">Book hotel</span><span [hidden]=\"!booking.noOfRooms\">Hotel Booked</span><span *ngIf=\"!booking.noOfRooms && booking.totalAmount\">Hotel Not Booked</span></button>\r\n          <button class=\"btn btn-danger btn-sm\" (click)=\"gocustcare(booking.bookingId)\">Customer Care</button>\r\n          <button class=\"btn btn-success btn-sm\" routerLink=\"/payment\" [disabled]=\"booking.totalAmount\" (click)=\"gopayment(booking.bookingId)\"><span *ngIf=\"!booking.totalAmount\">Make Payment</span><span [hidden]=\"!booking.totalAmount\">Payment done</span></button>\r\n        </div>\r\n      </div>\r\n      <div id=\"nobooking\" [hidden]=\"bookings.length\">\r\n        <h1>No bookings available...</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n\r\n<app-user-layout></app-user-layout>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">My Bookings</h1>\r\n    <div class=\"bookings-container\">\r\n      <div class=\"row pkgrow\" *ngFor=\"let booking of bookings\">\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Package:</span>&nbsp;&nbsp;&nbsp;{{booking.packageName}}</p>\r\n          <p><span>Places to visit:</span>&nbsp;&nbsp;&nbsp;{{booking.placesToVisit}}</p>\r\n          <p><span>Days/Nights:</span>&nbsp;&nbsp;&nbsp;{{booking.noOfDays}}/{{booking.noOfNights}}</p>\r\n          <p><span>Date of Travel:</span>&nbsp;&nbsp;&nbsp;{{booking.dateOfTravel}}</p>\r\n        </div>\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Hotel:</span>&nbsp;&nbsp;&nbsp;<i *ngIf=\"booking.noOfRooms\">{{booking.hotelName}} ({{booking.noOfRooms}} rooms)</i><i [hidden]=\"booking.noOfRooms\">Not Booked</i></p>\r\n          <p><span>Total Adults/children:</span>&nbsp;&nbsp;&nbsp;{{booking.numberOfAdults}}/{{booking.numberOfChildren}}</p>\r\n          <p><span>Payment:</span>&nbsp;&nbsp;&nbsp;<i *ngIf=\"booking.totalAmount\">&#8377;{{booking.totalAmount}}</i><i [hidden]=\"booking.totalAmount\">Not Paid</i></p>\r\n        </div>\r\n        <div class=\"col-md-2 col-12 pkgdelcol img-container\">\r\n          <button class=\"btn btn-primary btn-sm\" [disabled]=\"booking.noOfRooms || booking.totalAmount\" (click)=\"gohotelbook(booking.bookingId)\">\r\n            <span *ngIf=\"!booking.noOfRooms && !booking.totalAmount\">Book hotel</span>\r\n            <span [hidden]=\"!booking.noOfRooms\">Hotel Booked</span>\r\n            <span *ngIf=\"!booking.noOfRooms && booking.totalAmount\">Hotel Not Booked</span>\r\n          </button>\r\n          <button class=\"btn btn-danger btn-sm\" (click)=\"gocustcare(booking.bookingId)\">Customer Care</button>\r\n          <button class=\"btn btn-success btn-sm\" routerLink=\"/payment\" [disabled]=\"booking.totalAmount\" (click)=\"gopayment(booking.bookingId)\">\r\n            <span *ngIf=\"!booking.totalAmount\">Make Payment</span>\r\n            <span [hidden]=\"!booking.totalAmount\">Payment done</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div id=\"nobooking\" *ngIf=\"!bookings.length\">\r\n        <h1>No bookings available...</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\n\r\n@Component({\r\n  selector: 'app-view-hotels',\r\n  templateUrl: './view-hotels.component.html',\r\n  styleUrls: ['./view-hotels.component.css']\r\n})\r\nexport class ViewHotelsComponent implements OnInit {\r\n  userRole: string;\r\n    errorMsg: any;\r\n  hotels: any[]=[];\r\n  constructor(private packageService: PackageService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Employee\") {\r\n      this.router.navigate(['/login/2']);\r\n    }\r\n    this.getHotels();\r\n  }\r\n  getHotels() {\r\n    this.packageService.getHotels().subscribe(\r\n      responseHotelStatus => {\r\n        this.hotels = responseHotelStatus;\r\n        console.log(this.hotels);\r\n      },\r\n      responseHotelError => {\r\n        this.errorMsg = responseHotelError;\r\n      },\r\n      () => console.log(\"ViewHotels method executed successfully\")\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n\r\n<app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">My Hotels</h1>\r\n    <div class=\"hotels-container\">\r\n      <div class=\"row pkgrow\" *ngFor=\"let hotel of hotels\">\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Hotel Name:</span>&nbsp;&nbsp;&nbsp;{{hotel.hotelName}}</p>\r\n          <p><span>Hotel Rating:</span>&nbsp;&nbsp;&nbsp;{{hotel.hotelRating}}-star</p>\r\n          <p><span>Single Room Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{hotel.singleRoomPrice}}</p>\r\n        </div>\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Double Room Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{hotel.doubleRoomPrice}}</p>\r\n          <p><span>Deluxe Room Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{hotel.deluxeeRoomPrice}}</p>\r\n          <p><span>Suite Room Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{hotel.suiteRoomPrice}}</p>\r\n        </div>\r\n        <div class=\"col-md-2 col-12 pkgdelcol img-container\">\r\n          <img src=\"../assets/hotels.png\" alt=\"Hotel Image\" class=\"pkgimg\" />\r\n        </div>\r\n      </div>\r\n      <div id=\"nohotel\" [hidden]=\"hotels?.length\">\r\n        <h1>No hotels available...</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PackageService } from \"../../travelAway-services/package-service/package.service\";\r\nimport { IPackageDetails } from '../travelAway-interfaces/PackageDetails';\r\n\r\n@Component({\r\n  selector: 'app-view-package-details',\r\n  templateUrl: './view-package-details.component.html',\r\n  styleUrls: ['./view-package-details.component.css']\r\n})\r\nexport class ViewPackageDetailsComponent implements OnInit {\r\n  packageId: string;\r\n  packageName: string;\r\n  packageDetails: IPackageDetails[];\r\n  showMsgDiv: boolean = false;\r\n  errMsg: string;\r\n  userRole: string;\r\n  customerLayout: boolean = false;\r\n  commonLayout: boolean = false;\r\n  constructor(private packageService: PackageService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    } else if (this.userRole == \"Customer\") {\r\n      this.customerLayout = true;\r\n    }\r\n    this.packageId = this.route.snapshot.params['packageId'];\r\n    this.packageName = this.route.snapshot.params['packageName'];\r\n    this.getPackageDetails(this.packageId);\r\n\r\n    if (this.packageDetails == null) {\r\n      this.showMsgDiv = true;\r\n    }\r\n  }\r\n\r\n\r\n  getPackageDetails(packageId: string) {\r\n    this.packageService.getPackageDetails(packageId).subscribe(\r\n      responseData => {\r\n        this.packageDetails = responseData;\r\n        console.log(this.packageDetails);\r\n        this.showMsgDiv = false;\r\n      },\r\n      responseError => {\r\n        this.packageDetails = null;\r\n        this.errMsg = responseError;\r\n        console.log(this.errMsg);\r\n      },\r\n      () => console.log(\"GetPackageDetails method excuted successfully\")\r\n    );\r\n  }\r\n\r\n  // navigateToBookPackage(packageDetailsId: number) {\r\n  //   this.router.navigate(['bookpkg', packageDetailsId]);\r\n  // }\r\n  navigateToBookPackage(packageDetailsId: number, packageName: string) {\r\n  this.router.navigate(['bookpkg', packageDetailsId], { queryParams: { name: packageName } });\r\n}\r\n}\r\n","\r\n<div *ngIf=\"commonLayout\">\r\n  <app-common-layout></app-common-layout>\r\n</div>\r\n<div *ngIf=\"customerLayout\">\r\n  <app-user-layout></app-user-layout>\r\n</div>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">Package Details: <span>{{packageName}}</span></h1>\r\n    <div class=\"pkgrow\" *ngFor=\"let packageDetail of packageDetails\">\r\n      <div class=\"col-md-3 col-12 pkgdelcol\">\r\n        <h5>Places to visit</h5>\r\n        <p>{{packageDetail.placesToVisit}}</p>\r\n          <img src=\"{{packageDetail.imagePath}}\" alt=\"image\" class=\"img-thumbnail pkgimg\" id=\"pkgdis\" />\r\n      </div>\r\n      <div class=\"col-md-6 col-12 pkgdelcol\">\r\n        <h5>Package Description</h5>\r\n        <p>{{packageDetail.description}}</p>\r\n      </div>\r\n      <div class=\"col-md-3 col-12 pkgdelcol\">\r\n        <h5>Details</h5>\r\n        <p><span class=\"boldtext\">Days/Nights: </span><span>{{packageDetail.noOfDays}} / {{packageDetail.noOfNights}}</span></p>\r\n        <p><span class=\"boldtext\">Price: </span><span>{{packageDetail.pricePerAdult}}</span></p>\r\n        <p><span class=\"boldtext\">Accommodation: </span><span>{{packageDetail.accomodation}}</span></p>\r\n        <button type=\"button\" id=\"bookingbtn\" (click)=\"navigateToBookPackage(packageDetail.packageDetailsId,packageDetail.placesToVisit)\">Book</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IPackage } from '../travelAway-interfaces/Package';\r\nimport { ICategory } from '../travelAway-interfaces/Category';\r\nimport { PackageService } from \"../../travelAway-services/package-service/package.service\";\r\n@Component({\r\n  selector: 'app-view-packages',\r\n  templateUrl: './view-packages.component.html',\r\n  styleUrls: ['./view-packages.component.css']\r\n})\r\nexport class ViewPackagesComponent implements OnInit {\r\n  packages: IPackage[];\r\n  categories: ICategory[];\r\n  filteredPackages: IPackage[];\r\n  errorMsg: string;\r\n  showMsg: boolean;\r\n  imagePath: string;\r\n  userRole: string;\r\n  customerLayout: boolean = false;\r\n  commonLayout: boolean = false;\r\n  \r\n  constructor(private packageService: PackageService, private router: Router) {\r\n \r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Customer\") {\r\n      this.router.navigate(['/login/1']);\r\n    } else if (this.userRole == \"Customer\") {\r\n      this.customerLayout = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPackages();\r\n    this.getCategories();\r\n\r\n    if (this.packages == null) {\r\n      this.showMsg = true;\r\n    }\r\n\r\n    this.filteredPackages = this.packages\r\n\r\n    this.imagePath = \"src/assets/\"\r\n  }\r\n  getPackages() {\r\n    this.packageService.getPackages().subscribe(\r\n      responseGet => {\r\n        this.showMsg = false;\r\n        this.packages = responseGet;\r\n        this.filteredPackages = responseGet\r\n      },\r\n      resonseError => {\r\n        this.showMsg = true\r\n        this.packages = null\r\n        this.errorMsg = resonseError\r\n      },\r\n      () => console.log(\"GetPackage method executed\",this.packages)\r\n    )\r\n  }\r\n\r\n  getCategories() {\r\n    this.packageService.getCategories().subscribe(\r\n      responseGet => {\r\n        this.categories = responseGet\r\n        console.log(this.categories)\r\n      },\r\n      responseError => {\r\n        this.errorMsg = responseError\r\n        this.categories = null\r\n      },\r\n      () => console.log(\"Get categories executed\")\r\n    )\r\n  }\r\n\r\n  searchPackageByCategory(categoryId: string) {\r\n    //console.log(categoryId)\r\n    this.filteredPackages = this.packages;\r\n    //if (categoryId == \"100\") {\r\n    //  this.filteredPackages = this.packages;\r\n    //}\r\n    //else {\r\n    \r\n    var catid = parseInt(categoryId)\r\n    if (catid > 0) {\r\n      this.filteredPackages = this.filteredPackages.filter(prod => prod.packageCategoryId == catid);\r\n    }\r\n    \r\n    console.log(this.filteredPackages);\r\n    //}\r\n  }\r\n\r\n  viewPackageDetails(packageId: number,packageName:string) {\r\n    console.log(packageId);\r\n    this.router.navigate(['viewPackageDetails', packageId,packageName]);\r\n  }\r\n}\r\n","<div *ngIf=\"commonLayout\">\r\n  <app-common-layout></app-common-layout>\r\n</div>\r\n<div *ngIf=\"customerLayout\">\r\n  <app-user-layout></app-user-layout>\r\n</div>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">Packages</h1>\r\n    <div class=\"row\" style=\"padding-bottom:5px;\">\r\n      <div class=\"col-md-10 filter\" id=\"filter\">\r\n        <label>Filter packages:</label>\r\n      </div>\r\n      <div class=\"col-md-2 filter\">\r\n        <select class=\"form-control\" id=\"cat\" #categorydrop (change)=\"searchPackageByCategory(categorydrop.value)\">\r\n          <option value=\"0\">All Categories</option>\r\n          <option *ngFor=\"let category of categories\" value={{category.packageCategoryId}}>\r\n            {{category.packageCategoryName}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div class=\"row pkgrow\" *ngFor=\"let package of filteredPackages\">\r\n        <div class=\"col-md-3 col-sm-4 col-0\">\r\n          <img src=\"{{package.imagePath}}\" alt=\"image\" class=\"img-thumbnail pkgimg\" id=\"pkgdis\" (click)=\"viewPackageDetails(package.packageId,package.packageName)\" />\r\n        </div>\r\n        <div class=\"col-md-9 col-sm-8 col-12 pkgcol\">\r\n          <h3 (click)=\"viewPackageDetails(package.packageId,package.packageName)\">{{package.packageName}}</h3>\r\n          <p>Explore the {{package.packageName}} with us! </p>\r\n          <p>{{package.description}}</p> \r\n         </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PackageService } from '../../travelAway-services/package-service/package.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-view-vehicles',\r\n  templateUrl: './view-vehicles.component.html',\r\n  styleUrls: ['./view-vehicles.component.css']\r\n})\r\nexport class ViewVehiclesComponent implements OnInit {\r\n  userRole: string;\r\n  vehicles: any[];\r\n   errorMsg: any;\r\n  constructor(private packageService: PackageService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userRole = sessionStorage.getItem('userRole');\r\n    if (this.userRole != \"Employee\") {\r\n      this.router.navigate(['/login/2']);\r\n    }\r\n    this.getVehicles();\r\n  }\r\n  getVehicles() {\r\n    this.packageService.getVehicles().subscribe(\r\n      responseVehicleStatus => {\r\n        this.vehicles = responseVehicleStatus;\r\n      },\r\n      responseVehicleError => {\r\n        this.errorMsg = responseVehicleError;\r\n      },\r\n      () => console.log(\"ViewVehicles method executed successfully\")\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n<app-employee-layout></app-employee-layout>\r\n<div class=\"content\">\r\n  <div id=\"packages\">\r\n    <h1 id=\"pkgheading\">My Vehicles</h1>\r\n    <div class=\"vehicles-container\">\r\n      <div class=\"row pkgrow\" *ngFor=\"let vehicle of vehicles\">\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Vehicle Name:</span>&nbsp;&nbsp;&nbsp;{{vehicle.vehicleName}}</p>\r\n          <p><span>Vehicle Type:</span>&nbsp;&nbsp;&nbsp;{{vehicle.vehicleType}}</p>\r\n          <p><span>Rate Per Km:</span>&nbsp;&nbsp;&nbsp;&#8377;{{vehicle.ratePerKm}}</p>\r\n        </div>\r\n        <div class=\"col-md-5 col-12 pkgdelcol\">\r\n          <p><span>Rate Per Hour:</span>&nbsp;&nbsp;&nbsp;&#8377;{{vehicle.ratePerHour}}</p>\r\n          <p><span>Base Price:</span>&nbsp;&nbsp;&nbsp;&#8377;{{vehicle.basePrice}}</p>\r\n        </div>\r\n        <div class=\"col-md-2 col-12 pkgdelcol img-container\">\r\n          <img src=\"../assets/car.png\" alt=\"Vehicle Image\" class=\"pkgimg\" />\r\n        </div>\r\n      </div>\r\n      <div id=\"novehicle\" *ngIf=\"!vehicles.length\">\r\n        <h1>No vehicles available...</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\ninterface AuthResponse {\r\n  token: string;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = 'https://localhost:44393/api/auth'; // Replace with your .NET API URL\r\n  //private apiUrl ='https://localhost:44393/api/Auth/customer/login/CustomerLogin';\r\n  private tokenSubject = new BehaviorSubject<string | null>(this.getToken());\r\n  public token$ = this.tokenSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient,private jwtHelper: JwtHelperService) {}\r\n\r\n  login(EmailId: string, UserPassword: string,loginRole: number): Observable<AuthResponse> {\r\n    const Password=UserPassword;\r\n    if (loginRole == 1) \r\n    {\r\n    return this.http.post<AuthResponse>(`${this.apiUrl}/customer/login`, { EmailId: EmailId, UserPassword: UserPassword}).pipe(\r\n      tap((response) => this.saveToken(response.token))\r\n    );\r\n    }\r\n    if (loginRole == 2) \r\n    {\r\n      return this.http.post<AuthResponse>(`${this.apiUrl}/employee/login`, { EmailId: EmailId, Password: Password}).pipe(\r\n        tap((response) => this.saveToken(response.token))\r\n      );\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.clearToken();\r\n    this.tokenSubject.next(null);\r\n    // Optionally redirect the user to the login page\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('authToken');\r\n  }\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('authToken', token);\r\n    this.tokenSubject.next(token);\r\n  }\r\n\r\n    decodeToken(): any {\r\n    const token = this.getToken();\r\n    if (token) {\r\n      return this.jwtHelper.decodeToken(token);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getRole(): string | null {\r\n    const decodedToken = this.decodeToken();\r\n    console.log(\"decode\",decodedToken);\r\n    return decodedToken ? decodedToken['role'] : null; // Assuming your role claim is named 'role'\r\n  }\r\n\r\n  private clearToken(): void {\r\n    localStorage.removeItem('authToken');\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth-service/authservice';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  // intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n  //   return next.handle(request);\r\n  // }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    if (authToken) {\r\n      const authReq = req.clone({\r\n        headers: req.headers.set('Authorization', `Bearer ${authToken}`),\r\n      });\r\n      return next.handle(authReq);\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { IPackage } from 'src/app/travelAway-interfaces/Package';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ICategory } from '../../app/travelAway-interfaces/Category';\r\nimport { IPackageDetails } from '../../app/travelAway-interfaces/PackageDetails';\r\nimport { IBookPackage } from '../../app/travelAway-interfaces/BookPackage';\r\nimport { IViewBookings } from '../../app/travelAway-interfaces/ViewBookings';\r\nimport { IVehicle } from '../../app/travelAway-interfaces/Vehicle';\r\nimport { IHotel } from '../../app/travelAway-interfaces/Hotel';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PackageService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPackages(): Observable<IPackage[]> {\r\n    let temp = this.http.get<IPackage[]>('https://localhost:44393/api/TravelAway/GetPackages').pipe(catchError(this.errorHandler))\r\n    return temp;\r\n  }\r\n\r\n  getVehicles(): Observable<IVehicle[]> {\r\n    let temp = this.http.get<IVehicle[]>('https://localhost:44393/api/TravelAway/GetVehicles').pipe(catchError(this.errorHandler))\r\n    return temp;\r\n  }\r\n\r\n  getHotels(): Observable<IHotel[]> {\r\n    let temp = this.http.get<IHotel[]>('https://localhost:44393/api/TravelAway/GetHotels').pipe(catchError(this.errorHandler))\r\n    return temp;\r\n  }\r\n\r\n  getCategories(): Observable<ICategory[]> {\r\n    return this.http.get<ICategory[]>('https://localhost:44393/api/TravelAway/GetPackageCategories').pipe(catchError(this.errorHandler));\r\n  }\r\n  getPackageDetails(packageId: string): Observable<IPackageDetails[]> {\r\n    let PackageId = { packageId: packageId };\r\n    let temp = this.http.get<IPackageDetails[]>('https://localhost:44393/api/TravelAway/GetPackageDetailsByPackageId', { params: PackageId }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  bookPackage(bookedpkg: IBookPackage): Observable<number> {\r\n    let temp = this.http.post<number>('https://localhost:44393/api/TravelAway/AddBookPackage', bookedpkg).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getBookings(email: string): Observable<IViewBookings[]> {\r\n    let Email = { email: email };\r\n    let temp = this.http.get<IViewBookings[]>('https://localhost:44393/api/TravelAway/ViewBookedPackages', { params: Email }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    console.error(error);\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { IPackage } from 'src/app/travelAway-interfaces/Package';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { IEmployee } from '../../app/travelAway-interfaces/Employee';\r\nimport { ICustomer } from '../../app/travelAway-interfaces/Customer';\r\nimport { IHotel } from '../../app/travelAway-interfaces/Hotel';\r\nimport { IVehicle } from '../../app/travelAway-interfaces/Vehicle';\r\nimport { IcustCare } from '../../app/travelAway-interfaces/CustomerCare';\r\nimport { IAccommodation } from '../../app/travelAway-interfaces/Accommodation';\r\nimport { IPayment } from '../../app/travelAway-interfaces/Payment';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  \r\n  }\r\n  //for login\r\n  validateCredentials(email: string, password: string,loginRole: number): Observable<number> {\r\n    let temp;\r\n    if (loginRole == 1) {\r\n      var custObj: ICustomer;\r\n     // custObj = { EmailId: email, UserPassword: password, FirstName:null,LastName:null,RoleId: null,Gender:null,DateOfBirth: null, Address: null,ContactNumber:null};\r\n      temp = this.http.post<number>('https://localhost:44393/api/TravelAway/ValidateLoginCustomer', { EmailId: email, UserPassword: password}).pipe(catchError(this.errorHandler))\r\n    } else if (loginRole == 2) {\r\n      var EmpObj: IEmployee;\r\n      EmpObj = { EmailId: email, Password: password, FirstName: null, LastName: null, RoleId:null};\r\n      temp = this.http.post<number>('https://localhost:44393/api/TravelAway/ValidateLoginEmployee',EmpObj).pipe(catchError(this.errorHandler))\r\n\r\n    }\r\n    return temp;\r\n  }\r\n  //for register\r\n  addUserDetails(firstName: string, lastName: string, emailId: string,\r\n    password: string, contactNumber: number, address: string, gender: string, dateOfBirth: Date, roleId: number): Observable<number> {\r\n    var custObj: ICustomer;\r\n    custObj = { EmailId: emailId, UserPassword: password, FirstName: firstName, LastName: lastName, RoleId: roleId, Gender: gender, DateOfBirth: dateOfBirth, Address: address, ContactNumber: contactNumber };\r\n    let temp = this.http.post<number>('https://localhost:44393/api/TravelAway/AddCustomer', custObj).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  updateUserDetails(firstName: string, lastName: string, emailId: string,\r\n    password: string, contactNumber: number, address: string, gender: string, dateOfBirth: Date, roleId: number): Observable<boolean> {\r\n    var custObj: ICustomer;\r\n    custObj = { EmailId: emailId, UserPassword: password, FirstName: firstName, LastName: lastName, RoleId: roleId, Gender: gender, DateOfBirth: dateOfBirth, Address: address, ContactNumber: contactNumber };\r\n    let temp = this.http.put<boolean>('https://localhost:44393/api/TravelAway/UpdateProfile', custObj).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getCustomerById(emailId: string): Observable<ICustomer> {\r\n    let CustId = { emailId: emailId };\r\n    let temp = this.http.get<ICustomer>('https://localhost:44393/api/TravelAway/GetCustomerDetails', { params: CustId }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  addHotel(hotel: IHotel): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/AddHotel', hotel).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  addVehicle(vehicle: IVehicle): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/AddVehicle', vehicle).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  custCare(query: IcustCare): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/AddCustomerCare', query).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getassignee(): Observable<number> {\r\n    let temp = this.http.get<number>('https://localhost:44393/api/TravelAway/GetAssignee').pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n  getTotal(bookingId: string): Observable<number> {\r\n    let BookId = { bookingId: bookingId };\r\n    let temp = this.http.get<number>('https://localhost:44393/api/TravelAway/GetTotal', { params: BookId }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getCitiesByBookId(bookingId: string): Observable<string> {\r\n    let BookId = { bookingId: bookingId };\r\n    let temp = this.http.get<string>('https://localhost:44393/api/TravelAway/GetCityByPackageDetailsId', { params: BookId }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getHotelRatingByCity(city: string): Observable<number[]> {\r\n    let City = { city: city };\r\n    let temp = this.http.get<number[]>('https://localhost:44393/api/TravelAway/GetHotelRatingsByCity', { params: City }).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getHotelsByCityAndRating(city: string, rating: string): Observable<string[]> {\r\n  // let CityandRating = { city: city,rating: rating};\r\n    //let params = new HttpParams().set('city', city).set('rating', rating);\r\n    //console.log(\"mayank\",params);\r\n    let address: string = 'https://localhost:44393/api/TravelAway/GetHotelsByCityAndRating?city=' + city + '&rating=' + rating;\r\n    let temp = this.http.get<string[]>(address).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  getCost(hotelName: string, roomtype: string): Observable<number> {\r\n \r\n    let address: string = 'https://localhost:44393/api/TravelAway/GetHotelCost?hotelName=' + hotelName + '&roomtype=' + roomtype;\r\n    let temp = this.http.get<number>(address).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n  bookAccommodation(accommodation: IAccommodation): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/AddAccomodationDetails', accommodation).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n\r\n  makePayment(pay:IPayment): Observable<boolean> {\r\n    let temp = this.http.post<boolean>('https://localhost:44393/api/TravelAway/Payment', pay).pipe(catchError(this.errorHandler));\r\n    return temp;\r\n  }\r\n\r\n    errorHandler(error: HttpErrorResponse) {\r\n      console.error(error);\r\n      return throwError(error.message || \"Server Error\");\r\n    }\r\n  }\r\n","/* (ignored) */"]}